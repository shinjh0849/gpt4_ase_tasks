['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'v', 'center', ');', '}']
['▁public', '▁void', '▁addAll', '(', 'Block', 'List', '<', 'T', '>', '▁src', ')', '▁{', 'if', '▁(', 'src', '.', 'size', '▁==', '▁0)', 'return', ';', 'int', '▁src', 'Dir', 'Idx', '▁=', '▁0;', 'for', '▁(', ';', '▁src', 'Dir', 'Idx', '▁<', '▁src', '.', 'tail', 'Dir', 'Idx', ';', '▁src', 'Dir', 'Idx', '++)', 'addAll', '(', 'src', '.', 'directory', '[', 'src', 'Dir', 'Idx', '],', '▁0,', '▁BLOCK', '_', 'SIZE', ');', 'if', '▁(', 'src', '.', 'tail', 'Bl', 'k', 'Idx', '▁!=', '▁0)', 'addAll', '(', 'src', '.', 'tail', 'Block', ',', '▁0,', '▁src', '.', 'tail', 'Bl', 'k', 'Idx', ');', '}']
['▁public', '▁void', '▁writeByte', '(', 'byte', '▁b', ')', '▁{', 'if', '▁(', 'upt', 'o', '▁==', '▁blockSize', ')', '▁{', 'if', '▁(', 'current', 'Block', '▁!=', '▁null', ')', '▁{', 'add', 'Block', '(', 'current', 'Block', ');', '}', 'current', 'Block', '▁=', '▁new', '▁byte', '[', 'block', 'Size', '];', 'upt', 'o', '▁=', '▁0;', '}', 'current', 'Block', '[', 'upt', 'o', '++', ']', '▁=', '▁b', ';}']
['▁public', '▁ObjectId', '▁getObjectId', '()', '▁{', 'return', '▁objectId', ';}']
['▁public', '▁Delete', 'Domain', 'Entry', 'Result', '▁delete', 'Domain', 'Entry', '(', 'Delete', 'Domain', 'Entry', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Domain', 'Entry', '(', 'request', ');', '}']
['▁public', '▁long', '▁ram', 'Bytes', 'Used', '()', '▁{', 'return', '▁((', 'term', 'Offsets', '!=', 'null', ')?', '▁term', 'Offsets', '.', 'ram', 'Bytes', 'Used', '()', '▁:', '▁0)', '▁+', '((', 'terms', 'Dict', 'Offsets', '!=', 'null', ')?', '▁terms', 'Dict', 'Offsets', '.', 'ram', 'Bytes', 'Used', '()', '▁:', '▁0);', '}']
['▁public', '▁final', '▁String', '▁getFull', 'Message', '()', '▁{', 'byte', '[]', '▁raw', '▁=', '▁buffer', ';', 'int', '▁msg', 'B', '▁=', '▁Raw', 'Parse', 'Utils', '.', 'tag', 'Message', '(', 'raw', ',', '▁0);', 'if', '▁(', 'msg', 'B', '▁<', '▁0)', '▁{', 'return', '▁"";', '▁}', 'return', '▁Raw', 'Parse', 'Utils', '.', 'decode', '(', 'guess', 'Encoding', '(),', '▁raw', ',', '▁msg', 'B', ',', '▁raw', '.', 'length', ');', '}']
['▁public', '▁POI', 'FS', 'FileSystem', '()', '▁{', 'this', '(', 'true', ');', '_', 'header', '.', 'set', 'B', 'AT', 'Count', '(1);', '_', 'header', '.', 'set', 'B', 'AT', 'Array', '(', 'new', '▁int', '[]{', '1', '});', 'B', 'AT', 'Block', '▁bb', '▁=', '▁B', 'AT', 'Block', '.', 'create', 'Empty', 'B', 'AT', 'Block', '(', 'big', 'BlockSize', ',', '▁false', ');', 'bb', '.', 'set', 'O', 'ur', 'Block', 'Index', '(1);', '_', 'bat', '_', 'blocks', '.', 'add', '(', 'bb', ');', 'set', 'Next', 'Block', '(0,', '▁POI', 'FS', 'Constants', '.', 'END', '_', 'OF', '_', 'CH', 'AIN', ');', 'set', 'Next', 'Block', '(1,', '▁POI', 'FS', 'Constants', '.', 'F', 'AT', '_', 'SE', 'CTOR', '_', 'BLOCK', ');', '_', 'property', '_', 'table', '.', 'set', 'Start', 'Block', '(0);', '}']
['▁public', '▁void', '▁init', '(', 'int', '▁address', ')', '▁{', 'slice', '▁=', '▁pool', '.', 'buffers', '[', 'address', '▁>>', '▁Byte', 'Block', 'Pool', '.', 'BYTE', '_', 'BLOCK', '_', 'SHIFT', '];', 'assert', '▁slice', '▁!=', '▁null', ';', 'upt', 'o', '▁=', '▁address', '▁&', '▁Byte', 'Block', 'Pool', '.', 'BYTE', '_', 'BLOCK', '_', 'MASK', ';', 'offset', '0', '▁=', '▁address', ';', 'assert', '▁upto', '▁<', '▁slice', '.', 'length', ';}']
['▁public', '▁Sub', 'module', 'Add', 'Command', '▁setPath', '(', 'String', '▁path', ')', '▁{', 'this', '.', 'path', '▁=', '▁path', ';', 'return', '▁this', ';}']
['▁public', '▁List', 'Ing', 'estions', 'Result', '▁list', 'Ing', 'estions', '(', 'List', 'Ing', 'estions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Ing', 'estions', '(', 'request', ');', '}']
['▁public', '▁Query', 'Parser', 'Token', 'Manager', '(', 'Char', 'Stream', '▁stream', ',', '▁int', '▁lex', 'State', '){', 'this', '(', 'stream', ');', 'Switch', 'To', '(', 'lex', 'State', ');', '}']
['▁public', '▁Get', 'Shard', 'Iterator', 'Result', '▁getShard', 'Iterator', '(', 'Get', 'Shard', 'Iterator', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Shard', 'Iterator', '(', 'request', ');', '}']
['▁public', '▁Modify', 'Strategy', 'Request', '()', '▁{', 'super', '("', 'a', 'eg', 'is', '",', '▁"2016', '-11', '-11', '",', '▁"', 'Modify', 'Strategy', '",', '▁"', 'v', 'ip', 'a', 'eg', 'is', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁boolean', '▁ready', '()', '▁throws', '▁IOException', '▁{', 'synchron', 'ized', '▁(', 'lock', ')', '▁{', 'if', '▁(', 'in', '▁==', '▁null', ')', '▁{', 'throw', '▁new', '▁IOException', '("', 'InputStream', 'Reader', '▁is', '▁closed', '");', '}', 'try', '▁{', 'return', '▁bytes', '.', 'has', 'Remaining', '()', '▁||', '▁in', '.', 'available', '()', '▁>', '▁0;', '}', '▁catch', '▁(', 'IOException', '▁e', ')', '▁{', 'return', '▁false', ';', '}}', '}']
['▁public', '▁E', 'sch', 'er', 'Opt', 'Record', '▁get', 'Opt', 'Record', '()', '▁{', 'return', '▁_', 'opt', 'Record', ';}']
['▁public', '▁synchronized', '▁int', '▁read', '(', 'byte', '[]', '▁buffer', ',', '▁int', '▁offset', ',', '▁int', '▁length', ')', '▁{', 'if', '▁(', 'buffer', '▁==', '▁null', ')', '▁{', 'throw', '▁new', '▁Null', 'PointerException', '("', 'buffer', '▁==', '▁null', '");', '}', 'Arrays', '.', 'check', 'Offset', 'And', 'Count', '(', 'buffer', '.', 'length', ',', '▁offset', ',', '▁length', ');', 'if', '▁(', 'length', '▁==', '▁0)', '▁{', 'return', '▁0;', '}', 'int', '▁copy', 'len', '▁=', '▁count', '▁-', '▁pos', '▁<', '▁length', '▁?', '▁count', '▁-', '▁pos', '▁:', '▁length', ';', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁copy', 'len', ';', '▁i', '++)', '▁{', 'buffer', '[', 'offset', '▁+', '▁i', ']', '▁=', '▁(', 'byte', ')', '▁this', '.', 'buffer', '.', 'charAt', '(', 'pos', '▁+', '▁i', ');', '}', 'pos', '▁+=', '▁copy', 'len', ';', 'return', '▁copy', 'len', ';}']
['▁public', '▁Open', 'N', 'L', 'PS', 'ent', 'ence', 'Break', 'Iterator', '(', 'N', 'L', 'PS', 'ent', 'ence', 'Detector', 'Op', '▁sentence', 'Op', ')', '▁{', 'this', '.', 'sentence', 'Op', '▁=', '▁sentence', 'Op', ';}']
['▁public', '▁void', '▁print', '(', 'String', '▁str', ')', '▁{', 'write', '(', 'str', '▁!=', '▁null', '▁?', '▁str', '▁:', '▁String', '.', 'valueOf', '((', 'Object', ')', '▁null', '));', '}']
['▁public', '▁NotImplemented', 'Function', 'Exception', '(', 'String', '▁functionName', ',', '▁NotImplemented', 'Exception', '▁cause', ')', '▁{', 'super', '(', 'function', 'Name', ',', '▁cause', ');', 'this', '.', 'function', 'Name', '▁=', '▁functionName', ';}']
['▁public', '▁V', '▁next', '()', '▁{', 'return', '▁super', '.', 'next', 'Entry', '().', 'getValue', '();', '}']
['▁public', '▁final', '▁void', '▁readBytes', '(', 'byte', '[]', '▁b', ',', '▁int', '▁offset', ',', '▁int', '▁len', ',', '▁boolean', '▁use', 'Buffer', ')', '▁throws', '▁IOException', '▁{', 'int', '▁available', '▁=', '▁buffer', 'Length', '▁-', '▁buffer', 'Position', ';', 'if', '(', 'len', '▁<=', '▁available', '){', 'if', '(', 'len', '>', '0)', '▁System', '.', 'array', 'copy', '(', 'buffer', ',', '▁buffer', 'Position', ',', '▁b', ',', '▁offset', ',', '▁len', ');', 'buffer', 'Position', '+=', 'len', ';}', '▁else', '▁{', 'if', '(', 'available', '▁>', '▁0){', 'System', '.', 'array', 'copy', '(', 'buffer', ',', '▁buffer', 'Position', ',', '▁b', ',', '▁offset', ',', '▁available', ');', 'offset', '▁+=', '▁available', ';', 'len', '▁-=', '▁available', ';', 'buffer', 'Position', '▁+=', '▁available', ';}', 'if', '▁(', 'use', 'Buffer', '▁&&', '▁len', '<', 'buffer', 'Size', '){', 'ref', 'ill', '();', 'if', '(', 'buffer', 'Length', '<', 'len', '){', 'System', '.', 'array', 'copy', '(', 'buffer', ',', '▁0,', '▁b', ',', '▁offset', ',', '▁buffer', 'Length', ');', 'throw', '▁new', '▁EOFException', '("', 'read', '▁past', '▁EOF', ':', '▁"', '▁+', '▁this', ');', '}', '▁else', '▁{', 'System', '.', 'array', 'copy', '(', 'buffer', ',', '▁0,', '▁b', ',', '▁offset', ',', '▁len', ');', 'buffer', 'Position', '=', 'len', ';', '}}', '▁else', '▁{', 'long', '▁after', '▁=', '▁buffer', 'Start', '+', 'buffer', 'Position', '+', 'len', ';', 'if', '(', 'after', '▁>', '▁length', '())', 'throw', '▁new', '▁EOFException', '("', 'read', '▁past', '▁EOF', ':', '▁"', '▁+', '▁this', ');', 'read', 'Internal', '(', 'b', ',', '▁offset', ',', '▁len', ');', 'buffer', 'Start', '▁=', '▁after', ';', 'buffer', 'Position', '▁=', '▁0;', 'buffer', 'Length', '▁=', '▁0;', '▁}', '}}']
['▁public', '▁Tag', 'Queue', 'Result', '▁tag', 'Queue', '(', 'Tag', 'Queue', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Tag', 'Queue', '(', 'request', ');', '}']
['▁public', '▁void', '▁remove', '()', '▁{', 'throw', '▁new', '▁Unsupported', 'Operation', 'Exception', '();', '}']
['▁public', '▁Cache', 'Subnet', 'Group', '▁modify', 'Cache', 'Subnet', 'Group', '(', 'Modify', 'Cache', 'Subnet', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Modify', 'Cache', 'Subnet', 'Group', '(', 'request', ');', '}']
['▁public', '▁void', '▁set', 'Params', '(', 'String', '▁params', ')', '▁{', 'super', '.', 'set', 'Params', '(', 'params', ');', 'language', '▁=', '▁country', '▁=', '▁variant', '▁=', '▁"";', 'String', 'Tokenizer', '▁st', '▁=', '▁new', '▁StringTokenizer', '(', 'params', ',', '▁",', '");', 'if', '▁(', 'st', '.', 'has', 'More', 'Tokens', '())', 'language', '▁=', '▁st', '.', 'next', 'Token', '();', 'if', '▁(', 'st', '.', 'has', 'More', 'Tokens', '())', 'country', '▁=', '▁st', '.', 'next', 'Token', '();', 'if', '▁(', 'st', '.', 'has', 'More', 'Tokens', '())', 'variant', '▁=', '▁st', '.', 'next', 'Token', '();', '}']
['▁public', '▁Delete', 'Documentation', 'Version', 'Result', '▁delete', 'Documentation', 'Version', '(', 'Delete', 'Documentation', 'Version', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Documentation', 'Version', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁obj', ')', '▁{', 'if', '▁(!', '(', 'obj', '▁instanceof', '▁Facet', 'Label', '))', '▁{', 'return', '▁false', ';}', 'Facet', 'Label', '▁other', '▁=', '▁(', 'Facet', 'Label', ')', '▁obj', ';', 'if', '▁(', 'length', '▁!=', '▁other', '.', 'length', ')', '▁{', 'return', '▁false', ';', '▁}', 'for', '▁(', 'int', '▁i', '▁=', '▁length', '▁-', '▁1;', '▁i', '▁>=', '▁0;', '▁i', '--)', '▁{', 'if', '▁(!', 'components', '[', 'i', '].', 'equals', '(', 'other', '.', 'components', '[', 'i', ']))', '▁{', 'return', '▁false', ';', '}}', 'return', '▁true', ';}']
['▁public', '▁GetInstance', 'Access', 'Details', 'Result', '▁getInstance', 'Access', 'Details', '(', 'Get', 'Instance', 'Access', 'Details', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Instance', 'Access', 'Details', '(', 'request', ');', '}']
['▁public', '▁H', 'SSF', 'Polygon', '▁create', 'Polygon', '(', 'H', 'SSF', 'Child', 'Anchor', '▁anchor', ')', '▁{', 'H', 'SSF', 'Polygon', '▁shape', '▁=', '▁new', '▁H', 'SSF', 'Polygon', '(', 'this', ',', '▁anchor', ');', 'shape', '.', 'set', 'Parent', '(', 'this', ');', 'shape', '.', 'set', 'Anchor', '(', 'anchor', ');', 'shapes', '.', 'add', '(', 'shape', ');', 'onCreate', '(', 'shape', ');', 'return', '▁shape', ';}']
['▁public', '▁String', '▁getSh', 'eet', 'Name', '(', 'int', '▁sheet', 'Index', ')', '▁{', 'return', '▁getBound', 'Sheet', 'Rec', '(', 'sheet', 'Index', ').', 'get', 'Sheet', 'name', '();', '}']
['▁public', '▁Get', 'Dashboard', 'Result', '▁getD', 'ashboard', '(', 'Get', 'Dashboard', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Dashboard', '(', 'request', ');', '}']
['▁public', '▁Assoc', 'iate', 'Sign', 'in', 'Delegate', 'Groups', 'With', 'Account', 'Result', '▁associate', 'Sign', 'in', 'Delegate', 'Groups', 'With', 'Account', '(', 'Assoc', 'iate', 'Sign', 'in', 'Delegate', 'Groups', 'With', 'Account', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Assoc', 'iate', 'Sign', 'in', 'Delegate', 'Groups', 'With', 'Account', '(', 'request', ');', '}']
['▁public', '▁void', '▁add', 'Multiple', 'Bl', 'anks', '(', 'Mul', 'Blank', 'Record', '▁m', 'br', ')', '▁{', 'for', '▁(', 'int', '▁j', '▁=', '▁0;', '▁j', '▁<', '▁m', 'br', '.', 'get', 'Num', 'Columns', '();', '▁j', '++)', '▁{', 'Blank', 'Record', '▁br', '▁=', '▁new', '▁Bl', 'ank', 'Record', '();', 'br', '.', 'set', 'Column', '((', '▁short', '▁)', '▁(', 'j', '▁+', '▁m', 'br', '.', 'get', 'First', 'Column', '()));', 'br', '.', 'set', 'Row', '(', 'mb', 'r', '.', 'get', 'Row', '());', 'br', '.', 'set', 'XF', 'Index', '(', 'mb', 'r', '.', 'get', 'XF', 'At', '(', 'j', '));', 'insert', 'Cell', '(', 'br', ');', '}}']
['▁public', '▁static', '▁String', '▁quote', '(', 'String', '▁string', ')', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'sb', '.', 'append', '("\\\\', 'Q', '");', 'int', '▁ap', 'os', '▁=', '▁0;', 'int', '▁k', ';', 'while', '▁((', 'k', '▁=', '▁string', '.', 'indexOf', '("\\\\', 'E', '",', '▁ap', 'os', '))', '▁>=', '▁0)', '▁{', 'sb', '.', 'append', '(', 'string', '.', 'substring', '(', 'ap', 'os', ',', '▁k', '▁+', '▁2)', ').', 'append', '("\\\\', '\\\\', 'E', '\\\\', 'Q', '");', 'ap', 'os', '▁=', '▁k', '▁+', '▁2', ';}', 'return', '▁sb', '.', 'append', '(', 'string', '.', 'substring', '(', 'ap', 'os', ')).', 'append', '("\\\\', 'E', '").', 'toString', '();', '}']
['▁public', '▁ByteBuffer', '▁putInt', '(', 'int', '▁value', ')', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁Array', 'Pt', 'g', '(', 'Object', '[][]', '▁values', '2', 'd', ')', '▁{', 'int', '▁n', 'Columns', '▁=', '▁values', '2', 'd', '[0].', 'length', ';', 'int', '▁n', 'Rows', '▁=', '▁values', '2', 'd', '.', 'length', ';', '_', 'n', 'Columns', '▁=', '▁(', 'short', ')', '▁n', 'Columns', ';', '_', 'n', 'Rows', '▁=', '▁(', 'short', ')', '▁n', 'Rows', ';', 'Object', '[]', '▁vv', '▁=', '▁new', '▁Object', '[', '_', 'n', 'Columns', '▁*', '▁_', 'n', 'Rows', '];', 'for', '▁(', 'int', '▁r', '=0;', '▁r', '<', 'n', 'Rows', ';', '▁r', '++)', '▁{', 'Object', '[]', '▁rowData', '▁=', '▁values', '2', 'd', '[', 'r', '];', 'for', '▁(', 'int', '▁c', '=0;', '▁c', '<', 'n', 'Columns', ';', '▁c', '++)', '▁{', 'vv', '[', 'getValue', 'Index', '(', 'c', ',', '▁r', ')]', '▁=', '▁rowData', '[', 'c', '];', '}}', '_', 'array', 'Values', '▁=', '▁vv', ';', '_', 'reserved', '0', 'Int', '▁=', '▁0;', '_', 'reserved', '1', 'Short', '▁=', '▁0;', '_', 'reserved', '2', 'Byte', '▁=', '▁0;', '}']
['▁public', '▁Get', 'I', 'ce', 'Server', 'Config', 'Result', '▁getI', 'ce', 'Server', 'Config', '(', 'Get', 'I', 'ce', 'Server', 'Config', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'I', 'ce', 'Server', 'Config', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁getClass', '().', 'getName', '()', '▁+', '▁"', '▁["', '▁+', 'getValue', 'AsString', '()', '▁+', '"]', '";', '}']
['▁public', '▁String', '▁toString', '(', 'String', '▁field', ')', '▁{', 'return', '▁"', 'To', 'Child', 'Block', 'Join', 'Query', '▁("', '+', 'parent', 'Query', '.', 'toString', '()+', '")', '";', '}']
['▁public', '▁final', '▁void', '▁inc', 'Ref', '()', '▁{', 'ref', 'Count', '.', 'increment', 'AndGet', '();', '}']
['▁public', '▁Update', 'Configuration', 'Set', 'Sending', 'Enabled', 'Result', '▁update', 'Configuration', 'Set', 'Sending', 'Enabled', '(', 'Update', 'Configuration', 'Set', 'Sending', 'Enabled', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Configuration', 'Set', 'Sending', 'Enabled', '(', 'request', ');', '}']
['▁public', '▁int', '▁getNext', 'X', 'B', 'AT', 'Chain', 'Offset', '()', '▁{', 'return', '▁getX', 'B', 'AT', 'Entries', 'Per', 'Block', '()', '▁*', '▁L', 'ittle', 'Endian', 'Const', 's', '.', 'INT', '_', 'SIZE', ';}']
['▁public', '▁void', '▁multiply', 'By', 'Power', 'Of', 'Ten', '(', 'int', '▁pow', '10)', '▁{', 'Ten', 'Power', '▁tp', '▁=', '▁T', 'en', 'Power', '.', 'getInstance', '(', 'Math', '.', 'abs', '(', 'pow', '10', '));', 'if', '▁(', 'pow', '10', '▁<', '▁0)', '▁{', 'mul', 'Shift', '(', 'tp', '._', 'div', 'isor', ',', '▁tp', '._', 'div', 'isor', 'Shift', ');', '}', '▁else', '▁{', 'mul', 'Shift', '(', 'tp', '._', 'multip', 'lic', 'and', ',', '▁tp', '._', 'multiplier', 'Shift', ');', '}}']
['▁public', '▁String', '▁toString', '(){', 'final', '▁StringBuilder', '▁b', '▁=', '▁new', '▁StringBuilder', '();', 'final', '▁int', '▁l', '▁=', '▁length', '();', 'b', '.', 'append', '(', 'File', '.', 'separator', 'Char', ');', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁l', ';', '▁i', '++){', 'b', '.', 'append', '(', 'get', 'Component', '(', 'i', '));', 'if', '▁(', 'i', '▁<', '▁l', '▁-', '▁1', '){', 'b', '.', 'append', '(', 'File', '.', 'separator', 'Char', ');', '}}', 'return', '▁b', '.', 'toString', '();', '}']
['▁public', '▁Instance', 'Profile', 'Credentials', 'Provider', '▁with', 'Fetcher', '(', 'E', 'CS', 'Metadata', 'Service', 'Credentials', 'Fetcher', '▁fetcher', ')', '▁{', 'this', '.', 'fetch', 'er', '▁=', '▁fetcher', ';', 'this', '.', 'fetch', 'er', '.', 'set', 'Role', 'Name', '(', 'role', 'Name', ');', 'return', '▁this', ';}']
['▁public', '▁void', '▁setProgress', 'Monitor', '(', 'ProgressMonitor', '▁pm', ')', '▁{', 'progress', 'Monitor', '▁=', '▁pm', ';}']
['▁public', '▁void', '▁reset', '()', '▁{', 'if', '▁(!', 'first', '())', '▁{', 'ptr', '▁=', '▁0;', 'if', '▁(!', 'eof', '())', 'parse', 'Entry', '();', '}}']
['▁public', '▁E', '▁previous', '()', '▁{', 'if', '▁(', 'iterator', '.', 'previous', 'Index', '()', '▁>=', '▁start', ')', '▁{', 'return', '▁iterator', '.', 'previous', '();', '}', 'throw', '▁new', '▁NoSuch', 'ElementException', '();', '}']
['▁public', '▁String', '▁getNew', 'Prefix', '()', '▁{', 'return', '▁this', '.', 'new', 'Prefix', ';}']
['▁public', '▁int', '▁indexOf', 'Value', '(', 'int', '▁value', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁m', 'Size', ';', '▁i', '++)', 'if', '▁(', 'm', 'Values', '[', 'i', ']', '▁==', '▁value', ')', 'return', '▁i', ';', 'return', '▁-1', ';}']
['▁public', '▁List', '<', 'Chars', 'Ref', '>', '▁unique', 'St', 'ems', '(', 'char', '▁word', '[],', '▁int', '▁length', ')', '▁{', 'List', '<', 'Chars', 'Ref', '>', '▁st', 'ems', '▁=', '▁stem', '(', 'word', ',', '▁length', ');', 'if', '▁(', 'st', 'ems', '.', 'size', '()', '▁<', '▁2)', '▁{', 'return', '▁st', 'ems', ';}', 'CharArray', 'Set', '▁terms', '▁=', '▁new', '▁Char', 'Array', 'Set', '(', '8,', '▁dictionary', '.', 'ignore', 'Case', ');', 'List', '<', 'Chars', 'Ref', '>', '▁ded', 'up', 'ed', '▁=', '▁new', '▁ArrayList', '<>();', 'for', '▁(', 'Chars', 'Ref', '▁s', '▁:', '▁st', 'ems', ')', '▁{', 'if', '▁(!', 'terms', '.', 'contains', '(', 's', '))', '▁{', 'ded', 'up', 'ed', '.', 'add', '(', 's', ');', 'terms', '.', 'add', '(', 's', ');', '}}', 'return', '▁ded', 'up', 'ed', ';}']
['▁public', '▁Get', 'Gateway', 'Responses', 'Result', '▁getG', 'ateway', 'Responses', '(', 'Get', 'Gateway', 'Responses', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Gateway', 'Responses', '(', 'request', ');', '}']
['▁public', '▁void', '▁setPosition', '(', 'long', '▁pos', ')', '▁{', 'current', 'Block', 'Index', '▁=', '▁(', 'int', ')', '▁(', 'pos', '▁>>', '▁block', 'Bits', ');', 'current', 'Block', '▁=', '▁blocks', '[', 'current', 'Block', 'Index', '];', 'current', 'Block', 'U', 'pto', '▁=', '▁(', 'int', ')', '▁(', 'pos', '▁&', '▁block', 'Mask', ');', '}']
['▁public', '▁long', '▁skip', '(', 'long', '▁n', ')', '▁{', 'int', '▁s', '▁=', '▁(', 'int', ')', '▁Math', '.', 'min', '(', 'available', '(),', '▁Math', '.', 'max', '(0,', '▁n', '));', 'ptr', '▁+=', '▁s', ';', 'return', '▁s', ';}']
['▁public', '▁Bootstrap', 'Action', 'Detail', '(', 'Bootstrap', 'Action', 'Config', '▁bootstrap', 'Action', 'Config', ')', '▁{', 'set', 'Bootstrap', 'Action', 'Config', '(', 'bootstrap', 'Action', 'Config', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'row', ');', 'out', '.', 'write', 'Short', '(', 'field', '_2_', 'col', ');', 'out', '.', 'write', 'Short', '(', 'field', '_3_', 'flags', ');', 'out', '.', 'write', 'Short', '(', 'field', '_4_', 'shape', 'id', ');', 'out', '.', 'write', 'Short', '(', 'field', '_', '6_', 'author', '.', 'length', '());', 'out', '.', 'write', 'Byte', '(', 'field', '_', '5_', 'has', 'Mult', 'ib', 'y', 'te', '▁?', '▁0', 'x', '01', '▁:', '▁0', 'x', '00', ');', 'if', '▁(', 'field', '_', '5_', 'has', 'Mult', 'ib', 'y', 'te', ')', '▁{', 'String', 'Util', '.', 'put', 'Unicode', 'LE', '(', 'field', '_', '6_', 'author', ',', '▁out', ');', '}', '▁else', '▁{', 'String', 'Util', '.', 'put', 'Compressed', 'Unicode', '(', 'field', '_', '6_', 'author', ',', '▁out', ');', '}', 'if', '▁(', 'field', '_7', '_', 'padding', '▁!=', '▁null', ')', '▁{', 'out', '.', 'write', 'Byte', '(', 'field', '_7', '_', 'padding', '.', 'int', 'Value', '());', '}}']
['▁public', '▁int', '▁lastIndexOf', '(', 'String', '▁string', ')', '▁{', 'return', '▁lastIndexOf', '(', 'string', ',', '▁count', ');', '}']
['▁public', '▁boolean', '▁add', '(', 'E', '▁object', ')', '▁{', 'return', '▁addLast', 'Impl', '(', 'object', ');', '}']
['▁public', '▁void', '▁unset', 'Section', '(', 'String', '▁section', ',', '▁String', '▁subsection', ')', '▁{', 'Config', 'Snapshot', '▁src', ',', '▁res', ';', 'do', '▁{', 'src', '▁=', '▁state', '.', 'get', '();', 'res', '▁=', '▁unset', 'Section', '(', 'src', ',', '▁section', ',', '▁subsection', ');', '}', '▁while', '▁(!', 'state', '.', 'compare', 'AndSet', '(', 'src', ',', '▁res', '));', '}']
['▁public', '▁final', '▁String', '▁get', 'TagName', '()', '▁{', 'return', '▁tagName', ';}']
['▁public', '▁void', '▁add', 'Sub', 'Record', '(', 'int', '▁index', ',', '▁Sub', 'Record', '▁element', ')', '▁{', 'sub', 'records', '.', 'add', '(', 'index', ',', '▁element', ');', '}']
['▁public', '▁boolean', '▁remove', '(', 'Object', '▁o', ')', '▁{', 'synchron', 'ized', '▁(', 'mut', 'ex', ')', '▁{', 'return', '▁delegate', '().', 'remove', '(', 'o', ');', '}}']
['▁public', '▁Double', 'Met', 'aph', 'one', 'Filter', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁Double', 'Met', 'aph', 'one', 'Filter', '(', 'input', ',', '▁max', 'Code', 'Length', ',', '▁inject', ');', '}']
['▁public', '▁long', '▁length', '()', '▁{', 'return', '▁in', 'Core', 'Length', '();', '}']
['▁public', '▁void', '▁setValue', '(', 'boolean', '▁newValue', ')', '▁{', 'value', '▁=', '▁newValue', ';}']
['▁public', '▁Pair', '(', 'Content', 'Source', '▁old', 'Source', ',', '▁Content', 'Source', '▁new', 'Source', ')', '▁{', 'this', '.', 'old', 'Source', '▁=', '▁old', 'Source', ';', 'this', '.', 'new', 'Source', '▁=', '▁new', 'Source', ';}']
['▁public', '▁int', '▁get', '(', 'int', '▁i', ')', '▁{', 'if', '▁(', 'count', '▁<=', '▁i', ')', 'throw', '▁new', '▁Array', 'IndexOutOfBounds', 'Exception', '(', 'i', ');', 'return', '▁entries', '[', 'i', '];', '}']
['▁public', '▁Create', 'Repo', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Create', 'Repo', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'repos', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'PUT', ');', '}']
['▁public', '▁boolean', '▁is', 'Delta', 'Base', 'As', 'Offset', '()', '▁{', 'return', '▁delta', 'Base', 'As', 'Offset', ';}']
['▁public', '▁void', '▁remove', '()', '▁{', 'if', '▁(', 'expected', 'Mod', 'Count', '▁==', '▁list', '.', 'mod', 'Count', ')', '▁{', 'if', '▁(', 'last', 'Link', '▁!=', '▁null', ')', '▁{', 'Link', '<', 'ET', '>', '▁next', '▁=', '▁last', 'Link', '.', 'next', ';', 'Link', '<', 'ET', '>', '▁previous', '▁=', '▁last', 'Link', '.', 'previous', ';', 'next', '.', 'previous', '▁=', '▁previous', ';', 'previous', '.', 'next', '▁=', '▁next', ';', 'if', '▁(', 'last', 'Link', '▁==', '▁link', ')', '▁{', 'pos', '--', ';}', 'link', '▁=', '▁previous', ';', 'last', 'Link', '▁=', '▁null', ';', 'expected', 'Mod', 'Count', '++;', 'list', '.', 'size', '--;', 'list', '.', 'mod', 'Count', '++;', '}', '▁else', '▁{', 'throw', '▁new', '▁Illegal', 'StateException', '();', '}}', '▁else', '▁{', 'throw', '▁new', '▁Concurrent', 'Modification', 'Exception', '();', '}}']
['▁public', '▁Merge', 'Shards', 'Result', '▁merge', 'Shards', '(', 'Merge', 'Shards', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Merge', 'Shards', '(', 'request', ');', '}']
['▁public', '▁Al', 'locate', 'Host', 'ed', 'Connection', 'Result', '▁allocate', 'Host', 'ed', 'Connection', '(', 'Alloc', 'ate', 'Host', 'ed', 'Connection', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Alloc', 'ate', 'Host', 'ed', 'Connection', '(', 'request', ');', '}']
['▁public', '▁int', '▁getB', 'egin', 'Index', '()', '▁{', 'return', '▁start', ';}']
['▁public', '▁static', '▁final', '▁Weight', 'ed', 'Term', '[]', '▁get', 'Terms', '(', 'Query', '▁query', '){', 'return', '▁get', 'Terms', '(', 'query', ',', 'false', ');', '}']
['▁public', '▁ByteBuffer', '▁compact', '()', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁void', '▁decode', '(', 'byte', '[]', '▁blocks', ',', '▁int', '▁blocks', 'Offset', ',', '▁long', '[]', '▁values', ',', '▁int', '▁values', 'Offset', ',', '▁int', '▁iterations', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁iterations', ';', '▁++', 'i', ')', '▁{', 'final', '▁long', '▁byte', '0', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', ']', '▁&', '▁0', 'xFF', ';', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁byte', '0', '▁>>>', '▁2;', 'final', '▁long', '▁byte', '1', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', ']', '▁&', '▁0', 'xFF', ';', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁((', 'byte', '0', '▁&', '▁3)', '▁<<', '▁4)', '▁|', '▁(', 'byte', '1', '▁>>>', '▁4', ');', 'final', '▁long', '▁byte', '2', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', ']', '▁&', '▁0', 'xFF', ';', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁((', 'byte', '1', '▁&', '▁15', ')', '▁<<', '▁2)', '▁|', '▁(', 'byte', '2', '▁>>>', '▁6', ');', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁byte', '2', '▁&', '▁6', '3;', '}}']
['▁public', '▁String', '▁getH', 'uman', 'ish', 'Name', '()', '▁throws', '▁IllegalArgument', 'Exception', '▁{', 'String', '▁s', '▁=', '▁getPath', '();', 'if', '▁("', '/', '".', 'equals', '(', 's', ')', '▁||', '▁"".', 'equals', '(', 's', '))', '▁s', '▁=', '▁getHost', '();', 'if', '▁(', 's', '▁==', '▁null', ')', '▁throw', '▁new', '▁IllegalArgument', 'Exception', '();', 'String', '[]', '▁elements', ';', 'if', '▁("', 'file', '".', 'equals', '(', 'scheme', ')', '▁||', '▁LOCAL', '_', 'FILE', '.', 'matcher', '(', 's', ').', 'matches', '())', '▁elements', '▁=', '▁s', '.', 'split', '("[', '\\\\', '"', '▁+', '▁File', '.', 'separator', 'Char', '▁+', '▁"/', ']', '");', '▁else', 'elements', '▁=', '▁s', '.', 'split', '("/', '+', '");', '▁if', '▁(', 'elements', '.', 'length', '▁==', '▁0)', 'throw', '▁new', '▁IllegalArgument', 'Exception', '();', 'String', '▁result', '▁=', '▁elements', '[', 'elements', '.', 'length', '▁-', '▁1', '];', 'if', '▁(', 'Constants', '.', 'DOT', '_', 'G', 'IT', '.', 'equals', '(', 'result', '))', 'result', '▁=', '▁elements', '[', 'elements', '.', 'length', '▁-', '▁2', '];', 'else', '▁if', '▁(', 'result', '.', 'ends', 'With', '(', 'Constants', '.', 'DOT', '_', 'G', 'IT', '_', 'EXT', '))', 'result', '▁=', '▁result', '.', 'substring', '(0,', '▁result', '.', 'length', '()-', '▁Constants', '.', 'DOT', '_', 'G', 'IT', '_', 'EXT', '.', 'length', '());', 'return', '▁result', ';}']
['▁public', '▁Describe', 'Not', 'ebook', 'Instance', 'Lifecycle', 'Config', 'Result', '▁describe', 'Not', 'ebook', 'Instance', 'Lifecycle', 'Config', '(', 'Des', 'cribe', 'Not', 'ebook', 'Instance', 'Lifecycle', 'Config', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Not', 'ebook', 'Instance', 'Lifecycle', 'Config', '(', 'request', ');', '}']
['▁public', '▁String', '▁getAccess', 'Key', 'Secret', '()', '▁{', 'return', '▁this', '.', 'access', 'Key', 'Secret', ';}']
['▁public', '▁Create', 'V', 'pn', 'Connection', 'Result', '▁create', 'V', 'pn', 'Connection', '(', 'Create', 'V', 'pn', 'Connection', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'V', 'pn', 'Connection', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Vo', 'ices', 'Result', '▁describe', 'Vo', 'ices', '(', 'Des', 'cribe', 'Vo', 'ices', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Vo', 'ices', '(', 'request', ');', '}']
['▁public', '▁List', 'Monitoring', 'Execution', 's', 'Result', '▁list', 'Monitoring', 'Execution', 's', '(', 'List', 'Monitoring', 'Execution', 's', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Monitoring', 'Execution', 's', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Job', 'Request', '(', 'String', '▁vault', 'Name', ',', '▁String', '▁jobId', ')', '▁{', 'set', 'Vault', 'Name', '(', 'vault', 'Name', ');', 'set', 'Job', 'Id', '(', 'job', 'Id', ');', '}']
['▁public', '▁E', 'sch', 'er', 'Record', '▁getE', 'sch', 'er', 'Record', '(', 'int', '▁index', '){', 'return', '▁es', 'ch', 'er', 'Records', '.', 'get', '(', 'index', ');', '}']
['▁public', '▁Get', 'Ap', 'is', 'Result', '▁getA', 'p', 'is', '(', 'Get', 'Ap', 'is', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Ap', 'is', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Sms', 'Channel', 'Result', '▁delete', 'Sms', 'Channel', '(', 'Delete', 'Sms', 'Channel', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Sms', 'Channel', '(', 'request', ');', '}']
['▁public', '▁Tracking', 'Ref', 'Update', '▁get', 'Tracking', 'Ref', 'Update', '()', '▁{', 'return', '▁tracking', 'Ref', 'Update', ';}']
['▁public', '▁void', '▁print', '(', 'boolean', '▁b', ')', '▁{', 'print', '(', 'String', '.', 'valueOf', '(', 'b', '));', '}']
['▁public', '▁Query', 'Node', '▁getChild', '()', '▁{', 'return', '▁getChildren', '().', 'get', '(0);', '}']
['▁public', '▁Not', 'Ignored', 'Filter', '(', 'int', '▁workdir', 'Tree', 'Index', ')', '▁{', 'this', '.', 'index', '▁=', '▁workdir', 'Tree', 'Index', ';}']
['▁public', '▁Area', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'format', 'Flags', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁Get', 'Thumbnail', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Get', 'Thumbnail', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁Describe', 'Trans', 'it', 'Gateway', 'V', 'pc', 'Attachments', 'Result', '▁describe', 'Trans', 'it', 'Gateway', 'V', 'pc', 'Attachments', '(', 'Des', 'cribe', 'Trans', 'it', 'Gateway', 'V', 'pc', 'Attachments', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Trans', 'it', 'Gateway', 'V', 'pc', 'Attachments', '(', 'request', ');', '}']
['▁public', '▁Put', 'Voice', 'Connector', 'Streaming', 'Configuration', 'Result', '▁put', 'Voice', 'Connector', 'Streaming', 'Configuration', '(', 'Put', 'Voice', 'Connector', 'Streaming', 'Configuration', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Put', 'Voice', 'Connector', 'Streaming', 'Configuration', '(', 'request', ');', '}']
['▁public', '▁Ord', 'Range', '▁getOr', 'd', 'Range', '(', 'String', '▁dim', ')', '▁{', 'return', '▁prefix', 'To', 'Ord', 'Range', '.', 'get', '(', 'dim', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'String', '▁symbol', '▁=', '▁"";', 'if', '▁(', 'start', 'Index', '▁>=', '▁0', '▁&&', '▁startIndex', '▁<', '▁getInputStream', '().', 'size', '())', '▁{', 'symbol', '▁=', '▁getInputStream', '().', 'getText', '(', 'Interval', '.', 'of', '(', 'start', 'Index', ',', 'start', 'Index', '));', 'symbol', '▁=', '▁Utils', '.', 'escape', 'Whitespace', '(', 'symbol', ',', '▁false', ');', '}', 'return', '▁String', '.', 'format', '(', 'Locale', '.', 'getDefault', '(),', '▁"%', 's', "('%", 's', "')", '",', '▁Lex', 'er', 'No', 'V', 'iable', 'Alt', 'Exception', '.', 'class', '.', 'get', 'Simple', 'Name', '(),', '▁symbol', ');', '}']
['▁public', '▁E', '▁peek', '()', '▁{', 'return', '▁peek', 'First', 'Impl', '();', '}']
['▁public', '▁Create', 'Work', 'spaces', 'Result', '▁create', 'Work', 'spaces', '(', 'Create', 'Work', 'spaces', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Work', 'spaces', '(', 'request', ');', '}']
['▁public', '▁NumberFormat', 'Index', 'Record', '▁clone', '()', '▁{', 'return', '▁copy', '();', '}']
['▁public', '▁Describe', 'Repositories', 'Result', '▁describe', 'Repositories', '(', 'Des', 'cribe', 'Repositories', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Repositories', '(', 'request', ');', '}']
['▁public', '▁S', 'parseInt', 'Array', '(', 'int', '▁initialCapacity', ')', '▁{', 'initial', 'Capacity', '▁=', '▁ArrayUtils', '.', 'ide', 'al', 'Int', 'Array', 'Size', '(', 'initial', 'Capacity', ');', 'm', 'Keys', '▁=', '▁new', '▁int', '[', 'initial', 'Capacity', '];', 'm', 'Values', '▁=', '▁new', '▁int', '[', 'initial', 'Capacity', '];', 'm', 'Size', '▁=', '▁0;', '}']
['▁public', '▁Hy', 'phen', 'ated', 'Words', 'Filter', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁Hy', 'phen', 'ated', 'Words', 'Filter', '(', 'input', ');', '}']
['▁public', '▁Create', 'Distribution', 'With', 'Tags', 'Result', '▁create', 'Distribution', 'With', 'Tags', '(', 'Create', 'Distribution', 'With', 'Tags', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Distribution', 'With', 'Tags', '(', 'request', ');', '}']
['▁public', '▁RandomAccess', 'File', '(', 'String', '▁fileName', ',', '▁String', '▁mode', ')', '▁throws', '▁FileNotFound', 'Exception', '▁{', 'this', '(', 'new', '▁File', '(', 'fileName', '),', '▁mode', ');', '}']
['▁public', '▁Delete', 'Workspace', 'Image', 'Result', '▁delete', 'Workspace', 'Image', '(', 'Delete', 'Workspace', 'Image', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Workspace', 'Image', '(', 'request', ');', '}']
['▁public', '▁static', '▁String', '▁to', 'Hex', '(', 'long', '▁value', ')', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '(16', ');', 'write', 'Hex', '(', 'sb', ',', '▁value', ',', '▁16,', '▁"");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁Update', 'Distribution', 'Result', '▁update', 'Distribution', '(', 'Update', 'Distribution', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Distribution', '(', 'request', ');', '}']
['▁public', '▁H', 'SSF', 'Color', '▁getColor', '(', 'short', '▁index', '){', 'if', '▁(', 'index', '▁==', '▁H', 'SSF', 'Color', 'Pred', 'efined', '.', 'A', 'UT', 'OM', 'ATIC', '.', 'get', 'Index', '())', '▁{', 'return', '▁H', 'SSF', 'Color', 'Pred', 'efined', '.', 'A', 'UT', 'OM', 'ATIC', '.', 'get', 'Color', '();', '}', 'byte', '[]', '▁b', '▁=', '▁_', 'palette', '.', 'get', 'Color', '(', 'index', ');', 'return', '▁(', 'b', '▁==', '▁null', ')', '▁?', '▁null', '▁:', '▁new', '▁Custom', 'Color', '(', 'index', ',', '▁b', ');', '}']
['▁public', '▁Value', 'Eval', '▁evaluate', '(', 'Value', 'Eval', '[]', '▁operands', ',', '▁int', '▁src', 'Row', ',', '▁int', '▁src', 'Col', ')', '▁{', 'throw', '▁new', '▁NotImplemented', 'Function', 'Exception', '(_', 'function', 'Name', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '((', 'short', ')', 'field', '_1_', 'number', '_', 'cr', 'n', '_', 'records', ');', 'out', '.', 'write', 'Short', '((', 'short', ')', 'field', '_2_', 'sheet', '_', 'table', '_', 'index', ');', '}']
['▁public', '▁Describe', 'DB', 'Engine', 'Versions', 'Result', '▁describe', 'DB', 'Engine', 'Versions', '()', '▁{', 'return', '▁describe', 'DB', 'Engine', 'Versions', '(', 'new', '▁Describe', 'DB', 'Engine', 'Versions', 'Request', '());', '}']
['▁public', '▁Format', 'Run', '(', 'short', '▁character', ',', '▁short', '▁font', 'Index', ')', '▁{', 'this', '._', 'character', '▁=', '▁character', ';', 'this', '._', 'font', 'Index', '▁=', '▁font', 'Index', ';}']
['▁public', '▁static', '▁byte', '[]', '▁to', 'Big', 'Endian', 'Utf', '16', 'Bytes', '(', 'char', '[]', '▁chars', ',', '▁int', '▁offset', ',', '▁int', '▁length', ')', '▁{', 'byte', '[]', '▁result', '▁=', '▁new', '▁byte', '[', 'length', '▁*', '▁2', '];', 'int', '▁end', '▁=', '▁offset', '▁+', '▁length', ';', 'int', '▁result', 'Index', '▁=', '▁0;', 'for', '▁(', 'int', '▁i', '▁=', '▁offset', ';', '▁i', '▁<', '▁end', ';', '▁++', 'i', ')', '▁{', 'char', '▁ch', '▁=', '▁chars', '[', 'i', '];', 'result', '[', 'result', 'Index', '++', ']', '▁=', '▁(', 'byte', ')', '▁(', 'ch', '▁>>', '▁8', ');', 'result', '[', 'result', 'Index', '++', ']', '▁=', '▁(', 'byte', ')', '▁ch', ';}', 'return', '▁result', ';}']
['▁public', '▁Upload', 'Archive', 'Result', '▁upload', 'Archive', '(', 'Upload', 'Archive', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Upload', 'Archive', '(', 'request', ');', '}']
['▁public', '▁List', '<', 'Token', '>', '▁getH', 'idden', 'Tokens', 'To', 'Left', '(', 'int', '▁token', 'Index', ')', '▁{', 'return', '▁getH', 'idden', 'Tokens', 'To', 'Left', '(', 'token', 'Index', ',', '▁-1', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁obj', ')', '▁{', 'if', '▁(', 'this', '▁==', '▁obj', ')', 'return', '▁true', ';', 'if', '▁(!', 'super', '.', 'equals', '(', 'obj', '))', 'return', '▁false', ';', 'if', '▁(', 'getClass', '()', '▁!=', '▁obj', '.', 'getClass', '())', 'return', '▁false', ';', 'Autom', 'aton', 'Query', '▁other', '▁=', '▁(', 'Autom', 'aton', 'Query', ')', '▁obj', ';', 'if', '▁(!', 'compiled', '.', 'equals', '(', 'other', '.', 'compiled', '))', 'return', '▁false', ';', 'if', '▁(', 'term', '▁==', '▁null', ')', '▁{', 'if', '▁(', 'other', '.', 'term', '▁!=', '▁null', ')', 'return', '▁false', ';}', '▁else', '▁if', '▁(!', 'term', '.', 'equals', '(', 'other', '.', 'term', '))', 'return', '▁false', ';', 'return', '▁true', ';}']
['▁public', '▁Span', 'Query', '▁make', 'Span', 'Clause', '()', '▁{', 'Span', 'Query', '▁[]', '▁span', 'Queries', '▁=', '▁new', '▁Span', 'Query', '[', 'size', '()', '];', 'Iterator', '<', 'Span', 'Query', '>', '▁sq', 'i', '▁=', '▁weight', 'By', 'Span', 'Query', '.', 'key', 'Set', '().', 'iterator', '();', 'int', '▁i', '▁=', '▁0;', 'while', '▁(', 'sq', 'i', '.', 'hasNext', '())', '▁{', 'Span', 'Query', '▁sq', '▁=', '▁sq', 'i', '.', 'next', '();', 'float', '▁boost', '▁=', '▁weight', 'By', 'Span', 'Query', '.', 'get', '(', 'sq', ');', 'if', '▁(', 'boost', '▁!=', '▁1', 'f', ')', '▁{', 'sq', '▁=', '▁new', '▁Span', 'Boost', 'Query', '(', 'sq', ',', '▁boost', ');', '}', 'span', 'Queries', '[', 'i', '++', ']', '▁=', '▁sq', ';}', 'if', '▁(', 'span', 'Queries', '.', 'length', '▁==', '▁1)', 'return', '▁span', 'Queries', '[0];', 'else', '▁return', '▁new', '▁Span', 'Or', 'Query', '(', 'span', 'Queries', ');', '}']
['▁public', '▁St', 'ash', 'Create', 'Command', '▁stash', 'Create', '()', '▁{', 'return', '▁new', '▁St', 'ash', 'Create', 'Command', '(', 'repo', ');', '}']
['▁public', '▁Field', 'Info', '▁field', 'Info', '(', 'String', '▁fieldName', ')', '▁{', 'return', '▁byName', '.', 'get', '(', 'fieldName', ');', '}']
['▁public', '▁Describe', 'Event', 'Source', 'Result', '▁describe', 'Event', 'Source', '(', 'Des', 'cribe', 'Event', 'Source', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Event', 'Source', '(', 'request', ');', '}']
['▁public', '▁Get', 'Document', 'Analysis', 'Result', '▁getDocument', 'Analysis', '(', 'Get', 'Document', 'Analysis', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Document', 'Analysis', '(', 'request', ');', '}']
['▁public', '▁Cancel', 'Update', 'Stack', 'Result', '▁cancel', 'Update', 'Stack', '(', 'Cancel', 'Update', 'Stack', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Cancel', 'Update', 'Stack', '(', 'request', ');', '}']
['▁public', '▁Modify', 'LoadBalancer', 'Attributes', 'Result', '▁modify', 'LoadBalancer', 'Attributes', '(', 'Modify', 'LoadBalancer', 'Attributes', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Modify', 'LoadBalancer', 'Attributes', '(', 'request', ');', '}']
['▁public', '▁Set', 'Instance', 'Protection', 'Result', '▁set', 'Instance', 'Protection', '(', 'Set', 'Instance', 'Protection', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Set', 'Instance', 'Protection', '(', 'request', ');', '}']
['▁public', '▁Modify', 'DB', 'Proxy', 'Result', '▁modify', 'DB', 'Proxy', '(', 'Modify', 'DB', 'Proxy', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Modify', 'DB', 'Proxy', '(', 'request', ');', '}']
['▁public', '▁void', '▁add', '(', 'char', '[]', '▁output', ',', '▁int', '▁offset', ',', '▁int', '▁len', ',', '▁int', '▁endOffset', ',', '▁int', '▁pos', 'Length', ')', '▁{', 'if', '▁(', 'count', '▁==', '▁outputs', '.', 'length', ')', '▁{', 'outputs', '▁=', '▁ArrayUtil', '.', 'grow', '(', 'outputs', ',', '▁count', '+1', ');', '}', 'if', '▁(', 'count', '▁==', '▁end', 'Offsets', '.', 'length', ')', '▁{', 'final', '▁int', '[]', '▁next', '▁=', '▁new', '▁int', '[', 'Array', 'Util', '.', 'o', 'vers', 'ize', '(1', '+', 'count', ',', '▁Integer', '.', 'BYTES', ')', '];', 'System', '.', 'array', 'copy', '(', 'end', 'Offsets', ',', '▁0,', '▁next', ',', '▁0,', '▁count', ');', 'end', 'Offsets', '▁=', '▁next', ';}', 'if', '▁(', 'count', '▁==', '▁pos', 'Lengths', '.', 'length', ')', '▁{', 'final', '▁int', '[]', '▁next', '▁=', '▁new', '▁int', '[', 'Array', 'Util', '.', 'o', 'vers', 'ize', '(1', '+', 'count', ',', '▁Integer', '.', 'BYTES', ')', '];', 'System', '.', 'array', 'copy', '(', 'pos', 'Lengths', ',', '▁0,', '▁next', ',', '▁0,', '▁count', ');', 'pos', 'Lengths', '▁=', '▁next', ';}', 'if', '▁(', 'outputs', '[', 'count', ']', '▁==', '▁null', ')', '▁{', 'outputs', '[', 'count', ']', '▁=', '▁new', '▁Ch', 'ars', 'Ref', 'Builder', '();', '}', 'outputs', '[', 'count', '].', 'copy', 'Chars', '(', 'output', ',', '▁offset', ',', '▁len', ');', 'end', 'Offsets', '[', 'count', ']', '▁=', '▁endOffset', ';', 'pos', 'Lengths', '[', 'count', ']', '▁=', '▁pos', 'Length', ';', 'count', '++;', '}']
['▁public', '▁Fetch', 'Libraries', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Fetch', 'Libraries', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁boolean', '▁exists', '()', '▁{', 'return', '▁fs', '.', 'exists', '(', 'objects', ');', '}']
['▁public', '▁Filter', 'OutputStream', '(', 'OutputStream', '▁out', ')', '▁{', 'this', '.', 'out', '▁=', '▁out', ';}']
['▁public', '▁Scale', 'Cluster', 'Request', '()', '▁{', 'super', '("', 'CS', '",', '▁"2015', '-12', '-15', '",', '▁"', 'Scale', 'Cluster', '",', '▁"', 'cs', 'k', '");', 'set', 'Uri', 'Pattern', '("/', 'clusters', '/', '[', 'Cluster', 'Id', ']', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'PUT', ');', '}']
['▁public', '▁Data', 'Validation', 'Constraint', '▁createTime', 'Constraint', '(', 'int', '▁operator', 'Type', ',', '▁String', '▁formula', '1,', '▁String', '▁formula', '2)', '▁{', 'return', '▁D', 'V', 'Constraint', '.', 'create', 'Time', 'Constraint', '(', 'operator', 'Type', ',', '▁formula', '1,', '▁formula', '2);', '}']
['▁public', '▁List', 'Object', 'Parent', 'Paths', 'Result', '▁list', 'Object', 'Parent', 'Paths', '(', 'List', 'Object', 'Parent', 'Paths', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Object', 'Parent', 'Paths', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Cache', 'Subnet', 'Groups', 'Result', '▁describe', 'Cache', 'Subnet', 'Groups', '(', 'Des', 'cribe', 'Cache', 'Subnet', 'Groups', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Cache', 'Subnet', 'Groups', '(', 'request', ');', '}']
['▁public', '▁void', '▁set', 'Shared', 'Formula', '(', 'boolean', '▁flag', ')', '▁{', 'field', '_', '5_', 'options', '▁=', 'shared', 'Formula', '.', 'set', 'Short', 'Boolean', '(', 'field', '_', '5_', 'options', ',', '▁flag', ');', '}']
['▁public', '▁boolean', '▁is', 'Reuse', 'Objects', '()', '▁{', 'return', '▁reuse', 'Objects', ';}']
['▁public', '▁Error', 'Node', '▁addError', 'Node', '(', 'Token', '▁bad', 'Token', ')', '▁{', 'Error', 'Node', 'Impl', '▁t', '▁=', '▁new', '▁Error', 'Node', 'Impl', '(', 'bad', 'Token', ');', 'add', 'Any', 'Child', '(', 't', ');', 't', '.', 'set', 'Parent', '(', 'this', ');', 'return', '▁t', ';}']
['▁public', '▁Lat', 'v', 'ian', 'St', 'em', 'FilterFactory', '(', 'Map', '<', 'String', ',', 'String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'if', '▁(!', 'args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁Event', 'Subscription', '▁remove', 'Source', 'Identifier', 'From', 'Subscription', '(', 'Remove', 'Source', 'Identifier', 'From', 'Subscription', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Remove', 'Source', 'Identifier', 'From', 'Subscription', '(', 'request', ');', '}']
['▁public', '▁static', '▁Token', 'FilterFactory', '▁forName', '(', 'String', '▁name', ',', '▁Map', '<', 'String', ',', 'String', '>', '▁args', ')', '▁{', 'return', '▁loader', '.', 'newInstance', '(', 'name', ',', '▁args', ');', '}']
['▁public', '▁Add', 'Album', 'Photos', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Add', 'Album', 'Photos', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁Get', 'Th', 'reat', 'Int', 'el', 'Set', 'Result', '▁get', 'Th', 'reat', 'Int', 'el', 'Set', '(', 'Get', 'Th', 'reat', 'Int', 'el', 'Set', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Th', 'reat', 'Int', 'el', 'Set', '(', 'request', ');', '}']
['▁public', '▁Rev', 'Filter', '▁clone', '()', '▁{', 'return', '▁new', '▁Binary', '(', 'a', '.', 'clone', '(),', '▁b', '.', 'clone', '());', '}']
['▁public', '▁boolean', '▁equals', '(', '▁Object', '▁o', '▁)', '▁{', 'return', '▁o', '▁instanceof', '▁Ar', 'men', 'ian', 'St', 'em', 'mer', ';}']
['▁public', '▁final', '▁boolean', '▁has', 'Array', '()', '▁{', 'return', '▁protected', 'Has', 'Array', '();', '}']
['▁public', '▁Update', 'Contrib', 'utor', 'Insight', 's', 'Result', '▁update', 'Contrib', 'utor', 'Insight', 's', '(', 'Update', 'Contrib', 'utor', 'Insight', 's', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Contrib', 'utor', 'Insight', 's', '(', 'request', ');', '}']
['▁public', '▁void', '▁un', 'write', 'Prot', 'ect', 'Workbook', '()', '▁{', 'records', '.', 'remove', '(', 'file', 'Share', ');', 'records', '.', 'remove', '(', 'write', 'Prot', 'ect', ');', 'file', 'Share', '▁=', '▁null', ';', 'write', 'Prot', 'ect', '▁=', '▁null', ';}']
['▁public', '▁Solr', 'Syn', 'onym', 'Parser', '(', 'boolean', '▁ded', 'up', ',', '▁boolean', '▁expand', ',', '▁Analyzer', '▁analyzer', ')', '▁{', 'super', '(', 'ded', 'up', ',', '▁analyzer', ');', 'this', '.', 'expand', '▁=', '▁expand', ';}']
['▁public', '▁Request', 'Spot', 'Instances', 'Result', '▁request', 'Spot', 'Instances', '(', 'Request', 'Spot', 'Instances', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Request', 'Spot', 'Instances', '(', 'request', ');', '}']
['▁public', '▁byte', '[]', '▁getObject', 'Data', '()', '▁{', 'return', '▁find', 'Object', 'Record', '().', 'get', 'Object', 'Data', '();', '}']
['▁public', '▁Get', 'Contact', 'Attributes', 'Result', '▁get', 'Contact', 'Attributes', '(', 'Get', 'Contact', 'Attributes', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Contact', 'Attributes', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁getKey', '()', '▁+', '▁":', '▁"', '▁+', '▁getValue', '();', '▁}']
['▁public', '▁List', 'Text', 'Translation', 'Jobs', 'Result', '▁list', 'Text', 'Translation', 'Jobs', '(', 'List', 'Text', 'Translation', 'Jobs', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Text', 'Translation', 'Jobs', '(', 'request', ');', '}']
['▁public', '▁Get', 'Contact', 'Methods', 'Result', '▁get', 'Contact', 'Methods', '(', 'Get', 'Contact', 'Methods', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Contact', 'Methods', '(', 'request', ');', '}']
['▁public', '▁static', '▁short', '▁lookup', 'Index', 'ByName', '(', 'String', '▁name', ')', '▁{', 'Function', 'Metadata', '▁fd', '▁=', '▁getInstance', '().', 'get', 'Function', 'ByName', 'Internal', '(', 'name', ');', 'if', '▁(', 'fd', '▁==', '▁null', ')', '▁{', 'fd', '▁=', '▁getInstance', 'C', 'et', 'ab', '().', 'get', 'Function', 'ByName', 'Internal', '(', 'name', ');', 'if', '▁(', 'fd', '▁==', '▁null', ')', '▁{', 'return', '▁-1;', '}}', 'return', '▁(', 'short', ')', '▁fd', '.', 'get', 'Index', '();', '}']
['▁public', '▁Describe', 'An', 'omaly', 'Detector', 's', 'Result', '▁describe', 'An', 'omaly', 'Detector', 's', '(', 'Des', 'cribe', 'An', 'omaly', 'Detector', 's', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'An', 'omaly', 'Detector', 's', '(', 'request', ');', '}']
['▁public', '▁static', '▁String', '▁insert', 'Id', '(', 'String', '▁message', ',', '▁ObjectId', '▁change', 'Id', ')', '▁{', 'return', '▁insert', 'Id', '(', 'message', ',', '▁change', 'Id', ',', '▁false', ');', '}']
['▁public', '▁long', '▁getObject', 'Size', '(', 'Any', 'ObjectId', '▁objectId', ',', '▁int', '▁type', 'Hint', ')', 'throws', '▁Missing', 'ObjectException', ',', '▁Incorrect', 'ObjectType', 'Exception', ',', 'IOException', '▁{', 'long', '▁sz', '▁=', '▁db', '.', 'get', 'Object', 'Size', '(', 'this', ',', '▁objectId', ');', 'if', '▁(', 'sz', '▁<', '▁0)', '▁{', 'if', '▁(', 'type', 'Hint', '▁==', '▁OBJ', '_', 'ANY', ')', 'throw', '▁new', '▁Missing', 'ObjectException', '(', 'object', 'Id', '.', 'copy', '(),', 'J', 'Git', 'Text', '.', 'get', '().', 'unknown', 'ObjectType', '2);', 'throw', '▁new', '▁Missing', 'ObjectException', '(', 'object', 'Id', '.', 'copy', '(),', '▁type', 'Hint', ');', '}', 'return', '▁sz', ';}']
['▁public', '▁Import', 'Installation', 'Media', 'Result', '▁import', 'Installation', 'Media', '(', 'Import', 'Installation', 'Media', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Import', 'Installation', 'Media', '(', 'request', ');', '}']
['▁public', '▁Put', 'Lifecycle', 'Event', 'Hook', 'Execution', 'Status', 'Result', '▁put', 'Lifecycle', 'Event', 'Hook', 'Execution', 'Status', '(', 'Put', 'Lifecycle', 'Event', 'Hook', 'Execution', 'Status', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Put', 'Lifecycle', 'Event', 'Hook', 'Execution', 'Status', '(', 'request', ');', '}']
['▁public', '▁Number', 'Pt', 'g', '(', 'L', 'ittle', 'Endian', 'Input', '▁in', ')', '▁{', 'this', '(', 'in', '.', 'read', 'Double', '());', '}']
['▁public', '▁Get', 'Field', 'Level', 'Encryption', 'Config', 'Result', '▁getField', 'Level', 'Encryption', 'Config', '(', 'Get', 'Field', 'Level', 'Encryption', 'Config', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Field', 'Level', 'Encryption', 'Config', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Detector', 'Result', '▁describe', 'Detector', '(', 'Des', 'cribe', 'Detector', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Detector', '(', 'request', ');', '}']
['▁public', '▁Report', 'Instance', 'Status', 'Result', '▁report', 'Instance', 'Status', '(', 'Report', 'Instance', 'Status', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Report', 'Instance', 'Status', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Alarm', 'Result', '▁delete', 'Alarm', '(', 'Delete', 'Alarm', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Alarm', '(', 'request', ');', '}']
['▁public', '▁TokenStream', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁Port', 'ug', 'ues', 'e', 'St', 'em', 'Filter', '(', 'input', ');', '}']
['▁public', '▁F', 't', 'C', 'bl', 's', 'Sub', 'Record', '()', '▁{', 'reserved', '▁=', '▁new', '▁byte', '[', 'EN', 'CODE', 'D', '_', 'SIZE', '];', '}']
['▁@', 'Override', '▁public', '▁boolean', '▁remove', '(', 'Object', '▁object', ')', '▁{', 'synchron', 'ized', '▁(', 'mut', 'ex', ')', '▁{', 'return', '▁c', '.', 'remove', '(', 'object', ');', '}}']
['▁public', '▁Get', 'D', 'ed', 'icated', 'Ip', 'Result', '▁getD', 'ed', 'icated', 'Ip', '(', 'Get', 'D', 'ed', 'icated', 'Ip', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'D', 'ed', 'icated', 'Ip', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁precedence', '▁+', '▁"', '▁>=', '▁_', 'p', '";', '}']
['▁public', '▁List', 'Stream', 'Processors', 'Result', '▁list', 'Stream', 'Processors', '(', 'List', 'Stream', 'Processors', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Stream', 'Processors', '(', 'request', ');', '}']
['▁public', '▁Delete', 'LoadBalancer', 'Policy', 'Request', '(', 'String', '▁load', 'Balancer', 'Name', ',', '▁String', '▁policy', 'Name', ')', '▁{', 'set', 'LoadBalancer', 'Name', '(', 'load', 'Balancer', 'Name', ');', 'set', 'Policy', 'Name', '(', 'policy', 'Name', ');', '}']
['▁public', '▁Window', 'Prot', 'ect', 'Record', '(', 'int', '▁options', ')', '▁{', '_', 'options', '▁=', '▁options', ';}']
['▁public', '▁Un', 'buffered', 'Char', 'Stream', '(', 'int', '▁bufferSize', ')', '▁{', 'n', '▁=', '▁0;', 'data', '▁=', '▁new', '▁int', '[', 'buffer', 'Size', '];', '}']
['▁public', '▁Get', 'Operations', 'Result', '▁get', 'Operations', '(', 'Get', 'Operations', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Operations', '(', 'request', ');', '}']
['▁public', '▁void', '▁copy', 'Raw', 'To', '(', 'byte', '[]', '▁b', ',', '▁int', '▁o', ')', '▁{', 'NB', '.', 'encode', 'Int', '32', '(', 'b', ',', '▁o', ',', '▁w', '1);', 'NB', '.', 'encode', 'Int', '32', '(', 'b', ',', '▁o', '▁+', '▁4,', '▁w', '2);', 'NB', '.', 'encode', 'Int', '32', '(', 'b', ',', '▁o', '▁+', '▁8,', '▁w', '3);', 'NB', '.', 'encode', 'Int', '32', '(', 'b', ',', '▁o', '▁+', '▁12,', '▁w', '4', ');', 'NB', '.', 'encode', 'Int', '32', '(', 'b', ',', '▁o', '▁+', '▁16,', '▁w', '5', ');', '}']
['▁public', '▁Window', 'One', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'h', '_', 'hold', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_2_', 'v', '_', 'hold', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_3_', 'width', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_4_', 'height', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_', '5_', 'options', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_', '6_', 'active', '_', 'sheet', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_7', '_', 'first', '_', 'visible', '_', 'tab', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_8', '_', 'num', '_', 'selected', '_', 'tabs', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_9', '_', 'tab', '_', 'width', '_', 'ratio', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁Stop', 'Work', 'spaces', 'Result', '▁stop', 'Work', 'spaces', '(', 'Stop', 'Work', 'spaces', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Stop', 'Work', 'spaces', '(', 'request', ');', '}']
['▁public', '▁void', '▁close', '()', '▁throws', '▁IOException', '▁{', 'if', '▁(', 'is', 'Open', ')', '▁{', 'is', 'Open', '▁=', '▁false', ';', 'try', '▁{', 'dump', '();', '}', '▁finally', '▁{', 'try', '▁{', 'channel', '.', 'truncate', '(', 'file', 'Length', ');', '}', '▁finally', '▁{', 'try', '▁{', 'channel', '.', 'close', '();', '}', '▁finally', '▁{', 'f', 'os', '.', 'close', '();', '}}', '}}', '}']
['▁public', '▁Describe', 'Match', 'm', 'aking', 'Rule', 'Sets', 'Result', '▁describe', 'Match', 'm', 'aking', 'Rule', 'Sets', '(', 'Des', 'cribe', 'Match', 'm', 'aking', 'Rule', 'Sets', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Match', 'm', 'aking', 'Rule', 'Sets', '(', 'request', ');', '}']
['▁public', '▁String', '▁getP', 'ron', 'unc', 'iation', '(', 'int', '▁word', 'Id', ',', '▁char', '▁surface', '[],', '▁int', '▁off', ',', '▁int', '▁len', ')', '▁{', 'return', '▁null', ';', '▁}']
['▁public', '▁String', '▁getPath', '()', '▁{', 'return', '▁path', 'Str', ';}']
['▁public', '▁static', '▁double', '▁dev', 'sq', '(', 'double', '[]', '▁v', ')', '▁{', 'double', '▁r', '▁=', '▁Double', '.', 'NaN', ';', 'if', '▁(', 'v', '!=', 'null', '▁&&', '▁v', '.', 'length', '▁>=', '▁1)', '▁{', 'double', '▁m', '▁=', '▁0;', 'double', '▁s', '▁=', '▁0;', 'int', '▁n', '▁=', '▁v', '.', 'length', ';', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'n', ';', '▁i', '++)', '▁{', 's', '▁+=', '▁v', '[', 'i', '];', '}', 'm', '▁=', '▁s', '▁/', '▁n', ';', 's', '▁=', '▁0;', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'n', ';', '▁i', '++)', '▁{', 's', '▁+=', '▁(', 'v', '[', 'i', ']', '-', '▁m', ')', '▁*', '▁(', 'v', '[', 'i', ']', '▁-', '▁m', ');', '}', 'r', '▁=', '▁(', 'n', '▁==', '▁1)', '?', '▁0:', '▁s', ';}', 'return', '▁r', ';}']
['▁public', '▁Describe', 'Resize', 'Result', '▁describe', 'Resize', '(', 'Des', 'cribe', 'Resize', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Resize', '(', 'request', ');', '}']
['▁public', '▁final', '▁boolean', '▁has', 'Passed', 'Through', 'Non', 'Gre', 'edy', 'Decision', '()', '▁{', 'return', '▁passed', 'Through', 'Non', 'Gre', 'edy', 'Decision', ';}']
['▁public', '▁int', '▁end', '()', '▁{', 'return', '▁end', '(0);', '}']
['▁public', '▁void', '▁traverse', '(', 'Cell', 'Handler', '▁handler', ')', '▁{', 'int', '▁first', 'Row', '▁=', '▁range', '.', 'get', 'First', 'Row', '();', 'int', '▁last', 'Row', '▁=', '▁range', '.', 'get', 'Last', 'Row', '();', 'int', '▁first', 'Column', '▁=', '▁range', '.', 'get', 'First', 'Column', '();', 'int', '▁last', 'Column', '▁=', '▁range', '.', 'get', 'Last', 'Column', '();', 'final', '▁int', '▁width', '▁=', '▁last', 'Column', '▁-', '▁first', 'Column', '▁+', '▁1;', 'Simple', 'Cell', 'Walk', 'Context', '▁ctx', '▁=', '▁new', '▁Simple', 'Cell', 'Walk', 'Context', '();', 'Row', '▁current', 'Row', '▁=', '▁null', ';', 'Cell', '▁current', 'Cell', '▁=', '▁null', ';', 'for', '▁(', 'ctx', '.', 'row', 'Number', '▁=', '▁first', 'Row', ';', '▁ctx', '.', 'row', 'Number', '▁<=', '▁last', 'Row', ';', '▁++', 'ctx', '.', 'row', 'Number', ')', '▁{', 'current', 'Row', '▁=', '▁sheet', '.', 'get', 'Row', '(', 'ctx', '.', 'row', 'Number', ');', 'if', '▁(', 'current', 'Row', '▁==', '▁null', ')', '▁{', 'continue', ';}', 'for', '▁(', 'ctx', '.', 'col', 'Number', '▁=', '▁first', 'Column', ';', '▁ctx', '.', 'col', 'Number', '▁<=', '▁last', 'Column', ';', '▁++', 'ctx', '.', 'col', 'Number', ')', '▁{', 'current', 'Cell', '▁=', '▁current', 'Row', '.', 'get', 'Cell', '(', 'ctx', '.', 'col', 'Number', ');', 'if', '▁(', 'current', 'Cell', '▁==', '▁null', ')', '▁{', 'continue', ';}', 'if', '▁(', 'isEmpty', '(', 'current', 'Cell', ')', '▁&&', '▁!', 'tra', 'verse', 'Empty', 'Cells', ')', '▁{', 'continue', ';}', 'long', '▁row', 'Size', '▁=', '▁Arithmetic', 'Utils', '.', 'mul', 'AndCheck', '((', 'long', ')', 'Ar', 'ithmetic', 'Utils', '.', 'sub', 'AndCheck', '(', 'ctx', '.', 'row', 'Number', ',', '▁first', 'Row', '),', '▁(', 'long', ')', 'width', ');', 'ctx', '.', 'ordinal', 'Number', '▁=', '▁Arithmetic', 'Utils', '.', 'add', 'AndCheck', '(', 'row', 'Size', ',', '▁(', 'ctx', '.', 'col', 'Number', '▁-', '▁first', 'Column', '▁+', '▁1', '));', 'handler', '.', 'on', 'Cell', '(', 'current', 'Cell', ',', '▁ctx', ');', '}}', '}']
['▁public', '▁int', '▁getRead', 'Index', '()', '▁{', 'return', '▁pos', ';}']
['▁public', '▁int', '▁compareTo', '(', 'Score', 'Term', '▁other', ')', '▁{', 'if', '▁(', 'this', '.', 'boost', '▁==', '▁other', '.', 'boost', ')', '▁return', '▁other', '.', 'bytes', '.', 'get', '().', 'compareTo', '(', 'this', '.', 'bytes', '.', 'get', '());', 'else', '▁return', '▁Float', '.', 'compare', '(', 'this', '.', 'boost', ',', '▁other', '.', 'boost', ');', '}']
['▁public', '▁int', '▁normalize', '(', 'char', '▁s', '[],', '▁int', '▁len', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁len', ';', '▁i', '++)', '▁{', 'switch', '▁(', 's', '[', 'i', '])', '▁{', 'case', '▁F', 'AR', 'SI', '_', 'Y', 'E', 'H', ':', 'case', '▁Y', 'E', 'H', '_', 'BAR', 'REE', ':', 's', '[', 'i', ']', '▁=', '▁Y', 'E', 'H', ';', 'break', ';', 'case', '▁K', 'E', 'HE', 'H', ':', 's', '[', 'i', ']', '▁=', '▁K', 'AF', ';', 'break', ';', 'case', '▁HE', 'H', '_', 'Y', 'E', 'H', ':', 'case', '▁HE', 'H', '_', 'GO', 'AL', ':', 's', '[', 'i', ']', '▁=', '▁HE', 'H', ';', 'break', ';', 'case', '▁H', 'AM', 'Z', 'A', '_', 'AB', 'O', 'VE', ':', '▁len', '▁=', '▁delete', '(', 's', ',', '▁i', ',', '▁len', ');', 'i', '--;', 'break', ';', 'default', ':', 'break', ';', '}}', 'return', '▁len', ';}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(_', 'options', ');', '}']
['▁public', '▁Diagnostic', 'Error', 'Listener', '(', 'boolean', '▁exact', 'Only', ')', '▁{', 'this', '.', 'exact', 'Only', '▁=', '▁exact', 'Only', ';}']
['▁public', '▁Key', 'Schema', 'Element', '(', 'String', '▁attributeName', ',', '▁Key', 'Type', '▁keyType', ')', '▁{', 'setAttribute', 'Name', '(', 'attribute', 'Name', ');', 'set', 'Key', 'Type', '(', 'key', 'Type', '.', 'toString', '());', '}']
['▁public', '▁Get', 'Assignment', 'Result', '▁get', 'Assignment', '(', 'Get', 'Assignment', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Assignment', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁has', 'Object', '(', 'Any', 'ObjectId', '▁id', ')', '▁{', 'return', '▁find', 'Offset', '(', 'id', ')', '▁!=', '▁-1', ';}']
['▁public', '▁Group', 'ing', 'Search', '▁setAll', 'Groups', '(', 'boolean', '▁all', 'Groups', ')', '▁{', 'this', '.', 'all', 'Groups', '▁=', '▁all', 'Groups', ';', 'return', '▁this', ';}']
['▁public', '▁synchronized', '▁void', '▁set', 'Multi', 'Valued', '(', 'String', '▁dim', 'Name', ',', '▁boolean', '▁v', ')', '▁{', 'Dim', 'Config', '▁ft', '▁=', '▁field', 'Types', '.', 'get', '(', 'dim', 'Name', ');', 'if', '▁(', 'ft', '▁==', '▁null', ')', '▁{', 'ft', '▁=', '▁new', '▁Dim', 'Config', '();', 'field', 'Types', '.', 'put', '(', 'dim', 'Name', ',', '▁ft', ');', '}', 'ft', '.', 'multi', 'Valued', '▁=', '▁v', ';}']
['▁public', '▁int', '▁getCell', 's', 'Val', '()', '▁{', 'Iterator', '<', 'Character', '>', '▁i', '▁=', '▁cells', '.', 'key', 'Set', '().', 'iterator', '();', 'int', '▁size', '▁=', '▁0;', 'for', '▁(', ';', '▁i', '.', 'hasNext', '();', ')', '▁{', 'Character', '▁c', '▁=', '▁i', '.', 'next', '();', 'Cell', '▁e', '▁=', '▁at', '(', 'c', ');', 'if', '▁(', 'e', '.', 'cmd', '▁>=', '▁0)', '▁{', 'size', '++;', '}}', 'return', '▁size', ';}']
['▁public', '▁Delete', 'Voice', 'Connector', 'Result', '▁delete', 'Voice', 'Connector', '(', 'Delete', 'Voice', 'Connector', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Voice', 'Connector', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Lifecycle', 'Policy', 'Result', '▁delete', 'Lifecycle', 'Policy', '(', 'Delete', 'Lifecycle', 'Policy', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Lifecycle', 'Policy', '(', 'request', ');', '}']
['▁public', '▁void', '▁write', '(', 'byte', '[]', '▁b', ')', '▁{', 'int', '▁len', '▁=', '▁b', '.', 'length', ';', 'check', 'Position', '(', 'len', ');', 'System', '.', 'array', 'copy', '(', 'b', ',', '▁0,', '▁_', 'buf', ',', '▁_', 'write', 'Index', ',', '▁len', ');', '_', 'write', 'Index', '▁+=', '▁len', ';}']
['▁public', '▁Reb', 'ase', 'Result', '▁getR', 'eb', 'ase', 'Result', '()', '▁{', 'return', '▁this', '.', 're', 'base', 'Result', ';}']
['▁public', '▁static', '▁int', '▁getN', 'e', 'arest', 'Set', 'Size', '(', 'int', '▁max', 'NumberOf', 'Values', 'Expected', ',', 'float', '▁desired', 'Sat', 'uration', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁usable', 'BitSet', 'Sizes', '.', 'length', ';', '▁i', '++)', '▁{', 'int', '▁num', 'Set', 'Bits', 'At', 'Desired', 'Sat', 'uration', '▁=', '▁(', 'int', ')', '▁(', 'usable', 'BitSet', 'Sizes', '[', 'i', ']', '▁*', '▁desired', 'Sat', 'uration', ');', 'int', '▁estimated', 'Num', 'Unique', 'Values', '▁=', '▁getE', 'st', 'imated', 'Number', 'Unique', 'Values', 'Allow', 'ing', 'For', 'Coll', 'isions', '(', 'usable', 'BitSet', 'Sizes', '[', 'i', '],', '▁num', 'Set', 'Bits', 'At', 'Desired', 'Sat', 'uration', ');', 'if', '▁(', 'est', 'imated', 'Num', 'Unique', 'Values', '▁>', '▁max', 'NumberOf', 'Values', 'Expected', ')', '▁{', 'return', '▁usable', 'BitSet', 'Sizes', '[', 'i', '];', '}}', 'return', '▁-1', ';}']
['▁public', '▁Describe', 'Dashboard', 'Result', '▁describe', 'Dashboard', '(', 'Des', 'cribe', 'Dashboard', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Dashboard', '(', 'request', ');', '}']
['▁public', '▁Create', 'Segment', 'Result', '▁create', 'Segment', '(', 'Create', 'Segment', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Segment', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'DB', 'CE', 'LL', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'row', 'offset', '▁=', '▁"', ').', 'append', '(', 'Hex', 'Dump', '.', 'int', 'To', 'Hex', '(', 'field', '_1_', 'row', '_', 'offset', ')).', 'append', '("\\', 'n', '");', 'for', '▁(', 'int', '▁k', '▁=', '▁0;', '▁k', '▁<', '▁field', '_2_', 'cell', '_', 'offsets', '.', 'length', ';', '▁k', '++)', '▁{', 'buffer', '.', 'append', '("', '▁.', 'cell', '_', '").', 'append', '(', 'k', ').', 'append', '("', '▁=', '▁"', ').', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(', 'field', '_2_', 'cell', '_', 'offsets', '[', '▁k', '▁]', ')).', 'append', '("\\', 'n', '");', '}', 'buffer', '.', 'append', '("[', '/', 'DB', 'CE', 'LL', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁List', '<', 'String', '>', '▁get', 'Und', 'el', 'eted', 'List', '()', '▁{', 'return', '▁und', 'el', 'eted', 'List', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"[', 'INTERFACE', 'END', '/', ']\\', 'n', '";', '}']
['▁public', '▁Merge', 'Scheduler', '▁clone', '()', '▁{', 'return', '▁this', ';}']
['▁public', '▁Plain', 'Text', 'Dictionary', '(', 'Reader', '▁reader', ')', '▁{', 'in', '▁=', '▁new', '▁BufferedReader', '(', 'reader', ');', '}']
['▁public', '▁StringBuilder', '▁append', '(', 'CharSequence', '▁cs', 'q', ')', '▁{', 'if', '▁(', 'cs', 'q', '▁==', '▁null', ')', '▁{', 'append', 'Null', '();', '}', '▁else', '▁{', 'append', '0(', 'cs', 'q', ',', '▁0,', '▁cs', 'q', '.', 'length', '());', '}', 'return', '▁this', ';}']
['▁public', '▁List', 'Associated', 'Stack', 's', 'Result', '▁list', 'Associated', 'Stack', 's', '(', 'List', 'Associated', 'Stack', 's', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Associated', 'Stack', 's', '(', 'request', ');', '}']
['▁public', '▁static', '▁double', '▁av', 'ed', 'ev', '(', 'double', '[]', '▁v', ')', '▁{', 'double', '▁r', '▁=', '▁0;', 'double', '▁m', '▁=', '▁0;', 'double', '▁s', '▁=', '▁0;', 'for', '▁(', 'int', '▁i', '=0,', '▁i', 'Size', '=', 'v', '.', 'length', ';', '▁i', '<', 'i', 'Size', ';', '▁i', '++)', '▁{', 's', '▁+=', '▁v', '[', 'i', '];', '}', 'm', '▁=', '▁s', '▁/', '▁v', '.', 'length', ';', 's', '▁=', '▁0;', 'for', '▁(', 'int', '▁i', '=0,', '▁i', 'Size', '=', 'v', '.', 'length', ';', '▁i', '<', 'i', 'Size', ';', '▁i', '++)', '▁{', 's', '▁+=', '▁Math', '.', 'abs', '(', 'v', '[', 'i', ']', '-', 'm', ');', '}', 'r', '▁=', '▁s', '▁/', '▁v', '.', 'length', ';', 'return', '▁r', ';}']
['▁public', '▁Describe', 'By', 'o', 'ip', 'C', 'id', 'rs', 'Result', '▁describe', 'By', 'o', 'ip', 'C', 'id', 'rs', '(', 'Des', 'cribe', 'By', 'o', 'ip', 'C', 'id', 'rs', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'By', 'o', 'ip', 'C', 'id', 'rs', '(', 'request', ');', '}']
['▁public', '▁Get', 'Disk', 'Result', '▁getDis', 'k', '(', 'Get', 'Disk', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Disk', '(', 'request', ');', '}']
['▁public', '▁DB', 'Cluster', 'Parameter', 'Group', '▁create', 'DB', 'Cluster', 'Parameter', 'Group', '(', 'Create', 'DB', 'Cluster', 'Parameter', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'DB', 'Cluster', 'Parameter', 'Group', '(', 'request', ');', '}']
['▁public', '▁static', '▁CharBuffer', '▁wrap', '(', 'char', '[]', '▁array', ',', '▁int', '▁start', ',', '▁int', '▁char', 'Count', ')', '▁{', 'Arrays', '.', 'check', 'Offset', 'And', 'Count', '(', 'array', '.', 'length', ',', '▁start', ',', '▁char', 'Count', ');', 'Char', 'Buffer', '▁buf', '▁=', '▁new', '▁Read', 'Write', 'CharArray', 'Buffer', '(', 'array', ');', 'buf', '.', 'position', '▁=', '▁start', ';', 'buf', '.', 'limit', '▁=', '▁start', '▁+', '▁char', 'Count', ';', 'return', '▁buf', ';}']
['▁public', '▁Sub', 'module', 'Status', 'Type', '▁getType', '()', '▁{', 'return', '▁type', ';}']
['▁public', '▁Describe', 'Game', 'Server', 'Group', 'Result', '▁describe', 'Game', 'Server', 'Group', '(', 'Des', 'cribe', 'Game', 'Server', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Game', 'Server', 'Group', '(', 'request', ');', '}']
['▁public', '▁Pattern', '▁pattern', '()', '▁{', 'return', '▁pattern', ';}']
['▁public', '▁V', '▁setValue', '(', 'V', '▁object', ')', '▁{', 'throw', '▁new', '▁Unsupported', 'Operation', 'Exception', '();', '}']
['▁public', '▁StringBuilder', '▁stem', '(', 'CharSequence', '▁word', ')', '▁{', 'CharSequence', '▁cmd', '▁=', '▁stem', 'mer', '.', 'get', 'Last', 'On', 'Path', '(', 'word', ');', 'if', '▁(', 'cmd', '▁==', '▁null', ')', 'return', '▁null', ';', 'buffer', '.', 'set', 'Length', '(0);', 'buffer', '.', 'append', '(', 'word', ');', 'Diff', '.', 'apply', '(', 'buffer', ',', '▁cmd', ');', 'if', '▁(', 'buffer', '.', 'length', '()', '▁>', '▁0)', 'return', '▁buffer', ';', 'else', '▁return', '▁null', ';}']
['▁public', '▁Rename', 'Face', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Rename', 'Face', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁char', '▁require', 'Char', '(', 'Map', '<', 'String', ',', 'String', '>', '▁args', ',', '▁String', '▁name', ')', '▁{', 'return', '▁require', '(', 'args', ',', '▁name', ').', 'charAt', '(0);', '}']
['▁public', '▁static', '▁String', '▁toString', 'Tree', '(', 'Tree', '▁t', ')', '▁{', 'return', '▁toString', 'Tree', '(', 't', ',', '▁(', 'List', '<', 'String', '>)', 'null', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"<', 'deleted', '/>', '";', '}']
['▁public', '▁Get', 'Repo', 'Web', 'hook', 'Log', 'List', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Get', 'Repo', 'Web', 'hook', 'Log', 'List', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'repos', '/', '[', 'Repo', 'Namespace', ']/', '[', 'Repo', 'Name', ']/', 'web', 'hooks', '/', '[', 'Web', 'hook', 'Id', ']/', 'logs', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'GET', ');', '}']
['▁public', '▁Get', 'Job', 'Unlock', 'Code', 'Result', '▁getJob', 'Unlock', 'Code', '(', 'Get', 'Job', 'Unlock', 'Code', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Job', 'Unlock', 'Code', '(', 'request', ');', '}']
['▁public', '▁Remove', 'Tags', 'Request', '(', 'String', '▁resourceId', ')', '▁{', 'set', 'ResourceId', '(', 'resource', 'Id', ');', '}']
['▁public', '▁short', '▁get', 'GB', '23', '12', 'Id', '(', 'char', '▁ch', ')', '▁{', 'try', '▁{', 'byte', '[]', '▁buffer', '▁=', '▁Character', '.', 'toString', '(', 'ch', ').', 'getBytes', '("', 'GB', '23', '12', '");', 'if', '▁(', 'buffer', '.', 'length', '▁!=', '▁2)', '▁{', 'return', '▁-1', ';}', 'int', '▁b', '0', '▁=', '▁(', 'buffer', '[0]', '▁&', '▁0', 'x', '0', 'FF', ')', '▁-', '▁16', '1;', '▁int', '▁b', '1', '▁=', '▁(', 'buffer', '[1]', '▁&', '▁0', 'x', '0', 'FF', ')', '▁-', '▁16', '1;', '▁return', '▁(', 'short', ')', '▁(', 'b', '0', '▁*', '▁94', '▁+', '▁b', '1);', '}', '▁catch', '▁(', 'Unsupported', 'Encoding', 'Exception', '▁e', ')', '▁{', 'throw', '▁new', '▁Runtime', 'Exception', '(', 'e', ');', '}}']
['▁public', '▁Batch', 'Ref', 'Update', '▁add', 'Command', '(', 'Collection', '<', 'Receive', 'Command', '>', '▁cmd', ')', '▁{', 'commands', '.', 'addAll', '(', 'cmd', ');', 'return', '▁this', ';}']
['▁public', '▁short', '▁check', 'Ex', 'tern', 'Sheet', '(', 'int', '▁sheet', 'Number', '){', 'return', '▁(', 'short', ')', 'get', 'OrCreate', 'Link', 'Table', '().', 'check', 'Ex', 'tern', 'Sheet', '(', 'sheet', 'Number', ');', '}']
['▁@', 'Override', '▁public', '▁boolean', '▁equals', '(', 'Object', '▁object', ')', '▁{', 'return', '▁c', '.', 'equals', '(', 'object', ');', '}']
['▁public', '▁Boolean', 'Query', '▁build', '(', 'Query', 'Node', '▁query', 'Node', ')', '▁throws', '▁Query', 'Node', 'Exception', '▁{', 'Any', 'Query', 'Node', '▁and', 'Node', '▁=', '▁(', 'Any', 'Query', 'Node', ')', '▁query', 'Node', ';', 'Boolean', 'Query', '.', 'Builder', '▁b', 'Query', '▁=', '▁new', '▁Boolean', 'Query', '.', 'Builder', '();', 'List', '<', 'Query', 'Node', '>', '▁children', '▁=', '▁and', 'Node', '.', 'getChildren', '();', 'if', '▁(', 'children', '▁!=', '▁null', ')', '▁{', 'for', '▁(', 'Query', 'Node', '▁child', '▁:', '▁children', ')', '▁{', 'Object', '▁obj', '▁=', '▁child', '.', 'get', 'Tag', '(', 'Query', 'Tree', 'Builder', '.', 'QUERY', '_', 'TREE', '_', 'B', 'UI', 'LDER', '_', 'TAG', 'ID', ');', 'if', '▁(', 'obj', '▁!=', '▁null', ')', '▁{', 'Query', '▁query', '▁=', '▁(', 'Query', ')', '▁obj', ';', 'try', '▁{', 'b', 'Query', '.', 'add', '(', 'query', ',', '▁Boolean', 'Clause', '.', 'Occ', 'ur', '.', 'SH', 'O', 'ULD', ');', '}', '▁catch', '▁(', 'Too', 'Many', 'C', 'lauses', '▁ex', ')', '▁{', 'throw', '▁new', '▁Query', 'Node', 'Exception', '(', 'new', '▁Message', 'Impl', '(', 'Query', 'Parser', 'Messages', '.', 'EMPTY', '_', 'MESSAGE', '),', '▁ex', ');', '}}', '}}', 'b', 'Query', '.', 'set', 'Minimum', 'Number', 'Should', 'Match', '(', 'and', 'Node', '.', 'get', 'Minimum', 'Matching', 'Elements', '());', 'return', '▁b', 'Query', '.', 'build', '();', '}']
['▁public', '▁Describe', 'Stream', 'Processor', 'Result', '▁describe', 'Stream', 'Processor', '(', 'Des', 'cribe', 'Stream', 'Processor', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Stream', 'Processor', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Dashboard', 'Permissions', 'Result', '▁describe', 'Dashboard', 'Permissions', '(', 'Des', 'cribe', 'Dashboard', 'Permissions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Dashboard', 'Permissions', '(', 'request', ');', '}']
['▁public', '▁Ref', '▁p', 'eel', '(', 'Ref', '▁ref', ')', '▁{', 'try', '▁{', 'return', '▁getRef', 'Database', '().', 'pe', 'el', '(', 'ref', ');', '}', '▁catch', '▁(', 'IOException', '▁e', ')', '▁{', 'return', '▁ref', ';', '}}']
['▁public', '▁long', '▁ram', 'Bytes', 'Used', '()', '▁{', 'return', '▁Ram', 'Usage', 'Estimator', '.', 'align', 'Object', 'Size', '(', 'R', 'am', 'Usage', 'Estimator', '.', 'NUM', '_', 'BYTES', '_', 'OBJECT', '_', 'HEADER', '+', '▁2', '▁*', '▁Integer', '.', 'BYTES', '▁+', '▁Ram', 'Usage', 'Estimator', '.', 'NUM', '_', 'BYTES', '_', 'OBJECT', '_', 'REF', ')', '▁+', '▁Ram', 'Usage', 'Estimator', '.', 'size', 'Of', '(', 'blocks', ');', '}']
['▁public', '▁Get', 'Domain', 'Suggestions', 'Result', '▁getDomain', 'Suggestions', '(', 'Get', 'Domain', 'Suggestions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Domain', 'Suggestions', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Stack', 'Events', 'Result', '▁describe', 'Stack', 'Events', '(', 'Des', 'cribe', 'Stack', 'Events', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Stack', 'Events', '(', 'request', ');', '}']
['▁public', '▁void', '▁set', 'Rule', '(', 'int', '▁idx', ',', '▁Conditional', 'Formatting', 'Rule', '▁cf', 'Rule', '){', 'set', 'Rule', '(', 'idx', ',', '▁(', 'H', 'SSF', 'Conditional', 'Formatting', 'Rule', ')', 'cf', 'Rule', ');', '}']
['▁public', '▁Create', 'Resolver', 'Rule', 'Result', '▁create', 'Resolver', 'Rule', '(', 'Create', 'Resolver', 'Rule', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Resolver', 'Rule', '(', 'request', ');', '}']
['▁public', '▁Series', 'Index', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'index', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁Get', 'Styles', 'Request', '()', '▁{', 'super', '("', 'l', 'ub', 'an', 'cloud', '",', '▁"2018', '-05', '-09', '",', '▁"', 'Get', 'Styles', '",', '▁"', 'l', 'ub', 'an', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'grid', 'set', '_', 'flag', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁obj', ')', '▁{', 'if', '▁(', 'this', '▁==', '▁obj', ')', '▁{', 'return', '▁true', ';}', 'if', '▁(', 'obj', '▁==', '▁null', ')', '▁{', 'return', '▁false', ';}', 'if', '▁(', 'getClass', '()', '▁!=', '▁obj', '.', 'getClass', '())', '▁{', 'return', '▁false', ';}', 'To', 'ff', 's', '▁other', '▁=', '▁(', 'To', 'ff', 's', ')', '▁obj', ';', 'if', '▁(', 'get', 'StartOffset', '()', '▁!=', '▁other', '.', 'get', 'StartOffset', '())', '▁{', 'return', '▁false', ';}', 'if', '▁(', 'get', 'EndOffset', '()', '▁!=', '▁other', '.', 'get', 'EndOffset', '())', '▁{', 'return', '▁false', ';}', 'return', '▁true', ';}']
['▁public', '▁Create', 'Gateway', 'Group', 'Result', '▁create', 'Gateway', 'Group', '(', 'Create', 'Gateway', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Gateway', 'Group', '(', 'request', ');', '}']
['▁public', '▁Create', 'Participant', 'Connection', 'Result', '▁create', 'Participant', 'Connection', '(', 'Create', 'Participant', 'Connection', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Participant', 'Connection', '(', 'request', ');', '}']
['▁public', '▁static', '▁double', '▁ir', 'r', '(', 'double', '[]', '▁income', ')', '▁{', 'return', '▁ir', 'r', '(', 'in', 'come', ',', '▁0.1', 'd', ');', '}']
['▁public', '▁Register', 'Workspace', 'Directory', 'Result', '▁register', 'Workspace', 'Directory', '(', 'Register', 'Workspace', 'Directory', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Register', 'Workspace', 'Directory', '(', 'request', ');', '}']
['▁public', '▁Rev', 'ert', 'Command', '▁include', '(', 'Any', 'ObjectId', '▁commit', ')', '▁{', 'return', '▁include', '(', 'commit', '.', 'getName', '(),', '▁commit', ');', '}']
['▁public', '▁Value', 'Eval', '▁evaluate', '(', 'int', '▁src', 'Row', 'Index', ',', '▁int', '▁src', 'ColumnIndex', ',', '▁Value', 'Eval', '▁in', 'umber', 'VE', ')', '▁{', 'Value', 'Eval', '▁ve', 'Text', '1;', 'try', '▁{', 've', 'Text', '1', '▁=', '▁Operand', 'Resolver', '.', 'get', 'Single', 'Value', '(', 'in', 'umber', 'VE', ',', '▁src', 'Row', 'Index', ',', '▁src', 'ColumnIndex', ');', '}', '▁catch', '▁(', 'Evaluation', 'Exception', '▁e', ')', '▁{', 'return', '▁e', '.', 'get', 'Error', 'Eval', '();', '}', 'String', '▁i', 'Number', '▁=', '▁Operand', 'Resolver', '.', 'coerce', 'Value', 'ToString', '(', 've', 'Text', '1);', 'Matcher', '▁m', '▁=', '▁COMP', 'LEX', '_', 'NUMBER', '_', 'PATTERN', '.', 'matcher', '(', 'i', 'Number', ');', 'boolean', '▁result', '▁=', '▁m', '.', 'matches', '();', 'String', '▁imag', 'inary', '▁=', '▁"";', 'if', '▁(', 'result', ')', '▁{', 'String', '▁imag', 'inary', 'Group', '▁=', '▁m', '.', 'group', '(5', ');', 'boolean', '▁has', 'Im', 'ag', 'inary', 'Part', '▁=', '▁imag', 'inary', 'Group', '.', 'equals', '("', 'i', '")', '▁||', '▁imag', 'inary', 'Group', '.', 'equals', '("', 'j', '");', 'if', '▁(', 'imag', 'inary', 'Group', '.', 'length', '()', '▁==', '▁0)', '▁{', 'return', '▁new', '▁String', 'Eval', '(', 'String', '.', 'valueOf', '(0', '));', '}', 'if', '▁(', 'has', 'Im', 'ag', 'inary', 'Part', ')', '▁{', 'String', '▁sign', '▁=', '▁"";', 'String', '▁imag', 'inary', 'Sign', '▁=', '▁m', '.', 'group', '(', 'GROUP', '3_', 'IM', 'AG', 'IN', 'ARY', '_', 'SIGN', ');', 'if', '▁(', 'imag', 'inary', 'Sign', '.', 'length', '()', '▁!=', '▁0', '▁&&', '▁!', '(', 'imag', 'inary', 'Sign', '.', 'equals', '("', '+', '")))', '▁{', 'sign', '▁=', '▁imag', 'inary', 'Sign', ';}', 'String', '▁group', 'Im', 'ag', 'inary', 'Number', '▁=', '▁m', '.', 'group', '(', 'GROUP', '4_', 'IM', 'AG', 'IN', 'ARY', '_', 'INTEGER', '_', 'OR', '_', 'DOUBLE', ');', 'if', '▁(', 'group', 'Im', 'ag', 'inary', 'Number', '.', 'length', '()', '▁!=', '▁0)', '▁{', 'imag', 'inary', '▁=', '▁sign', '▁+', '▁group', 'Im', 'ag', 'inary', 'Number', ';}', '▁else', '▁{', 'imag', 'inary', '▁=', '▁sign', '▁+', '▁"1"', ';', '}}', '}', '▁else', '▁{', 'return', '▁Error', 'Eval', '.', 'NUM', '_', 'ERROR', ';}', 'return', '▁new', '▁String', 'Eval', '(', 'imag', 'inary', ');', '}']
['▁public', '▁E', '▁poll', 'Last', '()', '▁{', 'Map', '.', 'Entry', '<', 'E', ',', '▁Object', '>', '▁entry', '▁=', '▁backing', 'Map', '.', 'poll', 'Last', 'Entry', '();', 'return', '▁(', 'entry', '▁==', '▁null', ')', '▁?', '▁null', '▁:', '▁entry', '.', 'getKey', '();', '}']
['▁public', '▁int', '▁read', 'U', 'Short', '(){', 'int', '▁ch', '1', '▁=', '▁read', 'U', 'Byte', '();', 'int', '▁ch', '2', '▁=', '▁read', 'U', 'Byte', '();', 'return', '▁(', 'ch', '2', '▁<<', '▁8)', '▁+', '▁(', 'ch', '1', '▁<<', '▁0);', '}']
['▁public', '▁Modify', 'Snapshot', 'Attribute', 'Request', '(', 'String', '▁snapshotId', ',', '▁Snapshot', 'AttributeName', '▁attribute', ',', '▁Operation', 'Type', '▁operation', 'Type', ')', '▁{', 'set', 'Snapshot', 'Id', '(', 'snapshot', 'Id', ');', 'setAttribute', '(', 'attribute', '.', 'toString', '());', 'set', 'Operation', 'Type', '(', 'operation', 'Type', '.', 'toString', '());', '}']
['▁public', '▁List', 'B', 'onus', 'Pay', 'ments', 'Result', '▁list', 'B', 'onus', 'Pay', 'ments', '(', 'List', 'B', 'onus', 'Pay', 'ments', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'B', 'onus', 'Pay', 'ments', '(', 'request', ');', '}']
['▁public', '▁V', '▁get', '(', 'CharSequence', '▁cs', ')', '▁{', 'if', '(', 'cs', '▁==', '▁null', ')', 'throw', '▁new', '▁Null', 'PointerException', '();', 'return', '▁null', ';}']
['▁public', '▁Token', 'Filter', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'Common', 'G', 'rams', 'Filter', '▁common', 'G', 'rams', '▁=', '▁(', 'Common', 'G', 'rams', 'Filter', ')', '▁super', '.', 'create', '(', 'input', ');', 'return', '▁new', '▁Common', 'G', 'rams', 'Query', 'Filter', '(', 'common', 'G', 'rams', ');', '}']
['▁public', '▁String', '▁getPath', '()', '▁{', 'return', '▁path', ';}']
['▁public', '▁Init', 'iate', 'Multipart', 'Upload', 'Result', '▁initiate', 'Multipart', 'Upload', '(', 'Init', 'iate', 'Multipart', 'Upload', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Init', 'iate', 'Multipart', 'Upload', '(', 'request', ');', '}']
['▁public', '▁StringBuilder', '▁insert', '(', 'int', '▁offset', ',', '▁int', '▁i', ')', '▁{', 'insert', '0(', 'offset', ',', '▁Integer', '.', 'toString', '(', 'i', '));', 'return', '▁this', ';}']
['▁public', '▁void', '▁decode', '(', 'long', '[]', '▁blocks', ',', '▁int', '▁blocks', 'Offset', ',', '▁int', '[]', '▁values', ',', '▁int', '▁values', 'Offset', ',', '▁int', '▁iterations', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁iterations', ';', '▁++', 'i', ')', '▁{', 'final', '▁long', '▁block', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', '];', 'for', '▁(', 'int', '▁shift', '▁=', '▁6', '2;', '▁shift', '▁>=', '▁0;', '▁shift', '▁-=', '▁2)', '▁{', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'int', ')', '▁((', 'block', '▁>>>', '▁shift', ')', '▁&', '▁3', ');', '}}', '}']
['▁public', '▁TokenStream', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁E', 'lision', 'Filter', '(', 'input', ',', '▁articles', ');', '}']
['▁public', '▁boolean', '▁eat', '(', 'Row', '▁in', ',', '▁int', '▁rem', 'ap', '[])', '▁{', 'int', '▁sum', '▁=', '▁0;', 'for', '▁(', 'Iterator', '<', 'Cell', '>', '▁i', '▁=', '▁in', '.', 'cells', '.', 'values', '().', 'iterator', '();', '▁i', '.', 'hasNext', '();', ')', '▁{', 'Cell', '▁c', '▁=', '▁i', '.', 'next', '();', 'sum', '▁+=', '▁c', '.', 'cnt', ';', 'if', '▁(', 'c', '.', 'ref', '▁>=', '▁0)', '▁{', 'if', '▁(', 're', 'map', '[', 'c', '.', 'ref', ']', '▁==', '▁0)', '▁{', 'c', '.', 'ref', '▁=', '▁-1;', '}}', '}', 'int', '▁frame', '▁=', '▁sum', '▁/', '▁10;', 'boolean', '▁live', '▁=', '▁false', ';', 'for', '▁(', 'Iterator', '<', 'Cell', '>', '▁i', '▁=', '▁in', '.', 'cells', '.', 'values', '().', 'iterator', '();', '▁i', '.', 'hasNext', '();', ')', '▁{', 'Cell', '▁c', '▁=', '▁i', '.', 'next', '();', 'if', '▁(', 'c', '.', 'cnt', '▁<', '▁frame', '▁&&', '▁c', '.', 'cmd', '▁>=', '▁0)', '▁{', 'c', '.', 'cnt', '▁=', '▁0;', 'c', '.', 'cmd', '▁=', '▁-1', ';}', 'if', '▁(', 'c', '.', 'cmd', '▁>=', '▁0', '▁||', '▁c', '.', 'ref', '▁>=', '▁0)', '▁{', 'live', '▁|=', '▁true', ';', '}}', 'return', '▁!', 'live', ';}']
['▁final', '▁public', '▁Token', '▁getToken', '(', 'int', '▁index', ')', '▁{', 'Token', '▁t', '▁=', '▁jj', '_', 'look', 'ing', 'Ahead', '▁?', '▁jj', '_', 'scanpos', '▁:', '▁token', ';', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁index', ';', '▁i', '++)', '▁{', 'if', '▁(', 't', '.', 'next', '▁!=', '▁null', ')', '▁t', '▁=', '▁t', '.', 'next', ';', 'else', '▁t', '▁=', '▁t', '.', 'next', '▁=', '▁token', '_', 'source', '.', 'get', 'Next', 'Token', '();', '}', 'return', '▁t', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'sb', '.', 'append', '(', 'getClass', '().', 'getName', '()).', 'append', '("', '▁[', 'ARRAY', ']\\', 'n', '");', 'sb', '.', 'append', '("', '▁range', '="', ').', 'append', '(', 'get', 'Range', '()).', 'append', '("\\', 'n', '");', 'sb', '.', 'append', '("', '▁options', '="', ').', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(_', 'options', ')).', 'append', '("\\', 'n', '");', 'sb', '.', 'append', '("', '▁not', 'Used', '="', ').', 'append', '(', 'Hex', 'Dump', '.', 'int', 'To', 'Hex', '(_', 'field', '3', 'not', 'Used', ')).', 'append', '("\\', 'n', '");', 'sb', '.', 'append', '("', '▁formula', ':', '").', 'append', '("\\', 'n', '");', 'Pt', 'g', '[]', '▁pt', 'gs', '▁=', '▁_', 'formula', '.', 'get', 'Tokens', '();', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁pt', 'gs', '.', 'length', ';', '▁i', '++)', '▁{', 'Pt', 'g', '▁pt', 'g', '▁=', '▁pt', 'gs', '[', 'i', '];', 'sb', '.', 'append', '(', 'pt', 'g', ').', 'append', '(', 'pt', 'g', '.', 'get', 'RV', 'A', 'Type', '()).', 'append', '("\\', 'n', '");', '}', 'sb', '.', 'append', '("', ']', '");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁Get', 'Folder', 'Result', '▁getF', 'older', '(', 'Get', 'Folder', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Folder', '(', 'request', ');', '}']
['▁@', 'Override', '▁public', '▁void', '▁add', '(', 'int', '▁location', ',', '▁E', '▁object', ')', '▁{', 'throw', '▁new', '▁Unsupported', 'Operation', 'Exception', '();', '}']
['▁public', '▁Positive', 'Scores', 'Only', 'Collector', '(', 'Collector', '▁in', ')', '▁{', 'super', '(', 'in', ');', '}']
['▁public', '▁Create', 'Repo', 'Build', 'Rule', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Create', 'Repo', 'Build', 'Rule', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'repos', '/', '[', 'Repo', 'Namespace', ']/', '[', 'Repo', 'Name', ']/', 'rules', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'PUT', ');', '}']
['▁public', '▁Base', 'Ref', '(', 'Area', 'Eval', '▁ae', ')', '▁{', '_', 'ref', 'Eval', '▁=', '▁null', ';', '_', 'area', 'Eval', '▁=', '▁ae', ';', '_', 'first', 'Row', 'Index', '▁=', '▁ae', '.', 'get', 'First', 'Row', '();', '_', 'first', 'ColumnIndex', '▁=', '▁ae', '.', 'get', 'First', 'Column', '();', '_', 'height', '▁=', '▁ae', '.', 'get', 'Last', 'Row', '()', '▁-', '▁ae', '.', 'get', 'First', 'Row', '()', '▁+', '▁1;', '_', 'width', '▁=', '▁ae', '.', 'get', 'Last', 'Column', '()', '▁-', '▁ae', '.', 'get', 'First', 'Column', '()', '▁+', '▁1;', '}']
['▁public', '▁Drawing', 'Manager', '2(', '▁E', 'sch', 'er', 'D', 'gg', 'Record', '▁d', 'gg', '▁)', '▁{', 'this', '.', 'd', 'gg', '▁=', '▁d', 'gg', ';}']
['▁public', '▁void', '▁reset', '()', '▁{', 'if', '▁(!', 'first', '())', 'reset', '(', 'raw', ');', '}']
['▁public', '▁final', '▁Charset', 'Decoder', '▁reset', '()', '▁{', 'status', '▁=', '▁INIT', ';', 'impl', 'Reset', '();', 'return', '▁this', ';}']
['▁public', '▁BufferedReader', '(', 'Reader', '▁in', ',', '▁int', '▁size', ')', '▁{', 'super', '(', 'in', ');', 'if', '▁(', 'size', '▁<=', '▁0)', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'size', '▁<=', '▁0', '");', '}', 'this', '.', 'in', '▁=', '▁in', ';', 'buf', '▁=', '▁new', '▁char', '[', 'size', '];', '}']
['▁public', '▁Describe', 'Code', 'Repository', 'Result', '▁describe', 'Code', 'Repository', '(', 'Des', 'cribe', 'Code', 'Repository', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Code', 'Repository', '(', 'request', ');', '}']
['▁public', '▁DB', 'Subnet', 'Group', '▁create', 'DB', 'Subnet', 'Group', '(', 'Create', 'DB', 'Subnet', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'DB', 'Subnet', 'Group', '(', 'request', ');', '}']
['▁public', '▁Rename', 'Branch', 'Command', '▁set', 'Old', 'Name', '(', 'String', '▁oldName', ')', '▁{', 'check', 'Callable', '();', 'this', '.', 'old', 'Name', '▁=', '▁oldName', ';', 'return', '▁this', ';}']
['▁public', '▁Delete', 'Branch', 'Command', '▁set', 'Force', '(', 'boolean', '▁force', ')', '▁{', 'check', 'Callable', '();', 'this', '.', 'force', '▁=', '▁force', ';', 'return', '▁this', ';}']
['▁public', '▁Stop', 'Compilation', 'Job', 'Result', '▁stop', 'Compilation', 'Job', '(', 'Stop', 'Compilation', 'Job', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Stop', 'Compilation', 'Job', '(', 'request', ');', '}']
['▁public', '▁synchronized', '▁final', '▁void', '▁increment', 'Secondary', 'Progress', 'By', '(', 'int', '▁diff', ')', '▁{', 'set', 'Secondary', 'Progress', '(', 'm', 'Secondary', 'Progress', '▁+', '▁diff', ');', '}']
['▁public', '▁int', '[]', '▁clear', '()', '▁{', 'return', '▁bytes', 'Start', '▁=', '▁null', ';}']
['▁public', '▁String', '▁getRaw', 'Path', '()', '▁{', 'return', '▁path', ';}']
['▁public', '▁Get', 'User', 'Source', 'Account', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Get', 'User', 'Source', 'Account', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'users', '/', 'source', 'Account', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'GET', ');', '}']
['▁public', '▁Create', 'Export', 'Job', 'Result', '▁create', 'Export', 'Job', '(', 'Create', 'Export', 'Job', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Export', 'Job', '(', 'request', ');', '}']
['▁public', '▁Create', 'D', 'ed', 'icated', 'Ip', 'Pool', 'Result', '▁create', 'D', 'ed', 'icated', 'Ip', 'Pool', '(', 'Create', 'D', 'ed', 'icated', 'Ip', 'Pool', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'D', 'ed', 'icated', 'Ip', 'Pool', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁obj', ')', '▁{', 'if', '▁(', 'this', '▁==', '▁obj', ')', '▁{', 'return', '▁true', ';}', 'if', '▁(', 'obj', '▁==', '▁null', ')', '▁{', 'return', '▁false', ';}', 'if', '▁(', 'obj', '▁instanceof', '▁H', 'SSF', 'Cell', 'Style', ')', '▁{', 'final', '▁H', 'SSF', 'Cell', 'Style', '▁other', '▁=', '▁(', 'H', 'SSF', 'Cell', 'Style', ')', '▁obj', ';', 'if', '▁(_', 'format', '▁==', '▁null', ')', '▁{', 'if', '▁(', 'other', '._', 'format', '▁!=', '▁null', ')', '▁{', 'return', '▁false', ';', '}}', '▁else', '▁if', '▁(!', '_', 'format', '.', 'equals', '(', 'other', '._', 'format', '))', '▁{', 'return', '▁false', ';}', 'if', '▁(_', 'index', '▁!=', '▁other', '._', 'index', ')', '▁{', 'return', '▁false', ';}', 'return', '▁true', ';}', 'return', '▁false', ';}']
['▁public', '▁Release', 'Hosts', 'Result', '▁release', 'Hosts', '(', 'Release', 'Hosts', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Release', 'Hosts', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁object', ')', '▁{', 'if', '▁(', 'this', '▁==', '▁object', ')', '▁{', 'return', '▁true', ';}', 'if', '▁(', 'object', '▁instanceof', '▁Set', ')', '▁{', 'Set', '<?>', '▁s', '▁=', '▁(', 'Set', '<?>', ')', '▁object', ';', 'try', '▁{', 'return', '▁size', '()', '▁==', '▁s', '.', 'size', '()', '▁&&', '▁containsAll', '(', 's', ');', '}', '▁catch', '▁(', 'Null', 'PointerException', '▁ignored', ')', '▁{', 'return', '▁false', ';}', '▁catch', '▁(', 'Class', 'CastException', '▁ignored', ')', '▁{', 'return', '▁false', ';', '}}', 'return', '▁false', ';}']
['▁public', '▁void', '▁set', 'Ref', 'Log', 'Message', '(', 'String', '▁msg', ',', '▁boolean', '▁append', 'Status', ')', '▁{', 'custom', 'Ref', 'Log', '▁=', '▁true', ';', 'if', '▁(', 'msg', '▁==', '▁null', '▁&&', '▁!', 'append', 'Status', ')', '▁{', 'disable', 'Ref', 'Log', '();', '}', '▁else', '▁if', '▁(', 'msg', '▁==', '▁null', '▁&&', '▁append', 'Status', ')', '▁{', 'ref', 'Log', 'Message', '▁=', '▁"";', '▁ref', 'Log', 'Include', 'Result', '▁=', '▁true', ';}', '▁else', '▁{', 'ref', 'Log', 'Message', '▁=', '▁msg', ';', 'ref', 'Log', 'Include', 'Result', '▁=', '▁append', 'Status', ';', '}}']
['▁public', '▁Stream', 'ID', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'id', 'st', 'm', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁Rec', 'ogn', 'ize', 'Car', 'Request', '()', '▁{', 'super', '("', 'vision', 'ai', '-', 'p', 'oc', '",', '▁"', '2020', '-04', '-08', '",', '▁"', 'Recogn', 'ize', 'Car', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁final', '▁ByteOrder', '▁order', '()', '▁{', 'return', '▁ByteOrder', '.', 'native', 'Order', '();', '}']
['▁public', '▁int', '▁getA', 'head', 'Count', '()', '▁{', 'return', '▁ahead', 'Count', ';}']
['▁public', '▁boolean', '▁isNew', 'Fragment', '()', '▁{', 'return', '▁false', ';}']
['▁public', '▁Get', 'Cloud', 'Front', 'Origin', 'Access', 'Identity', 'Config', 'Result', '▁getCl', 'oud', 'Front', 'Origin', 'Access', 'Identity', 'Config', '(', 'Get', 'Cloud', 'Front', 'Origin', 'Access', 'Identity', 'Config', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Cloud', 'Front', 'Origin', 'Access', 'Identity', 'Config', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁matches', '(', 'int', '▁symbol', ',', '▁int', '▁min', 'V', 'ocab', 'Symbol', ',', '▁int', '▁max', 'V', 'ocab', 'Symbol', ')', '▁{', 'return', '▁label', '▁==', '▁symbol', ';}']
['▁public', '▁Delete', 'Trans', 'it', 'Gateway', 'Result', '▁delete', 'Trans', 'it', 'Gateway', '(', 'Delete', 'Trans', 'it', 'Gateway', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Trans', 'it', 'Gateway', '(', 'request', ');', '}']
['▁public', '▁static', '▁byte', '[]', '▁grow', '(', 'byte', '[]', '▁array', ',', '▁int', '▁minSize', ')', '▁{', 'assert', '▁minSize', '▁>=', '▁0:', '▁"', 'size', '▁must', '▁be', '▁positive', '▁(', 'got', '▁"', '▁+', '▁minSize', '▁+', '▁"', '):', '▁likely', '▁integer', '▁overflow', '?', '";', 'if', '▁(', 'array', '.', 'length', '▁<', '▁minSize', ')', '▁{', 'return', '▁grow', 'Exact', '(', 'array', ',', '▁overs', 'ize', '(', 'min', 'Size', ',', '▁Byte', '.', 'BYTES', '));', '}', '▁else', '▁return', '▁array', ';}']
['▁public', '▁Create', 'Transaction', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Create', 'Transaction', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁Batch', 'Ref', 'Update', '▁set', 'Ref', 'Log', 'Ident', '(', 'Person', 'Ident', '▁pi', ')', '▁{', 'ref', 'Log', 'Ident', '▁=', '▁pi', ';', 'return', '▁this', ';}']
['▁public', '▁Get', 'Launch', 'Template', 'Data', 'Result', '▁getL', 'aunch', 'Template', 'Data', '(', 'Get', 'Launch', 'Template', 'Data', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Launch', 'Template', 'Data', '(', 'request', ');', '}']
['▁public', '▁Parse', 'Info', '(', 'Pro', 'filing', 'AT', 'NS', 'im', 'ulator', '▁at', 'n', 'Sim', 'ulator', ')', '▁{', 'this', '.', 'at', 'n', 'Sim', 'ulator', '▁=', '▁at', 'n', 'Sim', 'ulator', ';}']
['▁public', '▁Simple', 'QQ', 'Parser', '(', 'String', '▁q', 'q', 'Names', '[],', '▁String', '▁index', 'Field', ')', '▁{', 'this', '.', 'qq', 'Names', '▁=', '▁q', 'q', 'Names', ';', 'this', '.', 'index', 'Field', '▁=', '▁index', 'Field', ';}']
['▁public', '▁DB', 'Cluster', '▁promote', 'Read', 'Replica', 'DB', 'Cluster', '(', 'Prom', 'ote', 'Read', 'Replica', 'DB', 'Cluster', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Prom', 'ote', 'Read', 'Replica', 'DB', 'Cluster', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Capacity', 'Reser', 'v', 'ations', 'Result', '▁describe', 'Capacity', 'Reser', 'v', 'ations', '(', 'Des', 'cribe', 'Capacity', 'Reser', 'v', 'ations', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Capacity', 'Reser', 'v', 'ations', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"', 'Index', 'Searcher', '("', '▁+', '▁reader', '▁+', '▁";', '▁executor', '="', '▁+', '▁executor', '▁+', '▁";', '▁slice', 'Execution', 'Control', 'Plane', '▁"', '▁+', '▁slice', 'Executor', '▁+', '▁")', '";', '}']
['▁public', '▁final', '▁boolean', '▁increment', 'Token', '()', '▁{', 'return', '▁false', ';}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'main', '▁+', '▁1);', 'out', '.', 'write', 'Short', '(', 'sub', 'From', ');', 'out', '.', 'write', 'Short', '(', 'sub', 'To', ');', '}']
['▁public', '▁void', '▁decode', '(', 'byte', '[]', '▁blocks', ',', '▁int', '▁blocks', 'Offset', ',', '▁int', '[]', '▁values', ',', 'int', '▁values', 'Offset', ',', '▁int', '▁iterations', ')', '▁{', 'if', '▁(', 'bits', 'Per', 'Value', '▁>', '▁3', '2)', '▁{', 'throw', '▁new', '▁Unsupported', 'Operation', 'Exception', '("', 'Cannot', '▁decode', '▁"', '▁+', '▁bits', 'Per', 'Value', '▁+', '▁"-', 'bits', '▁values', '▁into', '▁an', '▁int', '[]', '");', '}', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁iterations', ';', '▁++', 'i', ')', '▁{', 'final', '▁long', '▁block', '▁=', '▁readLong', '(', 'blocks', ',', '▁blocks', 'Offset', ');', 'blocks', 'Offset', '▁+=', '▁8', ';', 'values', 'Offset', '▁=', '▁decode', '(', 'block', ',', '▁values', ',', '▁values', 'Offset', ');', '}}']
['▁public', '▁boolean', '▁is', 'Expected', 'Token', '(', 'int', '▁symbol', ')', '▁{', 'AT', 'N', '▁at', 'n', '▁=', '▁get', 'Interpreter', '().', 'at', 'n', ';', 'Parser', 'Rule', 'Context', '▁ctx', '▁=', '▁_', 'ctx', ';', 'AT', 'N', 'State', '▁s', '▁=', '▁at', 'n', '.', 'states', '.', 'get', '(', 'get', 'State', '());', 'Interval', 'Set', '▁following', '▁=', '▁at', 'n', '.', 'next', 'Tokens', '(', 's', ');', 'if', '▁(', 'following', '.', 'contains', '(', 'symbol', '))', '▁{', 'return', '▁true', ';}', 'if', '▁(', '▁!', 'following', '.', 'contains', '(', 'Token', '.', 'EP', 'SILON', ')', '▁)', '▁return', '▁false', ';', 'while', '▁(', '▁ctx', '!=', 'null', '▁&&', '▁ctx', '.', 'invo', 'king', 'State', '>', '=0', '▁&&', '▁following', '.', 'contains', '(', 'Token', '.', 'EP', 'SILON', ')', '▁)', '▁{', 'AT', 'N', 'State', '▁invoking', 'State', '▁=', '▁at', 'n', '.', 'states', '.', 'get', '(', 'ctx', '.', 'invo', 'king', 'State', ');', 'Rule', 'Transition', '▁rt', '▁=', '▁(', 'Rule', 'Transition', ')', 'invo', 'king', 'State', '.', 'transition', '(0);', 'following', '▁=', '▁at', 'n', '.', 'next', 'Tokens', '(', 'rt', '.', 'follow', 'State', ');', 'if', '▁(', 'following', '.', 'contains', '(', 'symbol', '))', '▁{', 'return', '▁true', ';}', 'ctx', '▁=', '▁(', 'Parser', 'Rule', 'Context', ')', 'ctx', '.', 'parent', ';}', 'if', '▁(', '▁following', '.', 'contains', '(', 'Token', '.', 'EP', 'SILON', ')', '▁&&', '▁symbol', '▁==', '▁Token', '.', 'EOF', '▁)', '▁{', 'return', '▁true', ';}', 'return', '▁false', ';}']
['▁public', '▁Update', 'Stream', 'Result', '▁update', 'Stream', '(', 'Update', 'Stream', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Stream', '(', 'request', ');', '}']
['▁public', '▁Value', 'Eval', '▁evaluate', '(', 'int', '▁src', 'Row', 'Index', ',', '▁int', '▁src', 'ColumnIndex', ',', '▁Value', 'Eval', '▁arg', '0)', '▁{', 'try', '▁{', 'Operand', 'Resolver', '.', 'get', 'Single', 'Value', '(', 'arg', '0,', '▁src', 'Row', 'Index', ',', '▁src', 'ColumnIndex', ');', 'return', '▁Error', 'Eval', '.', 'NA', ';}', '▁catch', '▁(', 'Evaluation', 'Exception', '▁e', ')', '▁{', 'int', '▁result', '▁=', '▁translate', 'ErrorCode', 'To', 'Error', 'Type', 'Value', '(', 'e', '.', 'get', 'Error', 'Eval', '().', 'get', 'ErrorCode', '());', 'return', '▁new', '▁Number', 'Eval', '(', 'result', ');', '}}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁getClass', '().', 'getName', '()', '▁+', '▁"', '▁["', '▁+', '▁_', 'index', '▁+', '▁"', '▁"', '▁+', '▁_', 'name', '▁+', '▁"', ']', '";', '}']
['▁public', '▁List', 'Assignments', 'For', 'H', 'IT', 'Result', '▁list', 'Assignments', 'For', 'H', 'IT', '(', 'List', 'Assignments', 'For', 'H', 'IT', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Assignments', 'For', 'H', 'IT', '(', 'request', ');', '}']
['▁public', '▁Delete', 'AccessControl', 'Rule', 'Result', '▁delete', 'AccessControl', 'Rule', '(', 'Delete', 'AccessControl', 'Rule', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'AccessControl', 'Rule', '(', 'request', ');', '}']
['▁public', '▁Arc', '<', 'Long', '>', '▁getFirst', 'Arc', '(', 'F', 'ST', '.', 'Arc', '<', 'Long', '>', '▁arc', ')', '▁{', 'return', '▁fst', '.', 'get', 'First', 'Arc', '(', 'arc', ');', '}']
['▁public', '▁void', '▁decode', '(', 'long', '[]', '▁blocks', ',', '▁int', '▁blocks', 'Offset', ',', '▁int', '[]', '▁values', ',', '▁int', '▁values', 'Offset', ',', '▁int', '▁iterations', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁iterations', ';', '▁++', 'i', ')', '▁{', 'final', '▁long', '▁block', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', '];', 'for', '▁(', 'int', '▁shift', '▁=', '▁48', ';', '▁shift', '▁>=', '▁0;', '▁shift', '▁-=', '▁16', ')', '▁{', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'int', ')', '▁((', 'block', '▁>>>', '▁shift', ')', '▁&', '▁65535', ');', '}}', '}']
['▁public', '▁long', '▁skip', '(', 'long', '▁char', 'Count', ')', '▁throws', '▁IOException', '▁{', 'if', '▁(', 'char', 'Count', '▁<', '▁0)', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'char', 'Count', '▁<', '▁0:', '▁"', '▁+', '▁char', 'Count', ');', '}', 'synchron', 'ized', '▁(', 'lock', ')', '▁{', 'check', 'Not', 'Closed', '();', 'if', '▁(', 'char', 'Count', '▁==', '▁0)', '▁{', 'return', '▁0;', '}', 'long', '▁in', 'Sk', 'ipped', ';', 'int', '▁available', 'From', 'Buffer', '▁=', '▁buf', '.', 'length', '▁-', '▁pos', ';', 'if', '▁(', 'available', 'From', 'Buffer', '▁>', '▁0)', '▁{', 'long', '▁required', 'From', 'In', '▁=', '▁char', 'Count', '▁-', '▁available', 'From', 'Buffer', ';', 'if', '▁(', 'required', 'From', 'In', '▁<=', '▁0)', '▁{', 'pos', '▁+=', '▁char', 'Count', ';', 'return', '▁char', 'Count', ';}', 'pos', '▁+=', '▁available', 'From', 'Buffer', ';', 'in', 'Sk', 'ipped', '▁=', '▁in', '.', 'skip', '(', 'required', 'From', 'In', ');', '}', '▁else', '▁{', 'in', 'Sk', 'ipped', '▁=', '▁in', '.', 'skip', '(', 'char', 'Count', ');', '}', 'return', '▁in', 'Sk', 'ipped', '▁+', '▁available', 'From', 'Buffer', ';', '}}']
['▁public', '▁Map', '<', 'String', ',', '▁Ref', '>', '▁get', 'Refs', 'Map', '()', '▁{', 'return', '▁advert', 'ised', 'Refs', ';}']
['▁public', '▁Update', 'Api', 'Key', 'Result', '▁update', 'Api', 'Key', '(', 'Update', 'Api', 'Key', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Api', 'Key', '(', 'request', ');', '}']
['▁public', '▁Object', 'Stream', '▁openStream', '()', '▁throws', '▁Missing', 'ObjectException', ',', '▁IOException', '▁{', 'Pack', 'InputStream', '▁pack', 'In', ';', '@', 'SuppressWarnings', '("', 'resource', '")', 'D', 'fs', 'Reader', '▁ctx', '▁=', '▁db', '.', 'new', 'Reader', '();', 'try', '▁{', 'try', '▁{', 'pack', 'In', '▁=', '▁new', '▁Pack', 'InputStream', '(', 'pack', ',', '▁object', 'Offset', '▁+', '▁header', 'Length', ',', '▁ctx', ');', 'ctx', '▁=', '▁null', ';', '▁}', '▁catch', '▁(', 'IOException', '▁pack', 'G', 'one', ')', '▁{', 'ObjectId', '▁obj', '▁=', '▁pack', '.', 'get', 'Reverse', 'Idx', '(', 'ctx', ').', 'find', 'Object', '(', 'object', 'Offset', ');', 'return', '▁ctx', '.', 'open', '(', 'obj', ',', '▁type', ').', 'open', 'Stream', '();', '}}', '▁finally', '▁{', 'if', '▁(', 'ctx', '▁!=', '▁null', ')', '▁{', 'ctx', '.', 'close', '();', '}}', 'int', '▁buf', 'sz', '▁=', '▁8', '19', '2;', 'InputStream', '▁in', '▁=', '▁new', '▁Buffered', 'InputStream', '(', 'new', '▁Inf', 'later', 'InputStream', '(', 'pack', 'In', ',', '▁pack', 'In', '.', 'ctx', '.', 'inf', 'later', '(),', '▁buf', 'sz', '),', 'buf', 'sz', ');', 'return', '▁new', '▁Object', 'Stream', '.', 'Filter', '(', 'type', ',', '▁size', ',', '▁in', ');', '}']
['▁public', '▁ArrayList', '()', '▁{', 'array', '▁=', '▁Empty', 'Array', '.', 'OBJECT', ';}']
['▁public', '▁Update', 'Detector', 'Version', 'Result', '▁update', 'Detector', 'Version', '(', 'Update', 'Detector', 'Version', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Detector', 'Version', '(', 'request', ');', '}']
['▁public', '▁void', '▁resize', '(){', 'resize', '(', 'Double', '.', 'MAX', '_', 'VALUE', ');', '}']
['▁public', '▁Rev', 'Flag', 'Set', '(', 'Collection', '<', 'Rev', 'Flag', '>', '▁s', ')', '▁{', 'this', '();', 'addAll', '(', 's', ');', '}']
['▁public', '▁int', '▁size', '()', '▁{', 'return', '▁size', ';}']
['▁public', '▁final', '▁long', '▁getLong', '()', '▁{', 'int', '▁new', 'Position', '▁=', '▁position', '▁+', '▁Size', 'Of', '.', 'LONG', ';', 'if', '▁(', 'new', 'Position', '▁>', '▁limit', ')', '▁{', 'throw', '▁new', '▁Buffer', 'Under', 'flow', 'Exception', '();', '}', 'long', '▁result', '▁=', '▁Memory', '.', 'pe', 'ek', 'Long', '(', 'back', 'ing', 'Array', ',', '▁offset', '▁+', '▁position', ',', '▁order', ');', 'position', '▁=', '▁new', 'Position', ';', 'return', '▁result', ';}']
['▁public', '▁StringBuilder', '▁insert', '(', 'int', '▁offset', ',', '▁long', '▁l', ')', '▁{', 'insert', '0(', 'offset', ',', '▁Long', '.', 'toString', '(', 'l', '));', 'return', '▁this', ';}']
['▁public', '▁T', 'ur', 'k', 'ish', 'LowerCase', 'Filter', '(', 'Token', 'Stream', '▁in', ')', '▁{', 'super', '(', 'in', ');', '}']
['▁public', '▁ParseTree', 'Match', '▁match', '(', 'Parse', 'Tree', '▁tree', ',', '▁ParseTree', 'Pattern', '▁pattern', ')', '▁{', 'Multi', 'Map', '<', 'String', ',', '▁ParseTree', '>', '▁labels', '▁=', '▁new', '▁Multi', 'Map', '<', 'String', ',', '▁ParseTree', '>();', 'Parse', 'Tree', '▁mismatch', 'ed', 'Node', '▁=', '▁match', 'Impl', '(', 'tree', ',', '▁pattern', '.', 'get', 'Pattern', 'Tree', '(),', '▁labels', ');', 'return', '▁new', '▁ParseTree', 'Match', '(', 'tree', ',', '▁pattern', ',', '▁labels', ',', '▁mismatch', 'ed', 'Node', ');', '}']
['▁public', '▁void', '▁add', 'If', 'No', 'Overlap', '(', '▁Weight', 'ed', 'Phrase', 'Info', '▁w', 'pi', '▁){', 'for', '(', '▁Weight', 'ed', 'Phrase', 'Info', '▁exist', 'W', 'pi', '▁:', '▁getPh', 'rase', 'List', '()', '▁){', 'if', '(', '▁exist', 'W', 'pi', '.', 'is', 'Offset', 'Overlap', '(', '▁w', 'pi', '▁)', '▁)', '▁{', 'exist', 'W', 'pi', '.', 'get', 'Terms', 'Infos', '().', 'addAll', '(', '▁w', 'pi', '.', 'get', 'Terms', 'Infos', '()', '▁);', 'return', ';', '}}', 'get', 'Phrase', 'List', '().', 'add', '(', '▁w', 'pi', '▁);', '}']
['▁public', '▁Three', 'Way', 'Merger', '▁new', 'Merger', '(', 'Repository', '▁db', ')', '▁{', 'return', '▁new', '▁In', 'Core', 'Merger', '(', 'db', ');', '}']
['▁public', '▁float', '▁doc', 'Score', '(', 'int', '▁docId', ',', '▁String', '▁field', ',', '▁int', '▁num', 'Payload', 's', 'Seen', ',', '▁float', '▁payload', 'Score', ')', '▁{', 'return', '▁num', 'Payload', 's', 'Seen', '▁>', '▁0', '▁?', '▁(', 'payload', 'Score', '▁/', '▁num', 'Payload', 's', 'Seen', ')', '▁:', '▁1;', '}']
['▁public', '▁Collection', '<', 'Parse', 'Tree', '>', '▁evaluate', '(', 'Parse', 'Tree', '▁t', ')', '▁{', 'return', '▁T', 'rees', '.', 'findAll', 'Rule', 'Nodes', '(', 't', ',', '▁rule', 'Index', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'C', 'FR', 'ULE', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'condition', '_', 'type', '▁=', '").', 'append', '(', 'get', 'Condition', 'Type', '()).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁OPTION', '▁FLAGS', '=0', 'x', '").', 'append', '(', 'Integer', '.', 'to', 'HexString', '(', 'get', 'Options', '())', ').', 'append', '("\\', 'n', '");', 'if', '▁(', 'contains', 'Font', 'Formatting', 'Block', '())', '▁{', 'buffer', '.', 'append', '(_', 'font', 'Formatting', ').', 'append', '("\\', 'n', '");', '}', 'if', '▁(', 'contains', 'Border', 'Formatting', 'Block', '())', '▁{', 'buffer', '.', 'append', '(_', 'border', 'Formatting', ').', 'append', '("\\', 'n', '");', '}', 'if', '▁(', 'contains', 'Pattern', 'Formatting', 'Block', '())', '▁{', 'buffer', '.', 'append', '(_', 'pattern', 'Formatting', ').', 'append', '("\\', 'n', '");', '}', 'buffer', '.', 'append', '("', '▁Formula', '▁1', '▁=', '").', 'append', '(', 'Arrays', '.', 'toString', '(', 'get', 'Formula', '1', '().', 'get', 'Tokens', '())', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁Formula', '▁2', '▁=', '").', 'append', '(', 'Arrays', '.', 'toString', '(', 'get', 'Formula', '2', '().', 'get', 'Tokens', '())', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'C', 'FR', 'ULE', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁Describe', 'Service', 'Updates', 'Result', '▁describe', 'Service', 'Updates', '(', 'Des', 'cribe', 'Service', 'Updates', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Service', 'Updates', '(', 'request', ');', '}']
['▁public', '▁String', '▁getName', 'Name', '(', 'int', '▁index', '){', 'return', '▁getName', 'At', '(', 'index', ').', 'getName', 'Name', '();', '}']
['▁public', '▁Describe', 'Locations', 'Result', '▁describe', 'Locations', '()', '▁{', 'return', '▁describe', 'Locations', '(', 'new', '▁Describe', 'Locations', 'Request', '());', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"<', 'ph', 'rases', 'lop', '▁value', '=\'"', '▁+', '▁getValue', 'String', '()', '▁+', '▁"', "'>", '"', '▁+', '▁"\\', 'n', '"+', '▁getChild', '().', 'toString', '()', '▁+', '▁"\\', 'n', '</', 'ph', 'rases', 'lop', '>";', '}']
['▁public', '▁Dir', 'CacheEntry', '▁getDir', 'CacheEntry', '()', '▁{', 'return', '▁current', 'Sub', 'tree', '▁==', '▁null', '▁?', '▁current', 'Entry', '▁:', '▁null', ';}']
['▁public', '▁IntBuffer', '▁put', '(', 'int', '[]', '▁src', ',', '▁int', '▁src', 'Offset', ',', '▁int', '▁int', 'Count', ')', '▁{', 'Arrays', '.', 'check', 'Offset', 'And', 'Count', '(', 'src', '.', 'length', ',', '▁src', 'Offset', ',', '▁int', 'Count', ');', 'if', '▁(', 'int', 'Count', '▁>', '▁remaining', '())', '▁{', 'throw', '▁new', '▁Buffer', 'Overflow', 'Exception', '();', '}', 'for', '▁(', 'int', '▁i', '▁=', '▁src', 'Offset', ';', '▁i', '▁<', '▁src', 'Offset', '▁+', '▁int', 'Count', ';', '▁++', 'i', ')', '▁{', 'put', '(', 'src', '[', 'i', ']);', '}', 'return', '▁this', ';}']
['▁public', '▁void', '▁trim', 'To', 'Size', '()', '▁{', 'int', '▁s', '▁=', '▁size', ';', 'if', '▁(', 's', '▁==', '▁array', '.', 'length', ')', '▁{', 'return', ';}', 'if', '▁(', 's', '▁==', '▁0)', '▁{', 'array', '▁=', '▁Empty', 'Array', '.', 'OBJECT', ';}', '▁else', '▁{', 'Object', '[]', '▁newArray', '▁=', '▁new', '▁Object', '[', 's', '];', 'System', '.', 'array', 'copy', '(', 'array', ',', '▁0,', '▁newArray', ',', '▁0,', '▁s', ');', 'array', '▁=', '▁newArray', ';}', 'mod', 'Count', '++;', '}']
['▁public', '▁Describe', 'Local', 'Gateway', 'Virtual', 'Interfaces', 'Result', '▁describe', 'Local', 'Gateway', 'Virtual', 'Interfaces', '(', 'Des', 'cribe', 'Local', 'Gateway', 'Virtual', 'Interfaces', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Local', 'Gateway', 'Virtual', 'Interfaces', '(', 'request', ');', '}']
['▁public', '▁TokenStream', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁R', 'uss', 'ian', 'Light', 'St', 'em', 'Filter', '(', 'input', ');', '}']
['▁public', '▁int', '▁[]', '▁toArray', '(', 'final', '▁int', '▁[]', '▁a', '){', 'int', '[]', '▁rval', ';', 'if', '▁(', 'a', '.', 'length', '▁==', '▁_', 'limit', '){', 'System', '.', 'array', 'copy', '(_', 'array', ',', '▁0,', '▁a', ',', '▁0,', '▁_', 'limit', ');', 'r', 'val', '▁=', '▁a', ';}', 'else', '{', 'r', 'val', '▁=', '▁toArray', '();', '}', 'return', '▁rval', ';}']
['▁public', '▁Basic', 'Session', 'Credentials', '(', 'String', '▁access', 'KeyId', ',', '▁String', '▁access', 'Key', 'Secret', ',', '▁String', '▁session', 'Token', ',', 'long', '▁role', 'Session', 'Duration', 'Seconds', ')', '▁{', 'if', '▁(', 'access', 'KeyId', '▁==', '▁null', ')', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Access', '▁key', '▁ID', '▁cannot', '▁be', '▁null', '.");', '}', 'if', '▁(', 'access', 'Key', 'Secret', '▁==', '▁null', ')', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Access', '▁key', '▁secret', '▁cannot', '▁be', '▁null', '.");', '}', 'this', '.', 'access', 'KeyId', '▁=', '▁access', 'KeyId', ';', 'this', '.', 'access', 'Key', 'Secret', '▁=', '▁access', 'Key', 'Secret', ';', 'this', '.', 'session', 'Token', '▁=', '▁session', 'Token', ';', 'this', '.', 'role', 'Session', 'Duration', 'Seconds', '▁=', '▁role', 'Session', 'Duration', 'Seconds', ';', 'this', '.', 'session', 'Started', 'Time', 'In', 'Milli', 'Seconds', '▁=', '▁System', '.', 'current', 'TimeMillis', '();', '}']
['▁public', '▁final', '▁Short', 'Buffer', '▁get', '(', 'short', '[]', '▁dst', ',', '▁int', '▁dst', 'Offset', ',', '▁int', '▁short', 'Count', ')', '▁{', 'if', '▁(', 'short', 'Count', '▁>', '▁remaining', '())', '▁{', 'throw', '▁new', '▁Buffer', 'Under', 'flow', 'Exception', '();', '}', 'System', '.', 'array', 'copy', '(', 'back', 'ing', 'Array', ',', '▁offset', '▁+', '▁position', ',', '▁dst', ',', '▁dst', 'Offset', ',', '▁short', 'Count', ');', 'position', '▁+=', '▁short', 'Count', ';', 'return', '▁this', ';}']
['▁public', '▁Activ', 'ate', 'Event', 'Source', 'Result', '▁activate', 'Event', 'Source', '(', 'Activate', 'Event', 'Source', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Activate', 'Event', 'Source', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Receipt', 'Rule', 'Set', 'Result', '▁describe', 'Receipt', 'Rule', 'Set', '(', 'Des', 'cribe', 'Receipt', 'Rule', 'Set', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Receipt', 'Rule', 'Set', '(', 'request', ');', '}']
['▁public', '▁Filter', '(', 'String', '▁name', ')', '▁{', 'setName', '(', 'name', ');', '}']
['▁public', '▁Double', 'Buffer', '▁put', '(', 'double', '▁c', ')', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁Create', 'Traffic', 'Policy', 'Instance', 'Result', '▁create', 'Traffic', 'Policy', 'Instance', '(', 'Create', 'Traffic', 'Policy', 'Instance', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Traffic', 'Policy', 'Instance', '(', 'request', ');', '}']
['▁public', '▁J', 'apanese', 'Iteration', 'Mark', 'Char', 'Filter', '(', 'Reader', '▁input', ',', '▁boolean', '▁normalize', 'K', 'an', 'ji', ',', '▁boolean', '▁normalize', 'K', 'ana', ')', '▁{', 'super', '(', 'input', ');', 'this', '.', 'normalize', 'K', 'an', 'ji', '▁=', '▁normalize', 'K', 'an', 'ji', ';', 'this', '.', 'normalize', 'K', 'ana', '▁=', '▁normalize', 'K', 'ana', ';', 'buffer', '.', 'reset', '(', 'input', ');', '}']
['▁public', '▁void', '▁writeLong', '(', 'long', '▁v', ')', '▁{', 'write', 'Int', '((', 'int', ')(', 'v', '▁>>', '▁0', '));', 'write', 'Int', '((', 'int', ')(', 'v', '▁>>', '▁32', '));', '}']
['▁public', '▁File', 'Resolver', '()', '▁{', 'exports', '▁=', '▁new', '▁Concurrent', 'HashMap', '<>();', 'export', 'Base', '▁=', '▁new', '▁Copy', 'OnWrite', 'ArrayList', '<>();', '}']
['▁public', '▁Value', 'Eval', '▁getRef', '3', 'DE', 'val', '(', 'Ref', '3', 'DP', 'x', 'g', '▁r', 'pt', 'g', ')', '▁{', 'Sheet', 'Range', 'Evaluator', '▁s', 're', '▁=', '▁create', 'Ex', 'tern', 'Sheet', 'Ref', 'Evaluator', '(', 'r', 'pt', 'g', '.', 'get', 'Sheet', 'Name', '(),', '▁r', 'pt', 'g', '.', 'get', 'Last', 'Sheet', 'Name', '(),', '▁r', 'pt', 'g', '.', 'get', 'External', 'Workbook', 'Number', '());', 'return', '▁new', '▁Lazy', 'Ref', 'Eval', '(', 'r', 'pt', 'g', '.', 'get', 'Row', '(),', '▁r', 'pt', 'g', '.', 'get', 'Column', '(),', '▁s', 're', ');', '}']
['▁public', '▁Delete', 'Dataset', 'Result', '▁delete', 'Dataset', '(', 'Delete', 'Dataset', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Dataset', '(', 'request', ');', '}']
['▁public', '▁Start', 'Rel', 'ational', 'Database', 'Result', '▁start', 'Rel', 'ational', 'Database', '(', 'Start', 'Rel', 'ational', 'Database', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Start', 'Rel', 'ational', 'Database', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Reserved', 'Cache', 'Nodes', 'Offer', 'ings', 'Result', '▁describe', 'Reserved', 'Cache', 'Nodes', 'Offer', 'ings', '()', '▁{', 'return', '▁describe', 'Reserved', 'Cache', 'Nodes', 'Offer', 'ings', '(', 'new', '▁Describe', 'Reserved', 'Cache', 'Nodes', 'Offer', 'ings', 'Request', '());', '}']
['▁static', '▁public', '▁double', '▁p', 'mt', '(', 'double', '▁r', ',', '▁int', '▁n', 'per', ',', '▁double', '▁pv', ',', '▁double', '▁fv', ',', '▁int', '▁type', ')', '▁{', 'return', '▁-', 'r', '▁*', '▁(', 'pv', '▁*', '▁Math', '.', 'pow', '(1', '▁+', '▁r', ',', '▁n', 'per', ')', '▁+', '▁fv', ')', '▁/', '▁(', '(1', '▁+', '▁r', '*', 'type', ')', '▁*', '▁(', 'Math', '.', 'pow', '(1', '▁+', '▁r', ',', '▁n', 'per', ')', '▁-', '▁1', '));', '}']
['▁public', '▁Describe', 'Document', 'Versions', 'Result', '▁describe', 'Document', 'Versions', '(', 'Des', 'cribe', 'Document', 'Versions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Document', 'Versions', '(', 'request', ');', '}']
['▁public', '▁List', 'Publish', 'ing', 'Dest', 'inations', 'Result', '▁list', 'Publish', 'ing', 'Dest', 'inations', '(', 'List', 'Publish', 'ing', 'Dest', 'inations', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Publish', 'ing', 'Dest', 'inations', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Account', 'Alias', 'Request', '(', 'String', '▁account', 'Alias', ')', '▁{', 'set', 'Account', 'Alias', '(', 'account', 'Alias', ');', '}']
['▁public', '▁static', '▁long', '[]', '▁grow', '(', 'long', '[]', '▁array', ')', '▁{', 'return', '▁grow', '(', 'array', ',', '▁1', '▁+', '▁array', '.', 'length', ');', '}']
['▁public', '▁String', '▁output', 'ToString', '(', 'Object', '▁output', ')', '▁{', 'if', '▁(!', '(', 'output', '▁instanceof', '▁List', '))', '▁{', 'return', '▁outputs', '.', 'output', 'ToString', '((', 'T', ')', '▁output', ');', '}', '▁else', '▁{', 'List', '<', 'T', '>', '▁output', 'List', '▁=', '▁(', 'List', '<', 'T', '>)', '▁output', ';', 'StringBuilder', '▁b', '▁=', '▁new', '▁StringBuilder', '();', 'b', '.', 'append', "('", "['", ');', 'for', '(', 'int', '▁i', '=0;', 'i', '<', 'output', 'List', '.', 'size', '();', 'i', '++)', '▁{', 'if', '▁(', 'i', '▁>', '▁0)', '▁{', 'b', '.', 'append', '(",', '▁");', '}', 'b', '.', 'append', '(', 'outputs', '.', 'output', 'ToString', '(', 'output', 'List', '.', 'get', '(', 'i', ')));', '}', 'b', '.', 'append', "('", ']', "');", 'return', '▁b', '.', 'toString', '();', '}}']
['▁public', '▁void', '▁notify', 'Delete', 'Cell', '(', 'Cell', '▁cell', ')', '▁{', '_', 'book', 'Evaluator', '.', 'notify', 'Delete', 'Cell', '(', 'new', '▁H', 'SSF', 'Evaluation', 'Cell', '((', 'H', 'SSF', 'Cell', ')', 'cell', '));', '}']
['▁public', '▁StringBuilder', '▁replace', '(', 'int', '▁start', ',', '▁int', '▁end', ',', '▁String', '▁str', ')', '▁{', 'replace', '0(', 'start', ',', '▁end', ',', '▁str', ');', 'return', '▁this', ';}']
['▁public', '▁Set', 'Identity', 'Pool', 'Configuration', 'Result', '▁set', 'Identity', 'Pool', 'Configuration', '(', 'Set', 'Identity', 'Pool', 'Configuration', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Set', 'Identity', 'Pool', 'Configuration', '(', 'request', ');', '}']
['▁public', '▁static', '▁double', '▁k', 'th', 'Small', 'est', '(', 'double', '[]', '▁v', ',', '▁int', '▁k', ')', '▁{', 'double', '▁r', '▁=', '▁Double', '.', 'NaN', ';', 'int', '▁index', '▁=', '▁k', '-1;', '▁if', '▁(', 'v', '!=', 'null', '▁&&', '▁v', '.', 'length', '▁>', '▁index', '▁&&', '▁index', '▁>=', '▁0)', '▁{', 'Arrays', '.', 'sort', '(', 'v', ');', 'r', '▁=', '▁v', '[', 'index', '];', '}', 'return', '▁r', ';}']
['▁public', '▁void', '▁set', '(', 'int', '▁index', ',', '▁long', '▁value', ')', '▁{', 'final', '▁int', '▁o', '▁=', '▁index', '▁>>>', '▁5;', 'final', '▁int', '▁b', '▁=', '▁index', '▁&', '▁31', ';', 'final', '▁int', '▁shift', '▁=', '▁b', '▁<<', '▁1;', 'blocks', '[', 'o', ']', '▁=', '▁(', 'blocks', '[', 'o', ']', '▁&', '▁~', '(3', 'L', '▁<<', '▁shift', '))', '▁|', '▁(', 'value', '▁<<', '▁shift', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'if', '▁(', 'getChildren', '()', '▁==', '▁null', '▁||', '▁getChildren', '().', 'size', '()', '▁==', '▁0)', 'return', '▁"<', 'boolean', '▁operation', "='", 'and', "'", '/>', '";', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'sb', '.', 'append', '("<', 'boolean', '▁operation', "='", 'and', "'>", '");', 'for', '▁(', 'Query', 'Node', '▁child', '▁:', '▁getChildren', '())', '▁{', 'sb', '.', 'append', '("\\', 'n', '");', 'sb', '.', 'append', '(', 'child', '.', 'toString', '());', '}', 'sb', '.', 'append', '("\\', 'n', '</', 'boolean', '>");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁int', '▁sum', 'Token', 'Sizes', '(', 'int', '▁from', 'I', 'x', ',', '▁int', '▁to', 'I', 'x', ')', '▁{', 'int', '▁result', '▁=', '▁0;', 'for', '▁(', 'int', '▁i', '=', 'from', 'I', 'x', ';', '▁i', '<', 'to', 'I', 'x', ';', '▁i', '++)', '▁{', 'result', '▁+=', '▁_', 'pt', 'gs', '[', 'i', '].', 'get', 'Size', '();', '}', 'return', '▁result', ';}']
['▁public', '▁void', '▁setRead', 'only', '(', 'boolean', '▁readonly', ')', '▁{', 'if', '▁(', '▁this', '.', 'readonly', '▁&&', '▁!', 'readonly', '▁)', '▁throw', '▁new', '▁Illegal', 'StateException', '("', 'can', "'", 't', '▁alter', '▁readonly', '▁Interval', 'Set', '");', 'this', '.', 'readonly', '▁=', '▁readonly', ';}']
['▁public', '▁final', '▁void', '▁clear', 'Consum', 'ing', 'Cell', '(', 'Formula', 'Cell', 'CacheEntry', '▁c', 'ce', ')', '▁{', 'if', '(!', '_', 'consum', 'ing', 'Cells', '.', 'remove', '(', 'c', 'ce', '))', '▁{', 'throw', '▁new', '▁Illegal', 'StateException', '("', 'Specified', '▁formula', '▁cell', '▁is', '▁not', '▁consumed', '▁by', '▁this', '▁cell', '");', '}}']
['▁@', 'Override', '▁public', '▁List', '<', 'E', '>', '▁subList', '(', 'int', '▁start', ',', '▁int', '▁end', ')', '▁{', 'synchron', 'ized', '▁(', 'mut', 'ex', ')', '▁{', 'return', '▁new', '▁Synchronized', 'Random', 'Access', 'List', '<', 'E', '>(', 'list', '.', 'sub', 'List', '(', 'start', ',', '▁end', '),', '▁mutex', ');', '}}']
['▁public', '▁File', 'Header', '▁getFile', 'Header', '()', '▁{', 'return', '▁file', ';}']
['▁public', '▁Attach', 'Load', 'B', 'alancers', 'Result', '▁attach', 'Load', 'B', 'alancers', '(', 'Attach', 'Load', 'B', 'alancers', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Attach', 'Load', 'B', 'alancers', '(', 'request', ');', '}']
['▁public', '▁Init', 'iate', 'Job', 'Request', '(', 'String', '▁accountId', ',', '▁String', '▁vault', 'Name', ',', '▁Job', 'Parameters', '▁job', 'Parameters', ')', '▁{', 'set', 'Account', 'Id', '(', 'account', 'Id', ');', 'set', 'Vault', 'Name', '(', 'vault', 'Name', ');', 'set', 'Job', 'Parameters', '(', 'job', 'Parameters', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"', 'SP', 'L', '";', '}']
['▁public', '▁Replace', 'able', 'Attribute', '(', 'String', '▁name', ',', '▁String', '▁value', ',', '▁Boolean', '▁replace', ')', '▁{', 'setName', '(', 'name', ');', 'setValue', '(', 'value', ');', 'set', 'Replace', '(', 'replace', ');', '}']
['▁public', '▁final', '▁void', '▁add', '(', 'Index', 'able', 'Field', '▁field', ')', '▁{', 'fields', '.', 'add', '(', 'field', ');', '}']
['▁public', '▁Delete', 'Stack', 'Set', 'Result', '▁delete', 'Stack', 'Set', '(', 'Delete', 'Stack', 'Set', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Stack', 'Set', '(', 'request', ');', '}']
['▁public', '▁Get', 'Repo', 'Build', 'Rule', 'List', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Get', 'Repo', 'Build', 'Rule', 'List', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'repos', '/', '[', 'Repo', 'Namespace', ']/', '[', 'Repo', 'Name', ']/', 'rules', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'GET', ');', '}']
['▁public', '▁Sparse', 'Array', '(', 'int', '▁initialCapacity', ')', '▁{', 'initial', 'Capacity', '▁=', '▁ArrayUtils', '.', 'ide', 'al', 'Int', 'Array', 'Size', '(', 'initial', 'Capacity', ');', 'm', 'Keys', '▁=', '▁new', '▁int', '[', 'initial', 'Capacity', '];', 'm', 'Values', '▁=', '▁new', '▁Object', '[', 'initial', 'Capacity', '];', 'm', 'Size', '▁=', '▁0;', '}']
['▁public', '▁Invoke', 'Service', 'Request', '()', '▁{', 'super', '("', 'ind', 'ustry', '-', 'b', 'rain', '",', '▁"2018', '-07', '-12', '",', '▁"', 'Invoke', 'Service', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁List', 'Album', 'Photos', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'List', 'Album', 'Photos', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁boolean', '▁has', 'Previous', '()', '▁{', 'return', '▁link', '▁!=', '▁list', '.', 'void', 'Link', ';}']
['▁public', '▁Delete', 'H', 'sm', 'Configuration', 'Result', '▁delete', 'H', 'sm', 'Configuration', '(', 'Delete', 'H', 'sm', 'Configuration', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'H', 'sm', 'Configuration', '(', 'request', ');', '}']
['▁public', '▁Create', 'LoadBalancer', 'Request', '(', 'String', '▁load', 'Balancer', 'Name', ')', '▁{', 'set', 'LoadBalancer', 'Name', '(', 'load', 'Balancer', 'Name', ');', '}']
['▁public', '▁String', '▁getUser', 'Info', '()', '▁{', 'return', '▁decode', '(', 'user', 'Info', ');', '}']
['▁public', '▁Tag', 'Att', 'end', 'ee', 'Result', '▁tag', 'Att', 'end', 'ee', '(', 'Tag', 'Att', 'end', 'ee', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Tag', 'Att', 'end', 'ee', '(', 'request', ');', '}']
['▁public', '▁String', '▁getRef', 'Name', '()', '▁{', 'return', '▁name', ';}']
['▁public', '▁Span', 'Near', 'Query', '▁build', '()', '▁{', 'return', '▁new', '▁Span', 'Near', 'Query', '(', 'c', 'lauses', '.', 'toArray', '(', 'new', '▁Span', 'Query', '[', 'c', 'lauses', '.', 'size', '()', ']),', '▁slo', 'p', ',', '▁ordered', ');', '}']
['▁public', '▁boolean', '▁is', 'Sub', 'Total', '(', 'int', '▁rowIndex', ',', '▁int', '▁columnIndex', ')', '▁{', 'return', '▁false', ';}']
['▁public', '▁Describe', 'DB', 'Pro', 'xies', 'Result', '▁describe', 'DB', 'Pro', 'xies', '(', 'Des', 'cribe', 'DB', 'Pro', 'xies', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'DB', 'Pro', 'xies', '(', 'request', ');', '}']
['▁public', '▁Get', 'Voice', 'Connector', 'Proxy', 'Result', '▁get', 'Voice', 'Connector', 'Proxy', '(', 'Get', 'Voice', 'Connector', 'Proxy', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Voice', 'Connector', 'Proxy', '(', 'request', ');', '}']
['▁public', '▁Window', 'Cache', 'Config', '▁from', 'Config', '(', 'Config', '▁rc', ')', '▁{', 'set', 'Packed', 'Git', 'Use', 'Str', 'ong', 'Refs', '(', 'rc', '.', 'get', 'Boolean', '(', 'CONFIG', '_', 'CORE', '_', 'SECTION', ',', 'CONFIG', '_', 'KEY', '_', 'PACK', 'ED', '_', 'G', 'IT', '_', 'USE', '_', 'STR', 'ONG', 'RE', 'FS', ',', 'is', 'Packed', 'Git', 'Use', 'Str', 'ong', 'Refs', '()));', 'set', 'Packed', 'Git', 'Open', 'Files', '(', 'rc', '.', 'getInt', '(', 'CONFIG', '_', 'CORE', '_', 'SECTION', ',', '▁null', ',', 'CONFIG', '_', 'KEY', '_', 'PACK', 'ED', '_', 'G', 'IT', '_', 'OPEN', 'FILES', ',', '▁getPack', 'ed', 'Git', 'Open', 'Files', '()));', 'set', 'Packed', 'Git', 'Limit', '(', 'rc', '.', 'get', 'Long', '(', 'CONFIG', '_', 'CORE', '_', 'SECTION', ',', '▁null', ',', 'CONFIG', '_', 'KEY', '_', 'PACK', 'ED', '_', 'G', 'IT', '_', 'LIMIT', ',', '▁getPack', 'ed', 'Git', 'Limit', '()));', 'set', 'Packed', 'Git', 'WindowSize', '(', 'rc', '.', 'getInt', '(', 'CONFIG', '_', 'CORE', '_', 'SECTION', ',', '▁null', ',', 'CONFIG', '_', 'KEY', '_', 'PACK', 'ED', '_', 'G', 'IT', '_', 'WINDOW', 'SIZE', ',', '▁getPack', 'ed', 'Git', 'WindowSize', '()));', 'set', 'Packed', 'Git', 'MM', 'AP', '(', 'rc', '.', 'get', 'Boolean', '(', 'CONFIG', '_', 'CORE', '_', 'SECTION', ',', '▁null', ',', 'CONFIG', '_', 'KEY', '_', 'PACK', 'ED', '_', 'G', 'IT', '_', 'MM', 'AP', ',', '▁is', 'Packed', 'Git', 'MM', 'AP', '()));', 'set', 'Delta', 'Base', 'Cache', 'Limit', '(', 'rc', '.', 'getInt', '(', 'CONFIG', '_', 'CORE', '_', 'SECTION', ',', '▁null', ',', 'CONFIG', '_', 'KEY', '_', 'DE', 'L', 'TA', '_', 'BASE', '_', 'CACHE', '_', 'LIMIT', ',', '▁getD', 'elta', 'Base', 'Cache', 'Limit', '()));', 'long', '▁max', 'Mem', '▁=', '▁Runtime', '.', 'getRuntime', '().', 'max', 'Memory', '();', 'long', '▁s', 'ft', '▁=', '▁rc', '.', 'get', 'Long', '(', 'CONFIG', '_', 'CORE', '_', 'SECTION', ',', '▁null', ',', 'CONFIG', '_', 'KEY', '_', 'STREAM', '_', 'FILE', '_', 'T', 'RESHOLD', ',', '▁getStream', 'File', 'Threshold', '());', 's', 'ft', '▁=', '▁Math', '.', 'min', '(', 's', 'ft', ',', '▁max', 'Mem', '▁/', '▁4', ');', '▁s', 'ft', '▁=', '▁Math', '.', 'min', '(', 's', 'ft', ',', '▁Integer', '.', 'MAX', '_', 'VALUE', ');', '▁set', 'Stream', 'File', 'Threshold', '((', 'int', ')', '▁s', 'ft', ');', 'return', '▁this', ';}']
['▁public', '▁static', '▁Date', '▁getJava', 'Date', '(', 'double', '▁date', ')', '▁{', 'return', '▁getJava', 'Date', '(', 'date', ',', '▁false', ',', '▁null', ',', '▁false', ');', '}']
['▁public', '▁Start', 'Person', 'Tracking', 'Result', '▁start', 'Person', 'Tracking', '(', 'Start', 'Person', 'Tracking', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Start', 'Person', 'Tracking', '(', 'request', ');', '}']
['▁@', 'Override', '▁public', '▁int', '▁size', '()', '▁{', 'return', '▁totalSize', ';}']
['▁public', '▁Get', 'Route', 'Result', '▁getRoute', '(', 'Get', 'Route', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Route', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Cluster', 'Result', '▁delete', 'Cluster', '(', 'Delete', 'Cluster', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Cluster', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '(){', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'M', 'MS', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'add', 'Menu', '▁=', '▁"', ').', 'append', '(', 'Integer', '.', 'to', 'HexString', '(', 'get', 'Add', 'Menu', 'Count', '())', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'del', 'Menu', '▁=', '▁"', ').', 'append', '(', 'Integer', '.', 'to', 'HexString', '(', 'get', 'Del', 'Menu', 'Count', '())', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'M', 'MS', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁File', 'Based', 'Config', '(', 'Config', '▁base', ',', '▁File', '▁cfg', 'Location', ',', '▁FS', '▁fs', ')', '▁{', 'super', '(', 'base', ');', 'config', 'File', '▁=', '▁cfg', 'Location', ';', 'this', '.', 'fs', '▁=', '▁fs', ';', 'this', '.', 'snapshot', '▁=', '▁File', 'Snapshot', '.', 'DIR', 'TY', ';', 'this', '.', 'hash', '▁=', '▁ObjectId', '.', 'zero', 'Id', '();', '}']
['▁public', '▁int', '▁following', '(', 'int', '▁pos', ')', '▁{', 'if', '▁(', 'pos', '▁<', '▁text', '.', 'get', 'Begin', 'Index', '()', '▁||', '▁pos', '▁>', '▁text', '.', 'get', 'End', 'Index', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'offset', '▁out', '▁of', '▁bounds', '");', '}', '▁else', '▁if', '▁(0', '▁==', '▁sentence', 'Start', 's', '.', 'length', ')', '▁{', 'text', '.', 'set', 'Index', '(', 'text', '.', 'get', 'Begin', 'Index', '());', 'return', '▁DONE', ';}', '▁else', '▁if', '▁(', 'pos', '▁>=', '▁sentence', 'Start', 's', '[', 'sentence', 'Start', 's', '.', 'length', '▁-', '▁1', '])', '▁{', 'text', '.', 'set', 'Index', '(', 'text', '.', 'get', 'End', 'Index', '());', 'current', 'Sentence', '▁=', '▁sentence', 'Start', 's', '.', 'length', '▁-', '▁1;', 'return', '▁DONE', ';}', '▁else', '▁{', '▁current', 'Sentence', '▁=', '▁(', 'sentence', 'Start', 's', '.', 'length', '▁-', '▁1)', '▁/', '▁2;', '▁moveTo', 'Sentence', 'At', '(', 'pos', ',', '▁0,', '▁sentence', 'Start', 's', '.', 'length', '▁-', '▁2);', 'text', '.', 'set', 'Index', '(', 'sentence', 'Start', 's', '[', '++', 'current', 'Sentence', ']);', 'return', '▁current', '();', '}}']
['▁public', '▁Update', 'Parameter', 'Group', 'Result', '▁update', 'Parameter', 'Group', '(', 'Update', 'Parameter', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Parameter', 'Group', '(', 'request', ');', '}']
['▁public', '▁Series', 'Chart', 'Group', 'Index', 'Record', '▁clone', '()', '▁{', 'return', '▁copy', '();', '}']
['▁public', '▁static', '▁double', '▁calc', 'Distance', 'From', 'Err', 'P', 'ct', '(', 'Shape', '▁shape', ',', '▁double', '▁dist', 'Err', 'P', 'ct', ',', '▁Spatial', 'Context', '▁ctx', ')', '▁{', 'if', '▁(', 'dist', 'Err', 'P', 'ct', '▁<', '▁0', '▁||', '▁dist', 'Err', 'P', 'ct', '▁>', '▁0.5', ')', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'dist', 'Err', 'P', 'ct', '▁"', '▁+', '▁dist', 'Err', 'P', 'ct', '▁+', '▁"', '▁must', '▁be', '▁between', '▁[0', '▁to', '▁0.5', ']', '");', '}', 'if', '▁(', 'dist', 'Err', 'P', 'ct', '▁==', '▁0', '▁||', '▁shape', '▁instanceof', '▁Point', ')', '▁{', 'return', '▁0;', '}', 'Rectangle', '▁bbox', '▁=', '▁shape', '.', 'get', 'BoundingBox', '();', 'Point', '▁ctr', '▁=', '▁bbox', '.', 'get', 'Center', '();', 'double', '▁y', '▁=', '▁(', 'ctr', '.', 'getY', '()', '▁>=', '▁0', '▁?', '▁bbox', '.', 'get', 'Max', 'Y', '()', '▁:', '▁bbox', '.', 'get', 'Min', 'Y', '());', 'double', '▁diagonal', 'Dist', '▁=', '▁ctx', '.', 'get', 'Dist', 'Calc', '().', 'distance', '(', 'ctr', ',', '▁bbox', '.', 'get', 'Max', 'X', '(),', '▁y', ');', 'return', '▁diagonal', 'Dist', '▁*', '▁dist', 'Err', 'P', 'ct', ';}']
['▁public', '▁int', '▁codePoint', 'At', '(', 'int', '▁index', ')', '▁{', 'if', '▁(', 'index', '▁<', '▁0', '▁||', '▁index', '▁>=', '▁count', ')', '▁{', 'throw', '▁index', 'And', 'Length', '(', 'index', ');', '}', 'return', '▁Character', '.', 'code', 'Point', 'At', '(', 'value', ',', '▁index', ',', '▁count', ');', '}']
['▁public', '▁void', '▁setPassword', 'Verifier', '(', 'int', '▁password', 'Verifier', ')', '▁{', 'this', '.', 'password', 'Verifier', '▁=', '▁password', 'Verifier', ';}']
['▁public', '▁List', 'Vault', 's', 'Request', '(', 'String', '▁accountId', ')', '▁{', 'set', 'Account', 'Id', '(', 'account', 'Id', ');', '}']
['▁public', '▁S', 'qu', 'ash', 'Message', 'Formatter', '()', '▁{', 'date', 'Formatter', '▁=', '▁new', '▁Git', 'Date', 'Formatter', '(', 'Format', '.', 'DEFAULT', ');', '}']
['▁public', '▁Get', 'Video', 'Cover', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Get', 'Video', 'Cover', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁int', '▁lastIndexOf', '(', 'Object', '▁object', ')', '▁{', 'int', '▁pos', '▁=', '▁size', ';', 'Link', '<', 'E', '>', '▁link', '▁=', '▁void', 'Link', '.', 'previous', ';', 'if', '▁(', 'object', '▁!=', '▁null', ')', '▁{', 'while', '▁(', 'link', '▁!=', '▁void', 'Link', ')', '▁{', 'pos', '--;', 'if', '▁(', 'object', '.', 'equals', '(', 'link', '.', 'data', '))', '▁{', 'return', '▁pos', ';}', 'link', '▁=', '▁link', '.', 'previous', ';', '}}', '▁else', '▁{', 'while', '▁(', 'link', '▁!=', '▁void', 'Link', ')', '▁{', 'pos', '--;', 'if', '▁(', 'link', '.', 'data', '▁==', '▁null', ')', '▁{', 'return', '▁pos', ';}', 'link', '▁=', '▁link', '.', 'previous', ';', '}}', 'return', '▁-1', ';}']
['▁public', '▁Describe', 'Spot', 'F', 'leet', 'Requests', 'Result', '▁describe', 'Spot', 'F', 'leet', 'Requests', '(', 'Des', 'cribe', 'Spot', 'F', 'leet', 'Requests', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Spot', 'F', 'leet', 'Requests', '(', 'request', ');', '}']
['▁public', '▁Index', 'Faces', 'Result', '▁index', 'Faces', '(', 'Index', 'Faces', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Index', 'Faces', '(', 'request', ');', '}']
['▁public', '▁Rule', 'Based', 'Break', 'Iterator', '▁getB', 'reak', 'Iterator', '(', 'int', '▁script', ')', '▁{', 'switch', '(', 'script', ')', '▁{', 'case', '▁U', 'Script', '.', 'J', 'AP', 'A', 'NE', 'SE', ':', '▁return', '▁(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'c', 'jk', 'Break', 'Iterator', '.', 'clone', '();', 'case', '▁U', 'Script', '.', 'MY', 'AN', 'MAR', ':', 'if', '▁(', 'my', 'an', 'mar', 'As', 'Words', ')', '▁{', 'return', '▁(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'default', 'Break', 'Iterator', '.', 'clone', '();', '}', '▁else', '▁{', 'return', '▁(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'my', 'an', 'mar', 'Sy', 'l', 'lable', 'Iterator', '.', 'clone', '();', '}', 'default', ':', '▁return', '▁(', 'Rule', 'Based', 'Break', 'Iterator', ')', 'default', 'Break', 'Iterator', '.', 'clone', '();', '}}']
['▁public', '▁String', '▁toString', '(){', 'StringBuilder', '▁b', '▁=', '▁new', '▁StringBuilder', '();', 'b', '.', 'append', '("[', 'D', 'CON', 'REF', ']\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'ref', '\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'first', 'row', '▁=', '▁"', ').', 'append', '(', 'first', 'Row', ').', 'append', '("\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'last', 'row', '▁=', '▁"', ').', 'append', '(', 'last', 'Row', ').', 'append', '("\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'first', 'col', '▁=', '▁"', ').', 'append', '(', 'first', 'Col', ').', 'append', '("\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'last', 'col', '▁=', '▁"', ').', 'append', '(', 'last', 'Col', ').', 'append', '("\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'c', 'ch', '▁=', '▁"', ').', 'append', '(', 'char', 'Count', ').', 'append', '("\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'st', 'File', '\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'h', '▁=', '▁"', ').', 'append', '(', 'char', 'Type', ').', 'append', '("\\', 'n', '");', 'b', '.', 'append', '("', '▁.', 'rgb', '▁=', '▁"', ').', 'append', '(', 'get', 'Readable', 'Path', '()).', 'append', '("\\', 'n', '");', 'b', '.', 'append', '("[', '/', 'D', 'CON', 'REF', ']\\', 'n', '");', 'return', '▁b', '.', 'toString', '();', '}']
['▁public', '▁int', '▁getPack', 'ed', 'Git', 'Open', 'Files', '()', '▁{', 'return', '▁packed', 'Git', 'Open', 'Files', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'FEATURE', '▁HEADER', ']\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'FEATURE', '▁HEADER', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁static', '▁byte', '[]', '▁getTo', 'Unicode', 'LE', '(', 'String', '▁string', ')', '▁{', 'return', '▁string', '.', 'getBytes', '(', 'UTF', '16', 'LE', ');', '}']
['▁public', '▁final', '▁List', '<', 'String', '>', '▁getF', 'ooter', 'Lines', '(', 'String', '▁keyName', ')', '▁{', 'return', '▁getF', 'ooter', 'Lines', '(', 'new', '▁F', 'ooter', 'Key', '(', 'key', 'Name', '));', '}']
['▁public', '▁void', '▁refresh', '()', '▁{', 'super', '.', 'refresh', '();', 'clear', 'References', '();', '}']
['▁public', '▁float', '▁get', '(', 'int', '▁index', ')', '▁{', 'check', 'Index', '(', 'index', ');', 'return', '▁byteBuffer', '.', 'get', 'Float', '(', 'index', '▁*', '▁Size', 'Of', '.', 'FLOAT', ');', '}']
['▁public', '▁Delete', 'Detector', 'Result', '▁delete', 'Detector', '(', 'Delete', 'Detector', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Detector', '(', 'request', ');', '}']
['▁public', '▁int', '[]', '▁grow', '()', '▁{', 'assert', '▁bytes', 'Start', '▁!=', '▁null', ';', 'return', '▁bytes', 'Start', '▁=', '▁ArrayUtil', '.', 'grow', '(', 'bytes', 'Start', ',', '▁bytes', 'Start', '.', 'length', '▁+', '▁1);', '}']
['▁public', '▁List', 'Ex', 'clusions', 'Result', '▁list', 'Ex', 'clusions', '(', 'List', 'Ex', 'clusions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Ex', 'clusions', '(', 'request', ');', '}']
['▁public', '▁static', '▁Spatial', 'Strategy', '▁getSp', 'atial', 'Strategy', '(', 'int', '▁round', 'Number', ')', '▁{', 'Spatial', 'Strategy', '▁result', '▁=', '▁spatial', 'Strategy', 'Cache', '.', 'get', '(', 'round', 'Number', ');', 'if', '▁(', 'result', '▁==', '▁null', ')', '▁{', 'throw', '▁new', '▁Illegal', 'StateException', '("', 'Strategy', '▁should', '▁have', '▁been', '▁init', "'", 'ed', '▁by', '▁Spatial', 'Doc', 'Maker', '▁by', '▁now', '");', '}', 'return', '▁result', ';}']
['▁public', '▁DB', 'Cluster', '▁restore', 'DB', 'Cluster', 'To', 'Point', 'In', 'Time', '(', 'Restore', 'DB', 'Cluster', 'To', 'Point', 'In', 'Time', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Restore', 'DB', 'Cluster', 'To', 'Point', 'In', 'Time', '(', 'request', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'category', 'DataType', ');', 'out', '.', 'write', 'Short', '(', 'field', '_2_', 'values', 'DataType', ');', 'out', '.', 'write', 'Short', '(', 'field', '_3_', 'num', 'Categories', ');', 'out', '.', 'write', 'Short', '(', 'field', '_4_', 'num', 'Values', ');', 'out', '.', 'write', 'Short', '(', 'field', '_', '5_', 'b', 'ubble', 'Series', 'Type', ');', 'out', '.', 'write', 'Short', '(', 'field', '_', '6_', 'num', 'B', 'ubble', 'Values', ');', '}']
['▁public', '▁Post', 'Agent', 'Profile', 'Result', '▁post', 'Agent', 'Profile', '(', 'Post', 'Agent', 'Profile', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Post', 'Agent', 'Profile', '(', 'request', ');', '}']
['▁public', '▁ParseTree', 'Pattern', '▁compile', 'Parse', 'Tree', 'Pattern', '(', 'String', '▁pattern', ',', '▁int', '▁pattern', 'Rule', 'Index', ')', '▁{', 'if', '▁(', '▁getToken', 'Stream', '()', '!=', 'null', '▁)', '▁{', 'Token', 'Source', '▁token', 'Source', '▁=', '▁getToken', 'Stream', '().', 'get', 'Token', 'Source', '();', 'if', '▁(', '▁token', 'Source', '▁instanceof', '▁Lex', 'er', '▁)', '▁{', 'Lexer', '▁lexer', '▁=', '▁(', 'Lexer', ')', 'token', 'Source', ';', 'return', '▁compile', 'Parse', 'Tree', 'Pattern', '(', 'pattern', ',', '▁pattern', 'Rule', 'Index', ',', '▁lexer', ');', '}}', 'throw', '▁new', '▁Unsupported', 'Operation', 'Exception', '("', 'Parser', '▁can', "'", 't', '▁discover', '▁a', '▁lexer', '▁to', '▁use', '");', '}']
['▁public', '▁Back', 'track', 'DB', 'Cluster', 'Result', '▁back', 'track', 'DB', 'Cluster', '(', 'Back', 'track', 'DB', 'Cluster', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Back', 'track', 'DB', 'Cluster', '(', 'request', ');', '}']
['▁public', '▁String', '▁getName', '()', '▁{', 'return', '▁strategy', 'Name', ';}']
['▁public', '▁void', '▁copyTo', '(', 'byte', '[]', '▁b', ',', '▁int', '▁o', ')', '▁{', 'format', 'Hex', 'Byte', '(', 'b', ',', '▁o', '▁+', '▁0,', '▁w', '1);', 'format', 'Hex', 'Byte', '(', 'b', ',', '▁o', '▁+', '▁8,', '▁w', '2);', 'format', 'Hex', 'Byte', '(', 'b', ',', '▁o', '▁+', '▁16,', '▁w', '3);', 'format', 'Hex', 'Byte', '(', 'b', ',', '▁o', '▁+', '▁24,', '▁w', '4', ');', 'format', 'Hex', 'Byte', '(', 'b', ',', '▁o', '▁+', '▁32,', '▁w', '5', ');', '}']
['▁public', '▁static', '▁final', '▁Int', 'List', '▁line', 'Map', '(', 'byte', '[]', '▁buf', ',', '▁int', '▁ptr', ',', '▁int', '▁end', ')', '▁{', 'Int', 'List', '▁map', '▁=', '▁new', '▁Int', 'List', '((', 'end', '▁-', '▁ptr', ')', '▁/', '▁36', ');', 'map', '.', 'fill', 'To', '(1,', '▁Integer', '.', 'MIN', '_', 'VALUE', ');', 'for', '▁(', ';', '▁ptr', '▁<', '▁end', ';', '▁ptr', '▁=', '▁next', 'LF', '(', 'buf', ',', '▁ptr', '))', '▁{', 'map', '.', 'add', '(', 'ptr', ');', '}', 'map', '.', 'add', '(', 'end', ');', 'return', '▁map', ';}']
['▁public', '▁Set', '<', 'ObjectId', '>', '▁get', 'Additional', 'H', 'aves', '()', '▁{', 'return', '▁Collections', '.', 'empty', 'Set', '();', '}']
['▁public', '▁synchronized', '▁long', '▁ram', 'Bytes', 'Used', '()', '▁{', 'long', '▁size', 'InBytes', '▁=', '▁BASE', '_', 'RAM', '_', 'BYTES', '_', 'USED', '▁+', '▁fields', '.', 'size', '()', '▁*', '▁2', '▁*', '▁Ram', 'Usage', 'Estimator', '.', 'NUM', '_', 'BYTES', '_', 'OBJECT', '_', 'REF', ';', 'for', '(', 'Simple', 'Text', 'Terms', '▁simple', 'Text', 'Terms', '▁:', '▁terms', 'Cache', '.', 'values', '())', '▁{', 'size', 'InBytes', '▁+=', '▁(', 'simple', 'Text', 'Terms', '!=', 'null', ')', '▁?', '▁simple', 'Text', 'Terms', '.', 'ram', 'Bytes', 'Used', '()', '▁:', '▁0;', '}', 'return', '▁size', 'InBytes', ';}']
['▁public', '▁String', '▁to', 'Xml', '(', 'String', '▁tab', ')', '▁{', 'StringBuilder', '▁builder', '▁=', '▁new', '▁StringBuilder', '();', 'builder', '.', 'append', '(', 'tab', ').', 'append', '("<', '").', 'append', '(', 'get', 'Record', 'Name', '()).', 'append', '("', '>\\', 'n', '");', 'for', '▁(', 'E', 'sch', 'er', 'Record', '▁es', 'ch', 'er', 'Record', '▁:', '▁getE', 'sch', 'er', 'Records', '())', '▁{', 'builder', '.', 'append', '(', 'es', 'ch', 'er', 'Record', '.', 'to', 'Xml', '(', 'tab', '▁+', '▁"\\', 't', '"));', '}', 'builder', '.', 'append', '(', 'tab', ').', 'append', '("', '</', '").', 'append', '(', 'get', 'Record', 'Name', '()).', 'append', '("', '>\\', 'n', '");', 'return', '▁builder', '.', 'toString', '();', '}']
['▁public', '▁TokenStream', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁G', 'alic', 'ian', 'Min', 'imal', 'St', 'em', 'Filter', '(', 'input', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁r', '▁=', '▁new', '▁StringBuilder', '();', 'r', '.', 'append', '("', 'Commit', '");', 'r', '.', 'append', '("', '={', '\\', 'n', '");', 'r', '.', 'append', '("', 'tree', '▁");', 'r', '.', 'append', '(', 'tree', 'Id', '▁!=', '▁null', '▁?', '▁tree', 'Id', '.', 'name', '()', '▁:', '▁"', 'NOT', '_', 'SET', '");', 'r', '.', 'append', '("\\', 'n', '");', 'for', '▁(', 'ObjectId', '▁p', '▁:', '▁parent', 'Ids', ')', '▁{', 'r', '.', 'append', '("', 'parent', '▁");', 'r', '.', 'append', '(', 'p', '.', 'name', '());', 'r', '.', 'append', '("\\', 'n', '");', '}', 'r', '.', 'append', '("', 'author', '▁");', 'r', '.', 'append', '(', 'author', '▁!=', '▁null', '▁?', '▁author', '.', 'toString', '()', '▁:', '▁"', 'NOT', '_', 'SET', '");', 'r', '.', 'append', '("\\', 'n', '");', 'r', '.', 'append', '("', 'commit', 'ter', '▁");', 'r', '.', 'append', '(', 'commit', 'ter', '▁!=', '▁null', '▁?', '▁committer', '.', 'toString', '()', '▁:', '▁"', 'NOT', '_', 'SET', '");', 'r', '.', 'append', '("\\', 'n', '");', 'r', '.', 'append', '("', 'g', 'pg', 'Signature', '▁");', 'r', '.', 'append', '(', 'g', 'pg', 'Signature', '▁!=', '▁null', '▁?', '▁gpg', 'Signature', '.', 'toString', '()', '▁:', '▁"', 'NOT', '_', 'SET', '");', 'r', '.', 'append', '("\\', 'n', '");', 'if', '▁(', 'encoding', '▁!=', '▁null', '▁&&', '▁!', 'References', '.', 'is', 'Same', 'Object', '(', 'encoding', ',', '▁UTF', '_8', '))', '▁{', 'r', '.', 'append', '("', 'encoding', '▁");', 'r', '.', 'append', '(', 'encoding', '.', 'name', '());', 'r', '.', 'append', '("\\', 'n', '");', '}', 'r', '.', 'append', '("\\', 'n', '");', 'r', '.', 'append', '(', 'message', '▁!=', '▁null', '▁?', '▁message', '▁:', '▁"");', 'r', '.', 'append', '("', '}', '");', 'return', '▁r', '.', 'toString', '();', '}']
['▁public', '▁Ind', 'ic', 'Normal', 'ization', 'FilterFactory', '(', 'Map', '<', 'String', ',', 'String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'if', '▁(!', 'args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁Option', 'Group', '▁create', 'Option', 'Group', '(', 'Create', 'Option', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Option', 'Group', '(', 'request', ');', '}']
['▁public', '▁Assoc', 'iate', 'Member', 'Account', 'Result', '▁associate', 'Member', 'Account', '(', 'Assoc', 'iate', 'Member', 'Account', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Assoc', 'iate', 'Member', 'Account', '(', 'request', ');', '}']
['▁public', '▁void', '▁run', '()', '▁{', 'do', 'Refresh', 'Progress', '(', 'm', 'Id', ',', '▁mProgress', ',', '▁m', 'From', 'User', ',', '▁true', ');', 'm', 'Refresh', 'Progress', 'Runnable', '▁=', '▁this', ';}']
['▁public', '▁Set', 'Termination', 'Protection', 'Result', '▁set', 'Termination', 'Protection', '(', 'Set', 'Termination', 'Protection', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Set', 'Termination', 'Protection', '(', 'request', ');', '}']
['▁public', '▁String', '▁getError', 'Header', '(', 'Rec', 'ognition', 'Exception', '▁e', ')', '▁{', 'int', '▁line', '▁=', '▁e', '.', 'get', 'Off', 'ending', 'Token', '().', 'get', 'Line', '();', 'int', '▁char', 'Position', 'In', 'Line', '▁=', '▁e', '.', 'get', 'Off', 'ending', 'Token', '().', 'get', 'Char', 'Position', 'In', 'Line', '();', 'return', '▁"', 'line', '▁"+', 'line', '+', '":"', '+', 'char', 'Position', 'In', 'Line', ';}']
['▁public', '▁CharBuffer', '▁as', 'ReadOnly', 'Buffer', '()', '▁{', 'Char', 'To', 'ByteBuffer', 'Adapter', '▁buf', '▁=', '▁new', '▁Char', 'To', 'ByteBuffer', 'Adapter', '(', 'byte', 'Buffer', '.', 'as', 'ReadOnly', 'Buffer', '());', 'buf', '.', 'limit', '▁=', '▁limit', ';', 'buf', '.', 'position', '▁=', '▁position', ';', 'buf', '.', 'mark', '▁=', '▁mark', ';', 'buf', '.', 'byte', 'Buffer', '.', 'order', '▁=', '▁byteBuffer', '.', 'order', ';', 'return', '▁buf', ';}']
['▁public', '▁Stop', 'Sent', 'iment', 'Detection', 'Job', 'Result', '▁stop', 'Sent', 'iment', 'Detection', 'Job', '(', 'Stop', 'Sent', 'iment', 'Detection', 'Job', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Stop', 'Sent', 'iment', 'Detection', 'Job', '(', 'request', ');', '}']
['▁public', '▁ObjectId', 'Subclass', 'Map', '<', 'ObjectId', '>', '▁getNew', 'Object', 'Ids', '()', '▁{', 'if', '▁(', 'new', 'Object', 'Ids', '▁!=', '▁null', ')', 'return', '▁new', 'Object', 'Ids', ';', 'return', '▁new', '▁ObjectId', 'Subclass', 'Map', '<>();', '}']
['▁public', '▁void', '▁clear', '()', '▁{', 'hash', '▁=', '▁hash', '(', 'new', '▁byte', '[0]);', 'super', '.', 'clear', '();', '}']
['▁public', '▁void', '▁reset', '()', '▁throws', '▁IOException', '▁{', 'synchron', 'ized', '▁(', 'lock', ')', '▁{', 'check', 'Not', 'Closed', '();', 'if', '▁(', 'mark', '▁==', '▁-1)', '▁{', 'throw', '▁new', '▁IOException', '("', 'Invalid', '▁mark', '");', '}', 'pos', '▁=', '▁mark', ';', '}}']
['▁public', '▁Ref', 'Error', 'Pt', 'g', '(', 'L', 'ittle', 'Endian', 'Input', '▁in', ')', '▁{', 'field', '_1_', 'reserved', '▁=', '▁in', '.', 'read', 'Int', '();', '}']
['▁public', '▁S', 'uspend', 'Game', 'Server', 'Group', 'Result', '▁suspend', 'Game', 'Server', 'Group', '(', 'Suspend', 'Game', 'Server', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Suspend', 'Game', 'Server', 'Group', '(', 'request', ');', '}']
['▁public', '▁final', '▁Value', 'Eval', '▁evaluate', '(', 'Value', 'Eval', '[]', '▁args', ',', '▁int', '▁src', 'Row', 'Index', ',', '▁int', '▁src', 'ColumnIndex', ')', '▁{', 'if', '▁(', 'args', '.', 'length', '▁!=', '▁3)', '▁{', 'return', '▁Error', 'Eval', '.', 'VALUE', '_', 'INVALID', ';}', 'return', '▁evaluate', '(', 'src', 'Row', 'Index', ',', '▁src', 'ColumnIndex', ',', '▁args', '[0],', '▁args', '[1],', '▁args', '[2]', ');', '}']
['▁public', '▁Get', 'Repo', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Get', 'Repo', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'repos', '/', '[', 'Repo', 'Namespace', ']/', '[', 'Repo', 'Name', ']', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'GET', ');', '}']
['▁public', '▁void', '▁setDate', '(', 'Date', '▁date', ')', '▁{', 'if', '▁(', 'date', '▁!=', '▁null', ')', '▁{', 'set', 'Date', '(', 'Date', 'Tools', '.', 'date', 'ToString', '(', 'date', ',', '▁Date', 'Tools', '.', 'Resolution', '.', 'SECOND', '));', '}', '▁else', '▁{', 'this', '.', 'date', '▁=', '▁null', ';', '}}']
['▁public', '▁TokenStream', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁G', 'erman', 'Min', 'imal', 'St', 'em', 'Filter', '(', 'input', ');', '}']
['▁public', '▁Object', '[]', '▁toArray', '()', '▁{', 'return', '▁a', '.', 'clone', '();', '}']
['▁public', '▁void', '▁write', '(', 'char', '[]', '▁buffer', ',', '▁int', '▁offset', ',', '▁int', '▁len', ')', '▁{', 'Arrays', '.', 'check', 'Offset', 'And', 'Count', '(', 'buffer', '.', 'length', ',', '▁offset', ',', '▁len', ');', 'synchron', 'ized', '▁(', 'lock', ')', '▁{', 'expand', '(', 'len', ');', 'System', '.', 'array', 'copy', '(', 'buffer', ',', '▁offset', ',', '▁this', '.', 'buf', ',', '▁this', '.', 'count', ',', '▁len', ');', 'this', '.', 'count', '▁+=', '▁len', ';', '}}']
['▁public', '▁static', '▁final', '▁Rev', 'Filter', '▁after', '(', 'Date', '▁ts', ')', '▁{', 'return', '▁after', '(', 'ts', '.', 'getTime', '());', '}']
['▁public', '▁Delete', 'Group', 'Policy', 'Request', '(', 'String', '▁groupName', ',', '▁String', '▁policy', 'Name', ')', '▁{', 'set', 'GroupName', '(', 'group', 'Name', ');', 'set', 'Policy', 'Name', '(', 'policy', 'Name', ');', '}']
['▁public', '▁D', 'eregister', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', 'Result', '▁d', 'eregister', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', '(', 'D', 'eregister', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'D', 'eregister', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', '(', 'request', ');', '}']
['▁public', '▁Batch', 'Delete', 'Scheduled', 'Action', 'Result', '▁batch', 'Delete', 'Scheduled', 'Action', '(', 'Batch', 'Delete', 'Scheduled', 'Action', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Batch', 'Delete', 'Scheduled', 'Action', '(', 'request', ');', '}']
['▁public', '▁Create', 'Algorithm', 'Result', '▁create', 'Algorithm', '(', 'Create', 'Algorithm', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Algorithm', '(', 'request', ');', '}']
['▁public', '▁int', '▁read', 'U', 'Byte', '()', '▁{', 'return', '▁readByte', '()', '▁&', '▁0', 'x', '00', 'FF', ';}']
['▁public', '▁void', '▁setLength', '(', 'int', '▁sz', ')', '▁{', 'NB', '.', 'encode', 'Int', '32', '(', 'info', ',', '▁info', 'Offset', '▁+', '▁P', '_', 'SIZE', ',', '▁sz', ');', '}']
['▁public', '▁Describe', 'Scaling', 'Process', 'Types', 'Result', '▁describe', 'Scaling', 'Process', 'Types', '()', '▁{', 'return', '▁describe', 'Scaling', 'Process', 'Types', '(', 'new', '▁Describe', 'Scaling', 'Process', 'Types', 'Request', '());', '}']
['▁public', '▁List', 'Resource', 'Record', 'Sets', 'Result', '▁list', 'Resource', 'Record', 'Sets', '(', 'List', 'Resource', 'Record', 'Sets', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Resource', 'Record', 'Sets', '(', 'request', ');', '}']
['▁public', '▁Token', '▁recover', 'Inline', '(', 'Parser', '▁recogn', 'izer', ')', 'throws', '▁Recognition', 'Exception', '{', 'Input', 'Mismatch', 'Exception', '▁e', '▁=', '▁new', '▁Input', 'Mismatch', 'Exception', '(', 'recogn', 'izer', ');', 'for', '▁(', 'Parser', 'Rule', 'Context', '▁context', '▁=', '▁recogn', 'izer', '.', 'getContext', '();', '▁context', '▁!=', '▁null', ';', '▁context', '▁=', '▁context', '.', 'get', 'Parent', '())', '▁{', 'context', '.', 'exception', '▁=', '▁e', ';}', 'throw', '▁new', '▁Parse', 'Can', 'cellation', 'Exception', '(', 'e', ');', '}']
['▁public', '▁Set', 'Tags', 'For', 'Resource', 'Result', '▁set', 'Tags', 'For', 'Resource', '(', 'Set', 'Tags', 'For', 'Resource', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Set', 'Tags', 'For', 'Resource', '(', 'request', ');', '}']
['▁public', '▁Modify', 'Strategy', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Call', 'Center', '",', '▁"2017', '-07', '-05', '",', '▁"', 'Modify', 'Strategy', '",', '▁"', 'Cloud', 'Call', 'Center', '",', '▁"', 'inner', 'API', '");', '}']
['▁public', '▁Describe', 'V', 'pc', 'Endpoint', 'Services', 'Result', '▁describe', 'V', 'pc', 'Endpoint', 'Services', '(', 'Des', 'cribe', 'V', 'pc', 'Endpoint', 'Services', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'V', 'pc', 'Endpoint', 'Services', '(', 'request', ');', '}']
['▁public', '▁Enable', 'Logging', 'Result', '▁enable', 'Logging', '(', 'Enable', 'Logging', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Enable', 'Logging', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁contains', '(', 'Object', '▁o', ')', '▁{', 'return', '▁Concurrent', 'HashMap', '.', 'this', '.', 'contains', 'Value', '(', 'o', ');', '}']
['▁public', '▁Sheet', 'Range', 'Identifier', '(', 'String', '▁book', 'Name', ',', '▁Name', 'Identifier', '▁first', 'Sheet', 'Identifier', ',', '▁Name', 'Identifier', '▁last', 'Sheet', 'Identifier', ')', '▁{', 'super', '(', 'book', 'Name', ',', '▁first', 'Sheet', 'Identifier', ');', '_', 'last', 'Sheet', 'Identifier', '▁=', '▁last', 'Sheet', 'Identifier', ';}']
['▁public', '▁Domain', 'Metadata', 'Request', '(', 'String', '▁domain', 'Name', ')', '▁{', 'set', 'Domain', 'Name', '(', 'domain', 'Name', ');', '}']
['▁public', '▁ParseException', '(', 'Token', '▁currentToken', 'Val', ',', 'int', '[][]', '▁expected', 'Token', 'Sequ', 'ences', 'Val', ',', '▁String', '[]', '▁token', 'Image', 'Val', ')', '▁{', 'super', '(', 'new', '▁Message', 'Impl', '(', 'Query', 'Parser', 'Messages', '.', 'INVALID', '_', 'SY', 'NT', 'AX', ',', '▁initialise', '(', 'current', 'Token', 'Val', ',', '▁expected', 'Token', 'Sequ', 'ences', 'Val', ',', '▁token', 'Image', 'Val', ')));', 'this', '.', 'current', 'Token', '▁=', '▁currentToken', 'Val', ';', 'this', '.', 'expected', 'Token', 'Sequ', 'ences', '▁=', '▁expected', 'Token', 'Sequ', 'ences', 'Val', ';', 'this', '.', 'token', 'Image', '▁=', '▁token', 'Image', 'Val', ';}']
['▁public', '▁Fetch', 'Photos', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Fetch', 'Photos', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁PrintWriter', '▁writer', '()', '▁{', 'return', '▁writer', ';}']
['▁public', '▁N', 'G', 'ram', 'Tokenizer', 'Factory', '(', 'Map', '<', 'String', ',', '▁String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'min', 'G', 'ram', 'Size', '▁=', '▁getInt', '(', 'args', ',', '▁"', 'min', 'G', 'ram', 'Size', '",', '▁N', 'G', 'ram', 'Tokenizer', '.', 'DEFAULT', '_', 'MIN', '_', 'NG', 'RAM', '_', 'SIZE', ');', 'max', 'G', 'ram', 'Size', '▁=', '▁getInt', '(', 'args', ',', '▁"', 'max', 'G', 'ram', 'Size', '",', '▁N', 'G', 'ram', 'Tokenizer', '.', 'DEFAULT', '_', 'MAX', '_', 'NG', 'RAM', '_', 'SIZE', ');', 'if', '▁(!', 'args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁boolean', '▁isDirectory', 'File', 'Conflict', '()', '▁{', 'return', '▁df', 'Conflict', '▁!=', '▁null', ';}']
['▁public', '▁Ind', 'ones', 'ian', 'St', 'em', 'Filter', '(', 'Token', 'Stream', '▁input', ',', '▁boolean', '▁stem', 'Der', 'iv', 'ational', ')', '▁{', 'super', '(', 'input', ');', 'this', '.', 'st', 'em', 'Der', 'iv', 'ational', '▁=', '▁stem', 'Der', 'iv', 'ational', ';}']
['▁public', '▁Create', 'Traffic', 'Policy', 'Result', '▁create', 'Traffic', 'Policy', '(', 'Create', 'Traffic', 'Policy', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Traffic', 'Policy', '(', 'request', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Int', '(', 'f', 'SD', ');', 'out', '.', 'write', 'Int', '(', 'password', 'Verifier', ');', 'String', 'Util', '.', 'write', 'Unicode', 'String', '(', 'out', ',', '▁title', ');', 'out', '.', 'write', '(', 'security', 'Descriptor', ');', '}']
['▁public', '▁static', '▁double', '▁floor', '(', 'double', '▁n', ',', '▁double', '▁s', ')', '▁{', 'if', '▁(', 's', '==0', '▁&&', '▁n', '!', '=0)', '▁{', 'return', '▁Double', '.', 'NaN', ';}', '▁else', '▁{', 'return', '▁(', 'n', '==0', '▁||', '▁s', '==', '0)', '▁?', '▁0', '▁:', '▁Math', '.', 'floor', '(', 'n', '/', 's', ')', '▁*', '▁s', ';', '}}']
['▁public', '▁ByteArray', 'Data', 'Output', '(', 'byte', '[]', '▁bytes', ',', '▁int', '▁offset', ',', '▁int', '▁len', ')', '▁{', 'reset', '(', 'bytes', ',', '▁offset', ',', '▁len', ');', '}']
['▁public', '▁static', '▁List', '<', 'Tree', '>', '▁getChildren', '(', 'Tree', '▁t', ')', '▁{', 'List', '<', 'Tree', '>', '▁kids', '▁=', '▁new', '▁ArrayList', '<', 'Tree', '>();', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 't', '.', 'get', 'Child', 'Count', '();', '▁i', '++)', '▁{', 'k', 'ids', '.', 'add', '(', 't', '.', 'get', 'Child', '(', 'i', '));', '}', 'return', '▁kids', ';}']
['▁public', '▁void', '▁clear', '()', '▁{', 'Has', 'htable', '.', 'this', '.', 'clear', '();', '}']
['▁public', '▁Refresh', 'All', 'Record', '(', 'boolean', '▁refresh', 'All', ')', '▁{', 'this', '(0);', 'set', 'Refresh', 'All', '(', 'refresh', 'All', ');', '}']
['▁public', '▁Delete', 'Named', 'Query', 'Result', '▁delete', 'Named', 'Query', '(', 'Delete', 'Named', 'Query', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Named', 'Query', '(', 'request', ');', '}']
['▁public', '▁Graph', 'viz', 'Formatter', '(', 'Connection', 'Cost', 's', '▁costs', ')', '▁{', 'this', '.', 'cost', 's', '▁=', '▁costs', ';', 'this', '.', 'best', 'Path', 'Map', '▁=', '▁new', '▁HashMap', '<>();', 'sb', '.', 'append', '(', 'format', 'Header', '());', 'sb', '.', 'append', '("', '▁init', '▁[', 'style', '=', 'in', 'vis', ']\\', 'n', '");', 'sb', '.', 'append', '("', '▁init', '▁->', '▁0.0', '▁[', 'label', '=\\"', '"', '▁+', '▁B', 'OS', '_', 'LABEL', '▁+', '▁"\\', '"]', '\\', 'n', '");', '}']
['▁public', '▁Check', 'Multi', 'agent', 'Request', '()', '▁{', 'super', '("', 'vision', 'ai', '-', 'p', 'oc', '",', '▁"', '2020', '-04', '-08', '",', '▁"', 'Check', 'Multi', 'agent', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁List', 'User', 'Profiles', 'Result', '▁list', 'User', 'Profiles', '(', 'List', 'User', 'Profiles', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'User', 'Profiles', '(', 'request', ');', '}']
['▁public', '▁Create', 'Rel', 'ational', 'Database', 'From', 'Snapshot', 'Result', '▁create', 'Rel', 'ational', 'Database', 'From', 'Snapshot', '(', 'Create', 'Rel', 'ational', 'Database', 'From', 'Snapshot', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Rel', 'ational', 'Database', 'From', 'Snapshot', '(', 'request', ');', '}']
['▁public', '▁Start', 'Task', 'Result', '▁start', 'Task', '(', 'Start', 'Task', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Start', 'Task', '(', 'request', ');', '}']
['▁public', '▁Set', '<', 'String', '>', '▁get', 'Ignored', 'Paths', '()', '▁{', 'return', '▁ignored', 'Paths', ';}']
['▁public', '▁F', 'eat', 'Smart', 'Tag', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'data', '▁=', '▁in', '.', 'read', 'Rem', 'ainder', '();', '}']
['▁public', '▁Change', '(', 'Change', 'Action', '▁action', ',', '▁Resource', 'Record', 'Set', '▁resource', 'Record', 'Set', ')', '▁{', 'set', 'Action', '(', 'action', '.', 'toString', '());', 'set', 'Resource', 'Record', 'Set', '(', 'resource', 'Record', 'Set', ');', '}']
['▁public', '▁Delete', 'Image', 'Result', '▁delete', 'Image', '(', 'Delete', 'Image', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Image', '(', 'request', ');', '}']
['▁public', '▁Create', 'Configuration', 'Set', 'Result', '▁create', 'Configuration', 'Set', '(', 'Create', 'Configuration', 'Set', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Configuration', 'Set', '(', 'request', ');', '}']
['▁public', '▁Iterator', '<', 'E', '>', '▁iterator', '()', '▁{', 'Object', '[]', '▁snapshot', '▁=', '▁elements', ';', 'return', '▁new', '▁C', 'ow', 'Iterator', '<', 'E', '>(', 'snapshot', ',', '▁0,', '▁snapshot', '.', 'length', ');', '}']
['▁public', '▁void', '▁visit', 'Contain', 'ed', 'Records', '(', 'Record', 'Visitor', '▁rv', ')', '▁{', 'if', '▁(_', 'rec', 's', '.', 'isEmpty', '())', '▁{', 'return', ';}', 'rv', '.', 'visit', 'Record', '(_', 'bo', 'f', 'Rec', ');', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁_', 'rec', 's', '.', 'size', '();', '▁i', '++)', '▁{', 'Record', 'Base', '▁rb', '▁=', '▁_', 'rec', 's', '.', 'get', '(', 'i', ');', 'if', '▁(', 'rb', '▁instanceof', '▁Record', 'Aggregate', ')', '▁{', '((', 'Record', 'Aggregate', ')', '▁rb', ').', 'visit', 'Contain', 'ed', 'Records', '(', 'rv', ');', '}', '▁else', '▁{', 'rv', '.', 'visit', 'Record', '((', 'org', '.', 'apache', '.', 'poi', '.', 'h', 'ss', 'f', '.', 'record', '.', 'Record', ')', '▁rb', ');', '}}', 'rv', '.', 'visit', 'Record', '(', 'EOF', 'Record', '.', 'instance', ');', '}']
['▁public', '▁String', '▁toString', '(){', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'F', 't', 'C', 'bl', 's', '▁]', '").', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁size', '▁=', '▁"', ').', 'append', '(', 'getData', 'Size', '()).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁reserved', '▁=', '▁"', ').', 'append', '(', 'Hex', 'Dump', '.', 'to', 'Hex', '(', 'reserved', ')).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'F', 't', 'C', 'bl', 's', '▁]', '").', 'append', '("\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁static', '▁B', 'AT', 'Block', '▁createEmpty', 'B', 'AT', 'Block', '(', 'final', '▁POI', 'FS', 'Big', 'BlockSize', '▁big', 'BlockSize', ',', '▁boolean', '▁is', 'X', 'B', 'AT', ')', '▁{', 'B', 'AT', 'Block', '▁block', '▁=', '▁new', '▁B', 'AT', 'Block', '(', 'big', 'BlockSize', ');', 'if', '(', 'is', 'X', 'B', 'AT', ')', '▁{', 'final', '▁int', '▁_', 'entries', '_', 'per', '_', 'x', 'bat', '_', 'block', '▁=', '▁big', 'BlockSize', '.', 'getX', 'B', 'AT', 'Entries', 'Per', 'Block', '();', 'block', '._', 'values', '[', '▁_', 'entries', '_', 'per', '_', 'x', 'bat', '_', 'block', '▁]', '▁=', '▁POI', 'FS', 'Constants', '.', 'END', '_', 'OF', '_', 'CH', 'AIN', ';}', 'return', '▁block', ';}']
['▁public', '▁Tag', 'Resource', 'Result', '▁tag', 'Resource', '(', 'Tag', 'Resource', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Tag', 'Resource', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Mail', 'box', 'Permissions', 'Result', '▁delete', 'Mail', 'box', 'Permissions', '(', 'Delete', 'Mail', 'box', 'Permissions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Mail', 'box', 'Permissions', '(', 'request', ');', '}']
['▁public', '▁List', 'Dataset', 'Groups', 'Result', '▁list', 'Dataset', 'Groups', '(', 'List', 'Dataset', 'Groups', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Dataset', 'Groups', '(', 'request', ');', '}']
['▁public', '▁Res', 'ume', 'Processes', 'Result', '▁resume', 'Processes', '(', 'Resume', 'Processes', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Resume', 'Processes', '(', 'request', ');', '}']
['▁public', '▁Get', 'Person', 'Tracking', 'Result', '▁getPerson', 'Tracking', '(', 'Get', 'Person', 'Tracking', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Person', 'Tracking', '(', 'request', ');', '}']
['▁public', '▁String', '▁to', 'Formula', 'String', '(', 'String', '[]', '▁operands', ')', '▁{', 'if', '(', 'space', '.', 'is', 'Set', '(_', 'options', '))', '▁{', 'return', '▁operands', '[', '▁0', '▁]', ';}', '▁else', '▁if', '▁(', 'opt', 'i', 'If', '.', 'is', 'Set', '(_', 'options', '))', '▁{', 'return', '▁to', 'Formula', 'String', '()', '▁+', '▁"', '("', '▁+', '▁operands', '[0]', '▁+', '▁")', '";', '}', '▁else', '▁if', '▁(', 'opt', 'i', 'Skip', '.', 'is', 'Set', '(_', 'options', '))', '▁{', 'return', '▁to', 'Formula', 'String', '()', '▁+', '▁operands', '[0];', '▁}', '▁else', '▁{', 'return', '▁to', 'Formula', 'String', '()', '▁+', '▁"', '("', '▁+', '▁operands', '[0]', '▁+', '▁")', '";', '}}']
['▁public', '▁T', '▁merge', '(', 'T', '▁first', ',', '▁T', '▁second', ')', '▁{', 'throw', '▁new', '▁Unsupported', 'Operation', 'Exception', '();', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁this', '.', 'message', '.', 'getKey', '()', '▁+', '▁":', '▁"', '▁+', '▁getLocalized', 'Message', '();', '}']
['▁public', '▁XPath', '(', 'Parser', '▁parser', ',', '▁String', '▁path', ')', '▁{', 'this', '.', 'parser', '▁=', '▁parser', ';', 'this', '.', 'path', '▁=', '▁path', ';', 'elements', '▁=', '▁split', '(', 'path', ');', '}']
['▁public', '▁Create', 'Account', 'Alias', 'Request', '(', 'String', '▁account', 'Alias', ')', '▁{', 'set', 'Account', 'Alias', '(', 'account', 'Alias', ');', '}']
['▁public', '▁void', '▁decode', '(', 'byte', '[]', '▁blocks', ',', '▁int', '▁blocks', 'Offset', ',', '▁long', '[]', '▁values', ',', '▁int', '▁values', 'Offset', ',', '▁int', '▁iterations', ')', '▁{', 'for', '▁(', 'int', '▁j', '▁=', '▁0;', '▁j', '▁<', '▁iterations', ';', '▁++', 'j', ')', '▁{', 'final', '▁byte', '▁block', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', '];', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁7)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁6)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁5)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁4)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁3)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁2)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁1)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁block', '▁&', '▁1;', '}}']
['▁public', '▁Push', 'Connection', '▁open', 'Push', '()', '▁throws', '▁Transport', 'Exception', '▁{', 'return', '▁new', '▁Tcp', 'Push', 'Connection', '();', '}']
['▁public', '▁static', '▁void', '▁str', 'c', 'py', '(', 'char', '[]', '▁dst', ',', '▁int', '▁di', ',', '▁char', '[]', '▁src', ',', '▁int', '▁si', ')', '▁{', 'while', '▁(', 'src', '[', 'si', ']', '▁!=', '▁0)', '▁{', 'dst', '[', 'di', '++', ']', '▁=', '▁src', '[', 'si', '++', '];', '}', 'dst', '[', 'di', ']', '▁=', '▁0;', '}']
['▁@', 'Override', '▁public', '▁K', '▁getKey', '()', '▁{', 'return', '▁map', 'Entry', '.', 'getKey', '();', '}']
['▁public', '▁static', '▁int', '▁num', 'Non', 'null', '(', 'Object', '[]', '▁data', ')', '▁{', 'int', '▁n', '▁=', '▁0;', 'if', '▁(', '▁data', '▁==', '▁null', '▁)', '▁return', '▁n', ';', 'for', '▁(', 'Object', '▁o', '▁:', '▁data', ')', '▁{', 'if', '▁(', '▁o', '!=', 'null', '▁)', '▁n', '++;', '}', 'return', '▁n', ';}']
['▁public', '▁void', '▁add', '(', 'int', '▁location', ',', '▁E', '▁object', ')', '▁{', 'if', '▁(', 'location', '▁>=', '▁0', '▁&&', '▁location', '▁<=', '▁size', ')', '▁{', 'Link', '<', 'E', '>', '▁link', '▁=', '▁void', 'Link', ';', 'if', '▁(', 'location', '▁<', '▁(', 'size', '▁/', '▁2', '))', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<=', '▁location', ';', '▁i', '++)', '▁{', 'link', '▁=', '▁link', '.', 'next', ';', '}}', '▁else', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁size', ';', '▁i', '▁>', '▁location', ';', '▁i', '--)', '▁{', 'link', '▁=', '▁link', '.', 'previous', ';', '}}', 'Link', '<', 'E', '>', '▁previous', '▁=', '▁link', '.', 'previous', ';', 'Link', '<', 'E', '>', '▁new', 'Link', '▁=', '▁new', '▁Link', '<', 'E', '>(', 'object', ',', '▁previous', ',', '▁link', ');', 'previous', '.', 'next', '▁=', '▁new', 'Link', ';', 'link', '.', 'previous', '▁=', '▁new', 'Link', ';', 'size', '++;', 'mod', 'Count', '++;', '}', '▁else', '▁{', 'throw', '▁new', '▁Index', 'OutOfBounds', 'Exception', '();', '}}']
['▁public', '▁Describe', 'Domain', 'Result', '▁describe', 'Domain', '(', 'Des', 'cribe', 'Domain', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Domain', '(', 'request', ');', '}']
['▁public', '▁void', '▁flush', '()', '▁throws', '▁IOException', '▁{', 'super', '.', 'flush', '();', '}']
['▁public', '▁P', 'ers', 'ian', 'Char', 'FilterFactory', '(', 'Map', '<', 'String', ',', 'String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'if', '▁(!', 'args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁boolean', '▁increment', 'Token', '()', '▁{', 'if', '▁(', 'used', ')', '▁{', 'return', '▁false', ';}', 'clear', 'Attributes', '();', 'term', 'Attribute', '.', 'append', '(', 'value', ');', 'offset', 'Attribute', '.', 'set', 'Offset', '(0,', '▁length', ');', 'used', '▁=', '▁true', ';', 'return', '▁true', ';}']
['▁public', '▁static', '▁Float', 'Buffer', '▁allocate', '(', 'int', '▁capacity', ')', '▁{', 'if', '▁(', 'capacity', '▁<', '▁0)', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '();', '}', 'return', '▁new', '▁Read', 'Write', 'Float', 'Array', 'Buffer', '(', 'capacity', ');', '}']
['▁public', '▁final', '▁Edit', '▁after', '(', 'Edit', '▁cut', ')', '▁{', 'return', '▁new', '▁Edit', '(', 'cut', '.', 'end', 'A', ',', '▁end', 'A', ',', '▁cut', '.', 'end', 'B', ',', '▁end', 'B', ');', '}']
['▁public', '▁Update', 'Rule', 'Version', 'Result', '▁update', 'Rule', 'Version', '(', 'Update', 'Rule', 'Version', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Rule', 'Version', '(', 'request', ');', '}']
['▁public', '▁List', 'Voice', 'Connector', 'Termination', 'Credentials', 'Result', '▁list', 'Voice', 'Connector', 'Termination', 'Credentials', '(', 'List', 'Voice', 'Connector', 'Termination', 'Credentials', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Voice', 'Connector', 'Termination', 'Credentials', '(', 'request', ');', '}']
['▁public', '▁Get', 'Deployment', 'Target', 'Result', '▁getDep', 'loyment', 'Target', '(', 'Get', 'Deployment', 'Target', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Deployment', 'Target', '(', 'request', ');', '}']
['▁public', '▁void', '▁set', 'No', 'Child', 'Report', '()', '▁{', 'let', 'Child', 'Report', '▁=', '▁false', ';', 'for', '▁(', 'final', '▁Perf', 'Task', '▁task', '▁:', '▁tasks', ')', '▁{', 'if', '▁(', 'task', '▁instanceof', '▁Task', 'Sequence', ')', '▁{', '((', 'Task', 'Sequence', ')', 'task', ').', 'set', 'No', 'Child', 'Report', '();', '}}', '}']
['▁public', '▁E', '▁get', '(', 'int', '▁location', ')', '▁{', 'try', '▁{', 'return', '▁a', '[', 'location', '];', '}', '▁catch', '▁(', 'Array', 'IndexOutOfBounds', 'Exception', '▁e', ')', '▁{', 'throw', '▁java', '.', 'util', '.', 'ArrayList', '.', 'throw', 'IndexOutOfBounds', 'Exception', '(', 'location', ',', '▁a', '.', 'length', ');', '}}']
['▁public', '▁Describe', 'DataSet', 'Result', '▁describe', 'DataSet', '(', 'Des', 'cribe', 'DataSet', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'DataSet', '(', 'request', ');', '}']
['▁public', '▁Skip', 'Work', 'Tree', 'Filter', '(', 'int', '▁tree', 'Idx', ')', '▁{', 'this', '.', 'tree', 'Idx', '▁=', '▁tree', 'Idx', ';}']
['▁public', '▁Describe', 'Network', 'Interfaces', 'Result', '▁describe', 'Network', 'Interfaces', '()', '▁{', 'return', '▁describe', 'Network', 'Interfaces', '(', 'new', '▁Describe', 'Network', 'Interfaces', 'Request', '());', '}']
['▁public', '▁final', '▁boolean', '▁contains', '(', 'int', '▁row', ',', '▁int', '▁col', ')', '▁{', 'return', '▁_', 'first', 'Row', '▁<=', '▁row', '▁&&', '▁_', 'last', 'Row', '▁>=', '▁row', '&&', '▁_', 'first', 'Column', '▁<=', '▁col', '▁&&', '▁_', 'last', 'Column', '▁>=', '▁col', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁new', '▁String', '(', 'this', '.', 'chars', ');', '}']
['▁public', '▁Patch', 'Type', '▁getP', 'atch', 'Type', '()', '▁{', 'return', '▁patch', 'Type', ';}']
['▁public', '▁Iterator', '<', 'K', '>', '▁iterator', '()', '▁{', 'return', '▁new', '▁Key', 'Iterator', '();', '}']
['▁public', '▁Create', 'Script', 'Result', '▁create', 'Script', '(', 'Create', 'Script', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Script', '(', 'request', ');', '}']
['▁public', '▁BytesRef', '▁next', '()', '▁{', 'term', 'U', 'pto', '++;', 'if', '▁(', 'term', 'U', 'pto', '▁>=', '▁info', '.', 'terms', '.', 'size', '())', '▁{', 'return', '▁null', ';}', '▁else', '▁{', 'info', '.', 'terms', '.', 'get', '(', 'info', '.', 'sorted', 'Terms', '[', 'term', 'U', 'pto', '],', '▁br', ');', 'return', '▁br', ';', '}}']
['▁public', '▁String', '▁output', 'ToString', '(', 'Chars', 'Ref', '▁output', ')', '▁{', 'return', '▁output', '.', 'toString', '();', '}']
['▁public', '▁Assoc', 'iate', 'Web', 'site', 'Authorization', 'Provider', 'Result', '▁associate', 'Web', 'site', 'Authorization', 'Provider', '(', 'Assoc', 'iate', 'Web', 'site', 'Authorization', 'Provider', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Assoc', 'iate', 'Web', 'site', 'Authorization', 'Provider', '(', 'request', ');', '}']
['▁public', '▁void', '▁un', 'pop', '(', 'Rev', 'Commit', '▁c', ')', '▁{', 'Block', '▁b', '▁=', '▁head', ';', 'if', '▁(', 'b', '▁==', '▁null', ')', '▁{', 'b', '▁=', '▁free', '.', 'new', 'Block', '();', 'b', '.', 'reset', 'To', 'Middle', '();', 'b', '.', 'add', '(', 'c', ');', 'head', '▁=', '▁b', ';', 'tail', '▁=', '▁b', ';', 'return', ';}', '▁else', '▁if', '▁(', 'b', '.', 'can', 'Un', 'pop', '())', '▁{', 'b', '.', 'un', 'pop', '(', 'c', ');', 'return', ';}', 'b', '▁=', '▁free', '.', 'new', 'Block', '();', 'b', '.', 'reset', 'To', 'End', '();', 'b', '.', 'un', 'pop', '(', 'c', ');', 'b', '.', 'next', '▁=', '▁head', ';', 'head', '▁=', '▁b', ';}']
['▁public', '▁Edge', 'NG', 'ram', 'Tokenizer', 'Factory', '(', 'Map', '<', 'String', ',', '▁String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'min', 'G', 'ram', 'Size', '▁=', '▁getInt', '(', 'args', ',', '▁"', 'min', 'G', 'ram', 'Size', '",', '▁Edge', 'NG', 'ram', 'Tokenizer', '.', 'DEFAULT', '_', 'MIN', '_', 'GRAM', '_', 'SIZE', ');', 'max', 'G', 'ram', 'Size', '▁=', '▁getInt', '(', 'args', ',', '▁"', 'max', 'G', 'ram', 'Size', '",', '▁Edge', 'NG', 'ram', 'Tokenizer', '.', 'DEFAULT', '_', 'MAX', '_', 'GRAM', '_', 'SIZE', ');', 'if', '▁(!', 'args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁Modify', 'DB', 'Parameter', 'Group', 'Request', '(', 'String', '▁d', 'B', 'Parameter', 'GroupName', ',', '▁java', '.', 'util', '.', 'List', '<', 'Parameter', '>', '▁parameters', ')', '▁{', 'set', 'DB', 'Parameter', 'GroupName', '(', 'd', 'B', 'Parameter', 'GroupName', ');', 'set', 'Parameters', '(', 'parameters', ');', '}']
['▁public', '▁Get', 'Host', 'ed', 'Zone', 'Limit', 'Result', '▁getHost', 'ed', 'Zone', 'Limit', '(', 'Get', 'Host', 'ed', 'Zone', 'Limit', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Host', 'ed', 'Zone', 'Limit', '(', 'request', ');', '}']
['▁public', '▁void', '▁set', '(', 'int', '▁index', ',', '▁long', '▁value', ')', '▁{', 'final', '▁int', '▁o', '▁=', '▁index', '▁>>>', '▁6', ';', 'final', '▁int', '▁b', '▁=', '▁index', '▁&', '▁6', '3;', 'final', '▁int', '▁shift', '▁=', '▁b', '▁<<', '▁0;', 'blocks', '[', 'o', ']', '▁=', '▁(', 'blocks', '[', 'o', ']', '▁&', '▁~', '(1', 'L', '▁<<', '▁shift', '))', '▁|', '▁(', 'value', '▁<<', '▁shift', ');', '}']
['▁public', '▁Rev', 'Filter', '▁clone', '()', '▁{', 'return', '▁new', '▁Pattern', 'Search', '(', 'pattern', '());', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"', 'sp', 'ans', '("', '▁+', '▁term', '.', 'toString', '()', '▁+', '▁")', '@', '"', '▁+', '(', 'doc', '▁==', '▁-1', '▁?', '▁"', 'START', '"', '▁:', '▁(', 'doc', '▁==', '▁NO', '_', 'MORE', '_', 'DO', 'CS', ')', '▁?', '▁"', 'END', 'DOC', '":', '▁doc', '▁+', '▁"', '▁-', '▁"', '▁+', '▁(', 'position', '▁==', '▁NO', '_', 'MORE', '_', 'POSITION', 'S', '▁?', '▁"', 'END', 'POS', '"', '▁:', '▁position', '));', '}']
['▁public', '▁boolean', '▁can', 'Append', 'Match', '()', '▁{', 'for', '▁(', 'Head', '▁head', '▁:', '▁heads', ')', '▁{', 'if', '▁(', 'head', '▁!=', '▁Last', 'Head', '.', 'INSTANCE', ')', '▁{', 'return', '▁true', ';', '}}', 'return', '▁false', ';}']
['▁public', '▁synchronized', '▁int', '▁lastIndexOf', '(', 'String', '▁sub', 'String', ',', '▁int', '▁start', ')', '▁{', 'return', '▁super', '.', 'last', 'IndexOf', '(', 'sub', 'String', ',', '▁start', ');', '}']
['▁public', '▁Delete', 'Network', 'Acl', 'Entry', 'Result', '▁delete', 'Network', 'Acl', 'Entry', '(', 'Delete', 'Network', 'Acl', 'Entry', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Network', 'Acl', 'Entry', '(', 'request', ');', '}']
['▁public', '▁Assoc', 'iate', 'Member', 'To', 'Group', 'Result', '▁associate', 'Member', 'To', 'Group', '(', 'Assoc', 'iate', 'Member', 'To', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Assoc', 'iate', 'Member', 'To', 'Group', '(', 'request', ');', '}']
['▁public', '▁static', '▁final', '▁int', '▁committer', '(', 'byte', '[]', '▁b', ',', '▁int', '▁ptr', ')', '▁{', 'final', '▁int', '▁sz', '▁=', '▁b', '.', 'length', ';', 'if', '▁(', 'ptr', '▁==', '▁0)', 'ptr', '▁+=', '▁46', ';', '▁while', '▁(', 'ptr', '▁<', '▁sz', '▁&&', '▁b', '[', 'ptr', ']', '▁==', "▁'", 'p', "')", 'ptr', '▁+=', '▁48', ';', '▁if', '▁(', 'ptr', '▁<', '▁sz', '▁&&', '▁b', '[', 'ptr', ']', '▁==', "▁'", 'a', "')", 'ptr', '▁=', '▁next', 'LF', '(', 'b', ',', '▁ptr', ');', 'return', '▁match', '(', 'b', ',', '▁ptr', ',', '▁committer', ');', '}']
['▁public', '▁int', '▁getLineNumber', '()', '▁{', '▁return', '▁row', ';', '▁}']
['▁public', '▁Sub', 'module', 'Update', 'Command', '▁add', 'Path', '(', 'String', '▁path', ')', '▁{', 'paths', '.', 'add', '(', 'path', ');', 'return', '▁this', ';}']
['▁public', '▁Get', 'Push', 'Template', 'Result', '▁getP', 'ush', 'Template', '(', 'Get', 'Push', 'Template', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Push', 'Template', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Vault', 'Result', '▁describe', 'Vault', '(', 'Des', 'cribe', 'Vault', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Vault', '(', 'request', ');', '}']
['▁public', '▁Describe', 'V', 'pc', 'Peer', 'ing', 'Connections', 'Result', '▁describe', 'V', 'pc', 'Peer', 'ing', 'Connections', '()', '▁{', 'return', '▁describe', 'V', 'pc', 'Peer', 'ing', 'Connections', '(', 'new', '▁Describe', 'V', 'pc', 'Peer', 'ing', 'Connections', 'Request', '());', '}']
['▁public', '▁ByteBuffer', '▁putLong', '(', 'int', '▁index', ',', '▁long', '▁value', ')', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁Register', 'Device', 'Result', '▁register', 'Device', '(', 'Register', 'Device', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Register', 'Device', '(', 'request', ');', '}']
['▁public', '▁static', '▁Format', '▁by', 'Id', '(', 'int', '▁id', ')', '▁{', 'for', '▁(', 'Format', '▁format', '▁:', '▁Format', '.', 'values', '())', '▁{', 'if', '▁(', 'format', '.', 'getId', '()', '▁==', '▁id', ')', '▁{', 'return', '▁format', ';', '}}', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁format', '▁id', ':', '▁"', '▁+', '▁id', ');', '}']
['▁public', '▁Delete', 'App', 'Result', '▁delete', 'App', '(', 'Delete', 'App', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'App', '(', 'request', ');', '}']
['▁public', '▁Get', 'B', 'aid', 'u', 'Channel', 'Result', '▁getB', 'aid', 'u', 'Channel', '(', 'Get', 'B', 'aid', 'u', 'Channel', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'B', 'aid', 'u', 'Channel', '(', 'request', ');', '}']
['▁public', '▁F', 'ST', '.', 'Bytes', 'Reader', '▁getBytes', 'Reader', '()', '▁{', 'return', '▁fst', '.', 'getBytes', 'Reader', '();', '}']
['▁public', '▁static', '▁boolean', '▁isValid', 'Scheme', 'Char', '(', 'int', '▁index', ',', '▁char', '▁c', ')', '▁{', 'if', '▁((', 'c', '▁>=', "▁'", 'a', "'", '▁&&', '▁c', '▁<=', "▁'", 'z', "')", '▁||', '▁(', 'c', '▁>=', "▁'", 'A', "'", '▁&&', '▁c', '▁<=', "▁'", 'Z', "'))", '▁{', 'return', '▁true', ';}', 'if', '▁(', 'index', '▁>', '▁0', '▁&&', '▁((', 'c', '▁>=', "▁'0'", '▁&&', '▁c', '▁<=', "▁'9", "')", '▁||', '▁c', '▁==', "▁'", "+'", '▁||', '▁c', '▁==', "▁'-'", '▁||', '▁c', '▁==', "▁'.", "'))", '▁{', 'return', '▁true', ';}', 'return', '▁false', ';}']
['▁public', '▁List', 'App', 'lied', 'Schema', 'Ar', 'ns', 'Result', '▁list', 'App', 'lied', 'Schema', 'Ar', 'ns', '(', 'List', 'App', 'lied', 'Schema', 'Ar', 'ns', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'App', 'lied', 'Schema', 'Ar', 'ns', '(', 'request', ');', '}']
['▁public', '▁String', '▁name', '()', '▁{', 'return', '▁this', '.', 'name', ';}']
['▁public', '▁Value', 'Eval', '▁evaluate', '(', 'Value', 'Eval', '[]', '▁args', ',', '▁Operation', 'Evaluation', 'Context', '▁ec', ')', '▁{', 'if', '▁(', 'args', '.', 'length', '▁<', '▁1)', '▁{', 'return', '▁Error', 'Eval', '.', 'VALUE', '_', 'INVALID', ';}', 'boolean', '▁isA', '1', 'style', ';', 'String', '▁text', ';', 'try', '▁{', 'Value', 'Eval', '▁ve', '▁=', '▁Operand', 'Resolver', '.', 'get', 'Single', 'Value', '(', 'args', '[0],', '▁ec', '.', 'get', 'Row', 'Index', '(),', '▁ec', '.', 'get', 'ColumnIndex', '());', 'text', '▁=', '▁Operand', 'Resolver', '.', 'coerce', 'Value', 'ToString', '(', 've', ');', 'switch', '▁(', 'args', '.', 'length', ')', '▁{', 'case', '▁1:', 'is', 'A', '1', 'style', '▁=', '▁true', ';', 'break', ';', 'case', '▁2:', 'is', 'A', '1', 'style', '▁=', '▁evaluate', 'Boolean', 'Arg', '(', 'args', '[1],', '▁ec', ');', 'break', ';', 'default', ':', 'return', '▁Error', 'Eval', '.', 'VALUE', '_', 'INVALID', ';', '}}', '▁catch', '▁(', 'Evaluation', 'Exception', '▁e', ')', '▁{', 'return', '▁e', '.', 'get', 'Error', 'Eval', '();', '}', 'return', '▁evaluate', 'Ind', 'irect', '(', 'ec', ',', '▁text', ',', '▁isA', '1', 'style', ');', '}']
['▁public', '▁final', '▁int', '▁compareTo', '(', 'int', '[]', '▁bs', ',', '▁int', '▁p', ')', '▁{', 'int', '▁cmp', ';', 'cmp', '▁=', '▁NB', '.', 'compare', 'UInt', '32', '(', 'w', '1,', '▁bs', '[', 'p', ']);', 'if', '▁(', 'cmp', '▁!=', '▁0)', 'return', '▁cmp', ';', 'cmp', '▁=', '▁NB', '.', 'compare', 'UInt', '32', '(', 'w', '2,', '▁bs', '[', 'p', '▁+', '▁1', ']);', 'if', '▁(', 'cmp', '▁!=', '▁0)', 'return', '▁cmp', ';', 'cmp', '▁=', '▁NB', '.', 'compare', 'UInt', '32', '(', 'w', '3,', '▁bs', '[', 'p', '▁+', '▁2', ']);', 'if', '▁(', 'cmp', '▁!=', '▁0)', 'return', '▁cmp', ';', 'cmp', '▁=', '▁NB', '.', 'compare', 'UInt', '32', '(', 'w', '4,', '▁bs', '[', 'p', '▁+', '▁3', ']);', 'if', '▁(', 'cmp', '▁!=', '▁0)', 'return', '▁cmp', ';', 'return', '▁NB', '.', 'compare', 'UInt', '32', '(', 'w', '5,', '▁bs', '[', 'p', '▁+', '▁4', ']);', '}']
['▁public', '▁void', '▁remove', 'Name', '(', 'int', '▁index', '){', 'names', '.', 'remove', '(', 'index', ');', 'work', 'book', '.', 'remove', 'Name', '(', 'index', ');', '}']
['▁public', '▁Get', 'Queue', 'Attributes', 'Request', '(', 'String', '▁queue', 'Url', ',', '▁java', '.', 'util', '.', 'List', '<', 'String', '>', '▁attribute', 'Names', ')', '▁{', 'set', 'Queue', 'Url', '(', 'queue', 'Url', ');', 'setAttribute', 'Names', '(', 'attribute', 'Names', ');', '}']
['▁public', '▁static', '▁boolean', '[]', '▁copyOf', '(', 'boolean', '[]', '▁original', ',', '▁int', '▁newLength', ')', '▁{', 'if', '▁(', 'new', 'Length', '▁<', '▁0)', '▁{', 'throw', '▁new', '▁Negative', 'Array', 'Size', 'Exception', '();', '}', 'return', '▁copyOf', 'Range', '(', 'original', ',', '▁0,', '▁newLength', ');', '}']
['▁public', '▁static', '▁void', '▁setEnabled', '(', 'boolean', '▁enabled', ')', '▁{', 'ENABLED', '▁=', '▁enabled', ';}']
['▁public', '▁Delete', 'Log', 'Pattern', 'Result', '▁delete', 'Log', 'Pattern', '(', 'Delete', 'Log', 'Pattern', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Log', 'Pattern', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁contains', '(', 'char', '[]', '▁text', ',', '▁int', '▁off', ',', '▁int', '▁len', ')', '▁{', 'return', '▁map', '.', 'contains', 'Key', '(', 'text', ',', '▁off', ',', '▁len', ');', '}']
['▁public', '▁int', '▁getFirst', 'Sheet', 'Index', 'From', 'Ex', 'tern', 'Sheet', 'Index', '(', 'int', '▁extern', 'Sheet', 'Number', '){', 'return', '▁link', 'Table', '.', 'get', 'First', 'Internal', 'Sheet', 'Index', 'For', 'Ext', 'Index', '(', 'ext', 'ern', 'Sheet', 'Number', ');', '}']
['▁public', '▁boolean', '▁handles', '(', 'String', '▁commandLine', ')', '▁{', 'return', '▁command', '.', 'length', '()', '▁+', '▁1', '▁<', '▁commandLine', '.', 'length', '()', '&&', '▁commandLine', '.', 'charAt', '(', 'command', '.', 'length', '())', '▁==', "▁'", "▁'", '&&', '▁commandLine', '.', 'startsWith', '(', 'command', ');', '}']
['▁public', '▁static', '▁void', '▁register', '(', 'Merge', 'Strategy', '▁imp', ')', '▁{', 'register', '(', 'imp', '.', 'getName', '(),', '▁imp', ');', '}']
['▁public', '▁long', '▁ram', 'Bytes', 'Used', '()', '▁{', 'return', '▁BASE', '_', 'RAM', '_', 'BYTES', '_', 'USED', '▁+', '▁((', 'index', '!=', 'null', ')?', '▁index', '.', 'ram', 'Bytes', 'Used', '()', '▁:', '▁0);', '}']
['▁public', '▁Host', 'ed', 'Zone', '(', 'String', '▁id', ',', '▁String', '▁name', ',', '▁String', '▁caller', 'Reference', ')', '▁{', 'set', 'Id', '(', 'id', ');', 'setName', '(', 'name', ');', 'set', 'Caller', 'Reference', '(', 'caller', 'Reference', ');', '}']
['▁public', '▁Get', 'Find', 'ings', 'Result', '▁getF', 'ind', 'ings', '(', 'Get', 'Find', 'ings', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Find', 'ings', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Topics', 'Detection', 'Job', 'Result', '▁describe', 'Topics', 'Detection', 'Job', '(', 'Des', 'cribe', 'Topics', 'Detection', 'Job', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Topics', 'Detection', 'Job', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁process', 'Match', '(', 'Value', 'Eval', '▁eval', ')', '▁{', 'if', '(', 'eval', '▁instanceof', '▁Numeric', 'Value', 'Eval', ')', '▁{', 'if', '(', 'minimum', 'Value', '▁==', '▁null', ')', '▁{', '▁minimum', 'Value', '▁=', '▁eval', ';}', '▁else', '▁{', '▁double', '▁currentValue', '▁=', '▁((', 'Numeric', 'Value', 'Eval', ')', 'eval', ').', 'get', 'Number', 'Value', '();', 'double', '▁oldValue', '▁=', '▁((', 'Numeric', 'Value', 'Eval', ')', 'minimum', 'Value', ').', 'get', 'Number', 'Value', '();', 'if', '(', 'current', 'Value', '▁<', '▁oldValue', ')', '▁{', 'minimum', 'Value', '▁=', '▁eval', ';', '}}', '}', 'return', '▁true', ';}']
['▁public', '▁void', '▁write', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Byte', '(', 'sid', '▁+', '▁getP', 'tg', 'Class', '());', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'len', '_', 'ref', '_', 'sub', 'expression', ');', '}']
['▁public', '▁static', '▁void', '▁main', '(', 'String', '[]', '▁args', ')', '▁throws', '▁IOException', '▁{', 'boolean', '▁print', 'Tree', '▁=', '▁false', ';', 'String', '▁path', '▁=', '▁null', ';', 'for', '(', 'int', '▁i', '=0;', 'i', '<', 'args', '.', 'length', ';', 'i', '++)', '▁{', 'if', '▁(', 'args', '[', 'i', '].', 'equals', '("-', 'print', 'Tree', '"))', '▁{', 'print', 'Tree', '▁=', '▁true', ';}', '▁else', '▁{', 'path', '▁=', '▁args', '[', 'i', '];', '}}', 'if', '▁(', 'args', '.', 'length', '▁!=', '▁(', 'print', 'Tree', '▁?', '▁2', '▁:', '▁1))', '▁{', 'System', '.', 'out', '.', 'println', '("\\', 'n', 'Usage', ':', '▁java', '▁-', 'classpath', '▁...', '▁org', '.', 'apache', '.', 'l', 'ucene', '.', 'fac', 'et', '.', 'util', '.', 'Print', 'Tax', 'onomy', 'Stats', '▁[-', 'print', 'Tree', ']', '▁/', 'path', '/', 'to', '/', 'tax', 'on', 'on', 'my', '/', 'index', '\\', 'n', '");', 'System', '.', 'exit', '(1);', '}', 'Directory', '▁dir', '▁=', '▁FS', 'Directory', '.', 'open', '(', 'Paths', '.', 'get', '(', 'path', '));', 'Tax', 'onomy', 'Reader', '▁r', '▁=', '▁new', '▁Directory', 'Tax', 'onomy', 'Reader', '(', 'dir', ');', 'print', 'Stats', '(', 'r', ',', '▁System', '.', 'out', ',', '▁print', 'Tree', ');', 'r', '.', 'close', '();', 'dir', '.', 'close', '();', '}']
['▁public', '▁void', '▁set', 'Byte', 'Value', '(', 'byte', '▁value', ')', '▁{', 'if', '▁(!', '(', 'fields', 'Data', '▁instanceof', '▁Byte', '))', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'cannot', '▁change', '▁value', '▁type', '▁from', '▁"', '▁+', '▁fields', 'Data', '.', 'getClass', '().', 'get', 'Simple', 'Name', '()', '▁+', '▁"', '▁to', '▁Byte', '");', '}', 'fields', 'Data', '▁=', '▁Byte', '.', 'valueOf', '(', 'value', ');', '}']
['▁public', '▁static', '▁int', '▁initialize', '()', '▁{', 'return', '▁initialize', '(', 'DEFAULT', '_', 'SE', 'ED', ');', '}']
['▁public', '▁Caching', 'Double', 'Value', 'Source', '(', 'Double', 'Values', 'Source', '▁source', ')', '▁{', 'this', '.', 'source', '▁=', '▁source', ';', 'cache', '▁=', '▁new', '▁HashMap', '<>();', '}']
['▁public', '▁Attribute', 'Definition', '(', 'String', '▁attributeName', ',', '▁Scalar', 'Attribute', 'Type', '▁attribute', 'Type', ')', '▁{', 'setAttribute', 'Name', '(', 'attribute', 'Name', ');', 'setAttribute', 'Type', '(', 'attribute', 'Type', '.', 'toString', '());', '}']
['▁public', '▁static', '▁String', '▁join', '(', 'Collection', '<', 'String', '>', '▁parts', ',', '▁String', '▁separator', ')', '▁{', 'return', '▁StringUtils', '.', 'join', '(', 'parts', ',', '▁separator', ',', '▁separator', ');', '}']
['▁public', '▁List', 'Task', 'Definition', 'Fam', 'ilies', 'Result', '▁list', 'Task', 'Definition', 'Fam', 'ilies', '(', 'List', 'Task', 'Definition', 'Fam', 'ilies', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Task', 'Definition', 'Fam', 'ilies', '(', 'request', ');', '}']
['▁public', '▁List', 'Components', 'Result', '▁list', 'Components', '(', 'List', 'Components', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Components', '(', 'request', ');', '}']
['▁public', '▁Activ', 'ate', 'Photos', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Activate', 'Photos', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁Create', 'Match', 'm', 'aking', 'Rule', 'Set', 'Result', '▁create', 'Match', 'm', 'aking', 'Rule', 'Set', '(', 'Create', 'Match', 'm', 'aking', 'Rule', 'Set', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Match', 'm', 'aking', 'Rule', 'Set', '(', 'request', ');', '}']
['▁public', '▁List', 'Available', 'Management', 'C', 'id', 'r', 'Ranges', 'Result', '▁list', 'Available', 'Management', 'C', 'id', 'r', 'Ranges', '(', 'List', 'Available', 'Management', 'C', 'id', 'r', 'Ranges', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Available', 'Management', 'C', 'id', 'r', 'Ranges', '(', 'request', ');', '}']
['▁public', '▁ObjectId', 'Subclass', 'Map', '<', 'ObjectId', '>', '▁getBase', 'Object', 'Ids', '()', '▁{', 'if', '▁(', 'base', 'Object', 'Ids', '▁!=', '▁null', ')', 'return', '▁base', 'Object', 'Ids', ';', 'return', '▁new', '▁ObjectId', 'Subclass', 'Map', '<>();', '}']
['▁public', '▁Delete', 'Push', 'Template', 'Result', '▁delete', 'Push', 'Template', '(', 'Delete', 'Push', 'Template', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Push', 'Template', '(', 'request', ');', '}']
['▁public', '▁Create', 'Domain', 'Entry', 'Result', '▁create', 'Domain', 'Entry', '(', 'Create', 'Domain', 'Entry', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Domain', 'Entry', '(', 'request', ');', '}']
['▁public', '▁static', '▁int', '▁getEncoded', 'Size', '(', 'Object', '[]', '▁values', ')', '▁{', 'int', '▁result', '▁=', '▁values', '.', 'length', '▁*', '▁1;', 'for', '▁(', 'Object', '▁value', '▁:', '▁values', ')', '▁{', 'result', '▁+=', '▁getEncoded', 'Size', '(', 'value', ');', '}', 'return', '▁result', ';}']
['▁public', '▁Open', 'NLP', 'Tokenizer', 'Factory', '(', 'Map', '<', 'String', ',', 'String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'sentence', 'Model', 'File', '▁=', '▁require', '(', 'args', ',', '▁SE', 'NT', 'ENCE', '_', 'MODEL', ');', 'token', 'izer', 'Model', 'File', '▁=', '▁require', '(', 'args', ',', '▁TOKEN', 'IZ', 'ER', '_', 'MODEL', ');', 'if', '▁(', '▁!', '▁args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁final', '▁int', '▁getInt', '(', 'int', '▁index', ')', '▁{', 'check', 'Index', '(', 'index', ',', '▁Size', 'Of', '.', 'INT', ');', 'return', '▁Memory', '.', 'pe', 'ek', 'Int', '(', 'back', 'ing', 'Array', ',', '▁offset', '▁+', '▁index', ',', '▁order', ');', '}']
['▁public', '▁List', '<', 'Head', '>', '▁getNext', 'Head', 's', '(', 'char', '▁c', ')', '▁{', 'if', '▁(', 'matches', '(', 'c', '))', '▁{', 'return', '▁new', 'Head', 's', ';}', 'return', '▁FileName', 'Matcher', '.', 'EMPTY', '_', 'HEAD', '_', 'LIST', ';}']
['▁public', '▁ByteBuffer', '▁putShort', '(', 'short', '▁value', ')', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁void', '▁write', 'Un', 'shared', '(', 'Object', '▁object', ')', '▁throws', '▁IOException', '▁{', 'write', 'Object', '(', 'object', ',', '▁true', ');', '}']
['▁public', '▁int', '▁offset', 'By', 'Code', 'Points', '(', 'int', '▁index', ',', '▁int', '▁codePoint', 'Offset', ')', '▁{', 'return', '▁Character', '.', 'offset', 'By', 'Code', 'Points', '(', 'value', ',', '▁0,', '▁count', ',', '▁index', ',', 'code', 'Point', 'Offset', ');', '}']
['▁public', '▁static', '▁int', '▁getUnique', 'Alt', '(', 'Collection', '<', 'BitSet', '>', '▁alt', 'sets', ')', '▁{', 'BitSet', '▁all', '▁=', '▁get', 'Al', 'ts', '(', 'alt', 'sets', ');', 'if', '▁(', '▁all', '.', 'card', 'inality', '()', '==', '1', '▁)', '▁return', '▁all', '.', 'next', 'Set', 'Bit', '(0);', 'return', '▁AT', 'N', '.', 'INVALID', '_', 'ALT', '_', 'NUMBER', ';}']
['▁public', '▁Date', '▁get', 'When', '()', '▁{', 'return', '▁new', '▁Date', '(', 'when', ');', '}']
['▁public', '▁Rule', 'Tag', 'Token', '(', 'String', '▁rule', 'Name', ',', '▁int', '▁bypass', 'TokenType', ',', '▁String', '▁label', ')', '▁{', 'if', '▁(', 'rule', 'Name', '▁==', '▁null', '▁||', '▁rule', 'Name', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'rule', 'Name', '▁cannot', '▁be', '▁null', '▁or', '▁empty', '.");', '}', 'this', '.', 'rule', 'Name', '▁=', '▁rule', 'Name', ';', 'this', '.', 'b', 'yp', 'ass', 'TokenType', '▁=', '▁bypass', 'TokenType', ';', 'this', '.', 'label', '▁=', '▁label', ';}']
['▁public', '▁Disable', 'Organization', 'Admin', 'Account', 'Result', '▁disable', 'Organization', 'Admin', 'Account', '(', 'Disable', 'Organization', 'Admin', 'Account', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Disable', 'Organization', 'Admin', 'Account', '(', 'request', ');', '}']
['▁public', '▁Create', 'Room', 'Result', '▁create', 'Room', '(', 'Create', 'Room', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Room', '(', 'request', ');', '}']
['▁public', '▁Replication', 'Group', '▁delete', 'Replication', 'Group', '(', 'Delete', 'Replication', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Replication', 'Group', '(', 'request', ');', '}']
['▁public', '▁final', '▁CharBuffer', '▁decode', '(', 'ByteBuffer', '▁buffer', ')', '▁{', 'try', '▁{', 'return', '▁new', 'Decoder', '().', 'on', 'Malformed', 'Input', '(', 'Coding', 'Error', 'Action', '.', 'REPLACE', ').', 'on', 'Un', 'mapp', 'able', 'Character', '(', 'Coding', 'Error', 'Action', '.', 'REPLACE', ').', 'decode', '(', 'buffer', ');', '}', '▁catch', '▁(', 'Character', 'Coding', 'Exception', '▁ex', ')', '▁{', 'throw', '▁new', '▁Error', '(', 'ex', '.', 'getMessage', '(),', '▁ex', ');', '}}']
['▁public', '▁Distribution', '(', 'String', '▁id', ',', '▁String', '▁status', ',', '▁String', '▁domain', 'Name', ')', '▁{', 'set', 'Id', '(', 'id', ');', 'set', 'Status', '(', 'status', ');', 'set', 'Domain', 'Name', '(', 'domain', 'Name', ');', '}']
['▁public', '▁final', '▁double', '[]', '▁array', '()', '▁{', 'return', '▁protected', 'Array', '();', '}']
['▁public', '▁Date', 'Window', '19', '04', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'window', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁Delete', 'DB', 'Snapshot', 'Request', '(', 'String', '▁d', 'B', 'Snapshot', 'Identifier', ')', '▁{', 'set', 'DB', 'Snapshot', 'Identifier', '(', 'd', 'B', 'Snapshot', 'Identifier', ');', '}']
['▁public', '▁final', '▁Parser', 'Extension', '▁getExtension', '(', 'String', '▁key', ')', '▁{', 'return', '▁this', '.', 'extensions', '.', 'get', '(', 'key', ');', '}']
['▁public', '▁void', '▁inform', '(', 'Resource', 'Loader', '▁loader', ')', '▁{', 'try', '▁{', 'if', '▁(', 'chunk', 'er', 'Model', 'File', '▁!=', '▁null', ')', '▁{', 'Open', 'N', 'L', 'PO', 'ps', 'Factory', '.', 'get', 'Chunk', 'er', 'Model', '(', 'chunk', 'er', 'Model', 'File', ',', '▁loader', ');', '}}', '▁catch', '▁(', 'IOException', '▁e', ')', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '(', 'e', ');', '}}']
['▁public', '▁Complete', 'Vault', 'Lock', 'Result', '▁complete', 'Vault', 'Lock', '(', 'Complete', 'Vault', 'Lock', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Complete', 'Vault', 'Lock', '(', 'request', ');', '}']
['▁public', '▁final', '▁int', '[]', '▁getChar', 'Interval', 's', '()', '▁{', 'return', '▁points', '.', 'clone', '();', '}']
['▁public', '▁long', '▁ram', 'Bytes', 'Used', '()', '▁{', 'return', '▁values', '.', 'ram', 'Bytes', 'Used', '()+', '▁super', '.', 'ram', 'Bytes', 'Used', '()+', '▁Long', '.', 'BYTES', '+', '▁Ram', 'Usage', 'Estimator', '.', 'NUM', '_', 'BYTES', '_', 'OBJECT', '_', 'REF', ';}']
['▁public', '▁Register', 'Instances', 'With', 'LoadBalancer', 'Result', '▁register', 'Instances', 'With', 'LoadBalancer', '(', 'Register', 'Instances', 'With', 'LoadBalancer', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Register', 'Instances', 'With', 'LoadBalancer', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Cluster', 'User', 'K', 'ub', 'econfig', 'Request', '()', '▁{', 'super', '("', 'CS', '",', '▁"2015', '-12', '-15', '",', '▁"', 'Des', 'cribe', 'Cluster', 'User', 'K', 'ub', 'econfig', '",', '▁"', 'cs', 'k', '");', 'set', 'Uri', 'Pattern', '("/', 'k', '8', 's', '/', '[', 'Cluster', 'Id', ']/', 'user', '_', 'config', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'GET', ');', '}']
['▁public', '▁P', 'recision', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'precision', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'get', 'Left', 'Row', 'G', 'utter', '());', 'out', '.', 'write', 'Short', '(', 'get', 'Top', 'Col', 'G', 'utter', '());', 'out', '.', 'write', 'Short', '(', 'get', 'Row', 'Level', 'Max', '());', 'out', '.', 'write', 'Short', '(', 'get', 'Col', 'Level', 'Max', '());', '}']
['▁public', '▁Delete', 'Virtual', 'Interface', 'Result', '▁delete', 'Virtual', 'Interface', '(', 'Delete', 'Virtual', 'Interface', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Virtual', 'Interface', '(', 'request', ');', '}']
['▁public', '▁Entry', '▁getEntry', '(', 'String', '▁name', ')', '▁throws', '▁FileNotFound', 'Exception', '▁{', 'if', '▁(', 'ex', 'cludes', '.', 'contains', '(', 'name', '))', '▁{', 'throw', '▁new', '▁FileNotFound', 'Exception', '(', 'name', ');', '}', 'Entry', '▁entry', '▁=', '▁directory', '.', 'get', 'Entry', '(', 'name', ');', 'return', '▁wrap', 'Entry', '(', 'entry', ');', '}']
['▁public', '▁String', '▁toString', '(){', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'BACK', 'UP', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'backup', '▁=', '▁"', ').', 'append', '(', 'Integer', '.', 'to', 'HexString', '(', 'get', 'Backup', '())', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'BACK', 'UP', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁Delete', 'Voice', 'Connector', 'Orig', 'ination', 'Result', '▁delete', 'Voice', 'Connector', 'Orig', 'ination', '(', 'Delete', 'Voice', 'Connector', 'Orig', 'ination', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Voice', 'Connector', 'Orig', 'ination', '(', 'request', ');', '}']
['▁public', '▁Append', 'able', '▁append', '(', 'char', '▁c', ')', '▁{', 'write', '(', 'c', ');', 'return', '▁this', ';}']
['▁public', '▁static', '▁long', '▁generation', 'From', 'Segments', 'FileName', '(', 'String', '▁fileName', ')', '▁{', 'if', '▁(', 'fileName', '.', 'equals', '(', 'OLD', '_', 'SE', 'G', 'MENTS', '_', 'GEN', '))', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', '\\"', '"', '▁+', '▁OLD', '_', 'SE', 'G', 'MENTS', '_', 'GEN', '▁+', '▁"\\"', '▁is', '▁not', '▁a', '▁valid', '▁segment', '▁file', '▁name', '▁since', '▁4.0', '");', '}', '▁else', '▁if', '▁(', 'fileName', '.', 'equals', '(', 'Index', 'File', 'Names', '.', 'SE', 'G', 'MENTS', '))', '▁{', 'return', '▁0;', '}', '▁else', '▁if', '▁(', 'fileName', '.', 'startsWith', '(', 'Index', 'File', 'Names', '.', 'SE', 'G', 'MENTS', '))', '▁{', 'return', '▁Long', '.', 'parse', 'Long', '(', 'fileName', '.', 'substring', '(1', '+', 'Index', 'File', 'Names', '.', 'SE', 'G', 'MENTS', '.', 'length', '()),', 'Character', '.', 'MAX', '_', 'RAD', 'IX', ');', '}', '▁else', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'fileName', '▁\\"', '"', '▁+', '▁fileName', '▁+', '▁"\\"', '▁is', '▁not', '▁a', '▁segments', '▁file', '");', '}}']
['▁public', '▁static', '▁Tag', 'Opt', '▁from', 'Option', '(', 'String', '▁o', ')', '▁{', 'if', '▁(', 'o', '▁==', '▁null', '▁||', '▁o', '.', 'length', '()', '▁==', '▁0)', 'return', '▁AUTO', '_', 'F', 'OLLOW', ';', 'for', '▁(', 'Tag', 'Opt', '▁tag', 'opt', '▁:', '▁values', '())', '▁{', 'if', '▁(', 'tag', 'opt', '.', 'option', '().', 'equals', '(', 'o', '))', 'return', '▁tag', 'opt', ';}', 'throw', '▁new', '▁IllegalArgument', 'Exception', '(', 'Message', 'Format', '.', 'format', '(', 'J', 'Git', 'Text', '.', 'get', '().', 'invalid', 'Tag', 'Option', ',', '▁o', '));', '}']
['▁public', '▁Start', 'Content', 'Mod', 'eration', 'Result', '▁start', 'Content', 'Mod', 'eration', '(', 'Start', 'Content', 'Mod', 'eration', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Start', 'Content', 'Mod', 'eration', '(', 'request', ');', '}']
['▁public', '▁static', '▁String', '▁quote', 'Replacement', '(', 'String', '▁s', ')', '▁{', 'StringBuilder', '▁result', '▁=', '▁new', '▁StringBuilder', '(', 's', '.', 'length', '());', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁s', '.', 'length', '();', '▁i', '++)', '▁{', 'char', '▁c', '▁=', '▁s', '.', 'charAt', '(', 'i', ');', 'if', '▁(', 'c', '▁==', "▁'", '\\\\', "'", '▁||', '▁c', '▁==', "▁'$", "')", '▁{', 'result', '.', 'append', "('", '\\\\', "');", '}', 'result', '.', 'append', '(', 'c', ');', '}', 'return', '▁result', '.', 'toString', '();', '}']
['▁public', '▁final', '▁void', '▁set', '(', 'V', '▁newValue', ')', '▁{', 'value', '▁=', '▁newValue', ';}']
['▁public', '▁Query', 'Parser', 'Token', 'Manager', '(', 'Char', 'Stream', '▁stream', '){', 'input', '_', 'stream', '▁=', '▁stream', ';}']
['▁public', '▁long', '▁value', 'For', '(', 'double', '▁elapsed', ')', '▁{', 'double', '▁val', ';', 'if', '▁(', 'mod', 'By', '▁==', '▁0)', 'val', '▁=', '▁elapsed', '▁/', '▁factor', ';', 'else', 'val', '▁=', '▁elapsed', '▁/', '▁factor', '▁%', '▁mod', 'By', ';', 'if', '▁(', 'type', '▁==', "▁'0", "')", 'return', '▁Math', '.', 'round', '(', 'val', ');', 'else', '▁return', '▁(', 'long', ')', '▁val', ';}']
['▁public', '▁Long', 'Buffer', '▁get', '(', 'long', '[]', '▁dst', ',', '▁int', '▁dst', 'Offset', ',', '▁int', '▁long', 'Count', ')', '▁{', 'byte', 'Buffer', '.', 'limit', '(', 'limit', '▁*', '▁Size', 'Of', '.', 'LONG', ');', 'byte', 'Buffer', '.', 'position', '(', 'position', '▁*', '▁Size', 'Of', '.', 'LONG', ');', 'if', '▁(', 'byte', 'Buffer', '▁instanceof', '▁Direct', 'ByteBuffer', ')', '▁{', '((', 'Direct', 'ByteBuffer', ')', '▁byteBuffer', ').', 'get', '(', 'dst', ',', '▁dst', 'Offset', ',', '▁long', 'Count', ');', '}', '▁else', '▁{', '((', 'Heap', 'ByteBuffer', ')', '▁byteBuffer', ').', 'get', '(', 'dst', ',', '▁dst', 'Offset', ',', '▁long', 'Count', ');', '}', 'this', '.', 'position', '▁+=', '▁long', 'Count', ';', 'return', '▁this', ';}']
['▁public', '▁void', '▁remove', 'Error', 'Listeners', '()', '▁{', '_', 'listeners', '.', 'clear', '();', '}']
['▁public', '▁Common', 'Token', 'Stream', '(', 'Token', 'Source', '▁token', 'Source', ',', '▁int', '▁channel', ')', '▁{', 'this', '(', 'token', 'Source', ');', 'this', '.', 'channel', '▁=', '▁channel', ';}']
['▁public', '▁List', 'Object', 'Policies', 'Result', '▁list', 'Object', 'Policies', '(', 'List', 'Object', 'Policies', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Object', 'Policies', '(', 'request', ');', '}']
['▁public', '▁Object', 'To', 'Pack', '(', 'Any', 'ObjectId', '▁src', ',', '▁int', '▁type', ')', '▁{', 'super', '(', 'src', ');', 'flags', '▁=', '▁type', '▁<<', '▁TYPE', '_', 'SHIFT', ';}']
['▁public', '▁int', '▁stem', '(', 'char', '▁s', '[],', '▁int', '▁len', ')', '▁{', 'int', '▁num', 'V', 'ow', 'els', '▁=', '▁num', 'V', 'ow', 'els', '(', 's', ',', '▁len', ');', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁aff', 'ix', 'es', '.', 'length', ';', '▁i', '++)', '▁{', 'Aff', 'ix', '▁aff', 'ix', '▁=', '▁aff', 'ix', 'es', '[', 'i', '];', 'if', '▁(', 'num', 'V', 'ow', 'els', '▁>', '▁aff', 'ix', '.', 'vc', '▁&&', '▁len', '▁>=', '▁aff', 'ix', '.', 'aff', 'ix', '.', 'length', '▁+', '▁3', '▁&&', '▁endsWith', '(', 's', ',', '▁len', ',', '▁aff', 'ix', '.', 'aff', 'ix', '))', '▁{', 'len', '▁-=', '▁aff', 'ix', '.', 'aff', 'ix', '.', 'length', ';', 'return', '▁aff', 'ix', '.', 'pal', 'atal', 'izes', '▁?', '▁un', 'pal', 'atal', 'ize', '(', 's', ',', '▁len', ')', '▁:', '▁len', ';', '}}', 'return', '▁len', ';}']
['▁public', '▁void', '▁recover', '(', 'Parser', '▁recogn', 'izer', ',', '▁Recognition', 'Exception', '▁e', ')', '▁{', 'if', '▁(', '▁last', 'Error', 'Index', '==', 'recogn', 'izer', '.', 'getInputStream', '().', 'index', '()', '▁&&', 'last', 'Error', 'States', '▁!=', '▁null', '▁&&', 'last', 'Error', 'States', '.', 'contains', '(', 'recogn', 'izer', '.', 'get', 'State', '())', '▁)', '▁{', 'recogn', 'izer', '.', 'consume', '();', '}', 'last', 'Error', 'Index', '▁=', '▁recogn', 'izer', '.', 'getInputStream', '().', 'index', '();', 'if', '▁(', '▁last', 'Error', 'States', '==', 'null', '▁)', '▁last', 'Error', 'States', '▁=', '▁new', '▁Interval', 'Set', '();', 'last', 'Error', 'States', '.', 'add', '(', 'recogn', 'izer', '.', 'get', 'State', '());', 'Interval', 'Set', '▁follow', 'Set', '▁=', '▁getError', 'Recovery', 'Set', '(', 'recogn', 'izer', ');', 'consume', 'Until', '(', 'recogn', 'izer', ',', '▁follow', 'Set', ');', '}']
['▁public', '▁String', '▁to', 'Formula', 'String', '()', '▁{', 'String', '▁value', '▁=', '▁field', '_3_', 'string', ';', 'int', '▁len', '▁=', '▁value', '.', 'length', '();', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '(', 'len', '▁+', '▁4', ');', 'sb', '.', 'append', '(', 'FORM', 'UL', 'A', '_', 'DE', 'LIMITER', ');', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁len', ';', '▁i', '++)', '▁{', 'char', '▁c', '▁=', '▁value', '.', 'charAt', '(', 'i', ');', 'if', '▁(', 'c', '▁==', '▁FORM', 'UL', 'A', '_', 'DE', 'LIMITER', ')', '▁{', 'sb', '.', 'append', '(', 'FORM', 'UL', 'A', '_', 'DE', 'LIMITER', ');', '}', 'sb', '.', 'append', '(', 'c', ');', '}', 'sb', '.', 'append', '(', 'FORM', 'UL', 'A', '_', 'DE', 'LIMITER', ');', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁Un', 'link', 'Face', 'Request', '()', '▁{', 'super', '("', 'Link', 'Face', '",', '▁"2018', '-07', '-20', '",', '▁"', 'Un', 'link', 'Face', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁Configuration', 'Option', 'Setting', '(', 'String', '▁namespace', ',', '▁String', '▁option', 'Name', ',', '▁String', '▁value', ')', '▁{', 'set', 'Namespace', '(', 'namespace', ');', 'set', 'Option', 'Name', '(', 'option', 'Name', ');', 'setValue', '(', 'value', ');', '}']
['▁public', '▁CharSequence', '▁getF', 'ully', '(', 'CharSequence', '▁key', ')', '▁{', 'StringBuilder', '▁result', '▁=', '▁new', '▁StringBuilder', '(', 'tries', '.', 'size', '()', '▁*', '▁2);', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁tries', '.', 'size', '();', '▁i', '++)', '▁{', 'CharSequence', '▁r', '▁=', '▁tries', '.', 'get', '(', 'i', ').', 'get', 'Fully', '(', 'key', ');', 'if', '▁(', 'r', '▁==', '▁null', '▁||', '▁(', 'r', '.', 'length', '()', '▁==', '▁1', '▁&&', '▁r', '.', 'charAt', '(0)', '▁==', '▁E', 'OM', '))', '▁{', 'return', '▁result', ';}', 'result', '.', 'append', '(', 'r', ');', '}', 'return', '▁result', ';}']
['▁public', '▁Describe', 'Mount', 'Target', 'Security', 'Groups', 'Result', '▁describe', 'Mount', 'Target', 'Security', 'Groups', '(', 'Des', 'cribe', 'Mount', 'Target', 'Security', 'Groups', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Mount', 'Target', 'Security', 'Groups', '(', 'request', ');', '}']
['▁public', '▁Get', 'Api', 'Mapping', 'Result', '▁getApi', 'Mapping', '(', 'Get', 'Api', 'Mapping', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Api', 'Mapping', '(', 'request', ');', '}']
['▁public', '▁HttpRequest', '(', 'String', '▁str', 'Url', ')', '▁{', 'super', '(', 'str', 'Url', ');', '}']
['▁public', '▁Mem', 'Func', 'Pt', 'g', '(', 'int', '▁sub', 'Expr', 'Len', ')', '▁{', 'field', '_1_', 'len', '_', 'ref', '_', 'sub', 'expression', '▁=', '▁sub', 'Expr', 'Len', ';}']
['▁public', '▁static', '▁Term', 'Stats', '[]', '▁getHigh', 'Freq', 'Terms', '(', 'Index', 'Reader', '▁reader', ',', '▁int', '▁num', 'Terms', ',', '▁String', '▁field', ',', '▁Comparator', '<', 'Term', 'Stats', '>', '▁comparator', ')', '▁throws', '▁Exception', '▁{', 'Term', 'Stats', 'Queue', '▁ti', 'q', '▁=', '▁null', ';', 'if', '▁(', 'field', '▁!=', '▁null', ')', '▁{', 'Terms', '▁terms', '▁=', '▁Multi', 'Terms', '.', 'get', 'Terms', '(', 'reader', ',', '▁field', ');', 'if', '▁(', 'terms', '▁==', '▁null', ')', '▁{', 'throw', '▁new', '▁Runtime', 'Exception', '("', 'field', '▁"', '▁+', '▁field', '▁+', '▁"', '▁not', '▁found', '");', '}', 'Terms', 'Enum', '▁terms', 'Enum', '▁=', '▁terms', '.', 'iterator', '();', 't', 'iq', '▁=', '▁new', '▁Term', 'Stats', 'Queue', '(', 'num', 'Terms', ',', '▁comparator', ');', 't', 'iq', '.', 'fill', '(', 'field', ',', '▁terms', 'Enum', ');', '}', '▁else', '▁{', 'Collection', '<', 'String', '>', '▁fields', '▁=', '▁Field', 'Infos', '.', 'get', 'Indexed', 'Fields', '(', 'reader', ');', 'if', '▁(', 'fields', '.', 'size', '()', '▁==', '▁0)', '▁{', 'throw', '▁new', '▁Runtime', 'Exception', '("', 'no', '▁fields', '▁found', '▁for', '▁this', '▁index', '");', '}', 't', 'iq', '▁=', '▁new', '▁Term', 'Stats', 'Queue', '(', 'num', 'Terms', ',', '▁comparator', ');', 'for', '▁(', 'String', '▁fieldName', '▁:', '▁fields', ')', '▁{', 'Terms', '▁terms', '▁=', '▁Multi', 'Terms', '.', 'get', 'Terms', '(', 'reader', ',', '▁fieldName', ');', 'if', '▁(', 'terms', '▁!=', '▁null', ')', '▁{', 't', 'iq', '.', 'fill', '(', 'fieldName', ',', '▁terms', '.', 'iterator', '());', '}}', '}', 'Term', 'Stats', '[]', '▁result', '▁=', '▁new', '▁Term', 'Stats', '[', 't', 'iq', '.', 'size', '()', '];', 'int', '▁count', '▁=', '▁ti', 'q', '.', 'size', '()', '▁-', '▁1;', 'while', '▁(', 't', 'iq', '.', 'size', '()', '▁!=', '▁0)', '▁{', 'result', '[', 'count', ']', '▁=', '▁ti', 'q', '.', 'pop', '();', 'count', '--', ';}', 'return', '▁result', ';}']
['▁public', '▁Delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', 'Result', '▁delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', '(', 'Delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Ap', 'ns', 'Vo', 'ip', 'Channel', '(', 'request', ');', '}']
['▁public', '▁List', 'Faces', 'Result', '▁list', 'Faces', '(', 'List', 'Faces', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Faces', '(', 'request', ');', '}']
['▁public', '▁Shape', 'Field', 'Cache', 'Distance', 'Value', 'Source', '(', 'Spatial', 'Context', '▁ctx', ',', 'Shape', 'Field', 'Cache', 'Provider', '<', 'Point', '>', '▁provider', ',', '▁Point', '▁from', ',', '▁double', '▁multiplier', ')', '▁{', 'this', '.', 'ctx', '▁=', '▁ctx', ';', 'this', '.', 'from', '▁=', '▁from', ';', 'this', '.', 'provider', '▁=', '▁provider', ';', 'this', '.', 'multiplier', '▁=', '▁multiplier', ';}']
['▁public', '▁char', '▁get', '(', 'int', '▁index', ')', '▁{', 'check', 'Index', '(', 'index', ');', 'return', '▁sequence', '.', 'charAt', '(', 'index', ');', '}']
['▁public', '▁Update', 'Configuration', 'Profile', 'Result', '▁update', 'Configuration', 'Profile', '(', 'Update', 'Configuration', 'Profile', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Configuration', 'Profile', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Lifecycle', 'Hook', 's', 'Result', '▁describe', 'Lifecycle', 'Hook', 's', '(', 'Des', 'cribe', 'Lifecycle', 'Hook', 's', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Lifecycle', 'Hook', 's', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Host', 'Reser', 'v', 'ations', 'Result', '▁describe', 'Host', 'Reser', 'v', 'ations', '(', 'Des', 'cribe', 'Host', 'Reser', 'v', 'ations', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Host', 'Reser', 'v', 'ations', '(', 'request', ');', '}']
['▁public', '▁static', '▁Pred', 'iction', 'Context', '▁from', 'Rule', 'Context', '(', 'AT', 'N', '▁at', 'n', ',', '▁Rule', 'Context', '▁outer', 'Context', ')', '▁{', 'if', '▁(', '▁outer', 'Context', '==', 'null', '▁)', '▁outer', 'Context', '▁=', '▁Rule', 'Context', '.', 'EMPTY', ';', 'if', '▁(', '▁outer', 'Context', '.', 'parent', '==', 'null', '▁||', '▁outer', 'Context', '==', 'Rule', 'Context', '.', 'EMPTY', '▁)', '▁{', 'return', '▁Pred', 'iction', 'Context', '.', 'EMPTY', ';}', 'Pred', 'iction', 'Context', '▁parent', '▁=', '▁EMPTY', ';', 'parent', '▁=', '▁Pred', 'iction', 'Context', '.', 'from', 'Rule', 'Context', '(', 'at', 'n', ',', '▁outer', 'Context', '.', 'parent', ');', 'AT', 'N', 'State', '▁state', '▁=', '▁at', 'n', '.', 'states', '.', 'get', '(', 'outer', 'Context', '.', 'invo', 'king', 'State', ');', 'Rule', 'Transition', '▁transition', '▁=', '▁(', 'Rule', 'Transition', ')', 'state', '.', 'transition', '(0);', 'return', '▁Singleton', 'Pred', 'iction', 'Context', '.', 'create', '(', 'parent', ',', '▁transition', '.', 'follow', 'State', '.', 'state', 'Number', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'S', 'X', 'V', 'DEX', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'gr', 'bit', '1', '▁=', '").', 'append', '(', 'Hex', 'Dump', '.', 'int', 'To', 'Hex', '(_', 'gr', 'bit', '1)', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'gr', 'bit', '2', '▁=', '").', 'append', '(', 'Hex', 'Dump', '.', 'byte', 'To', 'Hex', '(_', 'gr', 'bit', '2)', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'c', 'it', 'm', 'Show', '▁=', '").', 'append', '(', 'Hex', 'Dump', '.', 'byte', 'To', 'Hex', '(_', 'c', 'it', 'm', 'Show', ')).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'is', 'x', 'di', 'Sort', '▁=', '").', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(_', 'is', 'x', 'di', 'Sort', ')).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'is', 'x', 'di', 'Show', '▁=', '").', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(_', 'is', 'x', 'di', 'Show', ')).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'sub', 'total', 'Name', '▁=', '").', 'append', '(_', 'sub', 'total', 'Name', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'S', 'X', 'V', 'DEX', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁r', '▁=', '▁new', '▁StringBuilder', '();', 'r', '.', 'append', '("', 'Bl', 'ame', 'Result', ':', '▁");', '▁r', '.', 'append', '(', 'get', 'Result', 'Path', '());', 'return', '▁r', '.', 'toString', '();', '}']
['▁public', '▁List', 'Change', 'Sets', 'Result', '▁list', 'Change', 'Sets', '(', 'List', 'Change', 'Sets', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Change', 'Sets', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁is', 'Allow', 'Non', 'Fast', 'For', 'wards', '()', '▁{', 'return', '▁allow', 'Non', 'Fast', 'For', 'wards', ';}']
['▁public', '▁F', 'eat', 'Record', '()', '▁{', 'future', 'Header', '▁=', '▁new', '▁F', 'tr', 'Header', '();', 'future', 'Header', '.', 'set', 'Record', 'Type', '(', 'sid', ');', '}']
['▁public', '▁Short', 'Buffer', '▁put', '(', 'short', '▁c', ')', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁void', '▁setQuery', '(', 'CharSequence', '▁query', ')', '▁{', 'this', '.', 'query', '▁=', '▁query', ';', 'this', '.', 'message', '▁=', '▁new', '▁Message', 'Impl', '(', 'Query', 'Parser', 'Messages', '.', 'INVALID', '_', 'SY', 'NT', 'AX', '_', 'CAN', 'NOT', '_', 'PAR', 'SE', ',', '▁query', ',', '▁"");', '}']
['▁public', '▁St', 'ash', 'Apply', 'Command', '▁stash', 'Apply', '()', '▁{', 'return', '▁new', '▁St', 'ash', 'Apply', 'Command', '(', 'repo', ');', '}']
['▁public', '▁Set', '<', 'String', '>', '▁name', 'Set', '()', '▁{', 'return', '▁Collections', '.', 'un', 'modifiable', 'Set', '(', 'dictionary', '.', 'values', '());', '}']
['▁public', '▁static', '▁int', '▁getEffective', 'Port', '(', 'String', '▁scheme', ',', '▁int', '▁specified', 'Port', ')', '▁{', 'if', '▁(', 'specified', 'Port', '▁!=', '▁-1)', '▁{', 'return', '▁specified', 'Port', ';}', 'if', '▁("', 'http', '".', 'equalsIgnoreCase', '(', 'scheme', '))', '▁{', 'return', '▁80', ';}', '▁else', '▁if', '▁("', 'https', '".', 'equalsIgnoreCase', '(', 'scheme', '))', '▁{', 'return', '▁443', ';}', '▁else', '▁{', 'return', '▁-1;', '}}']
['▁public', '▁List', 'Assessment', 'Templates', 'Result', '▁list', 'Assessment', 'Templates', '(', 'List', 'Assessment', 'Templates', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Assessment', 'Templates', '(', 'request', ');', '}']
['▁public', '▁Cluster', '▁restore', 'From', 'Cluster', 'Snapshot', '(', 'Restore', 'From', 'Cluster', 'Snapshot', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Restore', 'From', 'Cluster', 'Snapshot', '(', 'request', ');', '}']
['▁public', '▁void', '▁add', 'Shape', '(', 'H', 'SSF', 'Shape', '▁shape', ')', '▁{', 'shape', '.', 'set', 'Pat', 'ri', 'arch', '(', 'this', '.', 'get', 'Pat', 'ri', 'arch', '());', 'shape', '.', 'set', 'Parent', '(', 'this', ');', 'shapes', '.', 'add', '(', 'shape', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁o', ')', '▁{', 'if', '▁(', 'this', '▁==', '▁o', ')', '▁return', '▁true', ';', 'if', '▁(', 'o', '▁==', '▁null', '▁||', '▁getClass', '()', '▁!=', '▁o', '.', 'getClass', '())', '▁return', '▁false', ';', 'Facet', 'Entry', '▁that', '▁=', '▁(', 'Facet', 'Entry', ')', '▁o', ';', 'if', '▁(', 'count', '▁!=', '▁that', '.', 'count', ')', '▁return', '▁false', ';', 'if', '▁(!', 'value', '.', 'equals', '(', 'that', '.', 'value', '))', '▁return', '▁false', ';', 'return', '▁true', ';}']
['▁public', '▁static', '▁final', '▁int', '▁prev', '(', 'byte', '[]', '▁b', ',', '▁int', '▁ptr', ',', '▁char', '▁chr', 'A', ')', '▁{', 'if', '▁(', 'ptr', '▁==', '▁b', '.', 'length', ')', '--', 'ptr', ';', 'while', '▁(', 'ptr', '▁>=', '▁0)', '▁{', 'if', '▁(', 'b', '[', 'ptr', '--', ']', '▁==', '▁chr', 'A', ')', 'return', '▁ptr', ';}', 'return', '▁ptr', ';}']
['▁public', '▁final', '▁boolean', '▁is', 'Delta', 'Representation', '()', '▁{', 'return', '▁delta', 'Base', '▁!=', '▁null', ';}']
['▁public', '▁Token', '▁emit', 'EOF', '()', '▁{', 'int', '▁c', 'pos', '▁=', '▁getChar', 'Position', 'In', 'Line', '();', 'int', '▁line', '▁=', '▁getLine', '();', 'Token', '▁eof', '▁=', '▁_', 'factory', '.', 'create', '(_', 'token', 'Factory', 'Source', 'Pair', ',', '▁Token', '.', 'EOF', ',', '▁null', ',', '▁Token', '.', 'DEFAULT', '_', 'CHANNEL', ',', '▁_', 'input', '.', 'index', '(),', '▁_', 'input', '.', 'index', '()', '-1,', 'line', ',', '▁c', 'pos', ');', 'emit', '(', 'eof', ');', 'return', '▁eof', ';}']
['▁public', '▁Update', 'User', 'Request', '(', 'String', '▁userName', ')', '▁{', 'set', 'UserName', '(', 'userName', ');', '}']
['▁public', '▁Rev', 'Filter', '▁negate', '()', '▁{', 'return', '▁Not', 'Rev', 'Filter', '.', 'create', '(', 'this', ');', '}']
['▁public', '▁void', '▁setTag', 'ger', '(', 'Person', 'Ident', '▁tag', 'ger', 'Ident', ')', '▁{', 'tag', 'ger', '▁=', '▁tag', 'ger', 'Ident', ';}']
['▁public', '▁static', '▁Buffer', 'Size', '▁automatic', '()', '▁{', 'Runtime', '▁rt', '▁=', '▁Runtime', '.', 'getRuntime', '();', 'final', '▁long', '▁max', '▁=', '▁rt', '.', 'max', 'Memory', '();', '▁final', '▁long', '▁total', '▁=', '▁rt', '.', 'total', 'Memory', '();', '▁final', '▁long', '▁free', '▁=', '▁rt', '.', 'free', 'Memory', '();', '▁final', '▁long', '▁total', 'Available', 'Bytes', '▁=', '▁max', '▁-', '▁total', '▁+', '▁free', ';', 'long', '▁sort', 'Buffer', 'Byte', 'Size', '▁=', '▁free', '/2', ';', 'final', '▁long', '▁min', 'BufferSize', 'Bytes', '▁=', '▁MIN', '_', 'BUFFER', '_', 'SIZE', '_', 'MB', '*', 'MB', ';', 'if', '▁(', 'sort', 'Buffer', 'Byte', 'Size', '▁<', '▁min', 'BufferSize', 'Bytes', '||', '▁total', 'Available', 'Bytes', '▁>', '▁10', '▁*', '▁min', 'BufferSize', 'Bytes', ')', '▁{', '▁if', '▁(', 'total', 'Available', 'Bytes', '/2', '▁>', '▁min', 'BufferSize', 'Bytes', ')', '▁{', '▁sort', 'Buffer', 'Byte', 'Size', '▁=', '▁total', 'Available', 'Bytes', '/2', ';', '▁}', '▁else', '▁{', 'sort', 'Buffer', 'Byte', 'Size', '▁=', '▁Math', '.', 'max', '(', 'AB', 'SOL', 'UTE', '_', 'MIN', '_', 'S', 'ORT', '_', 'BUFFER', '_', 'SIZE', ',', '▁sort', 'Buffer', 'Byte', 'Size', ');', '}}', 'return', '▁new', '▁Buffer', 'Size', '(', 'Math', '.', 'min', '((', 'long', ')', 'Integer', '.', 'MAX', '_', 'VALUE', ',', '▁sort', 'Buffer', 'Byte', 'Size', '));', '}']
['▁public', '▁static', '▁int', '▁trim', 'Trailing', 'Whitespace', '(', 'byte', '[]', '▁raw', ',', '▁int', '▁start', ',', '▁int', '▁end', ')', '▁{', 'int', '▁ptr', '▁=', '▁end', '▁-', '▁1;', 'while', '▁(', 'start', '▁<=', '▁ptr', '▁&&', '▁is', 'Whitespace', '(', 'raw', '[', 'ptr', ']))', 'ptr', '--;', 'return', '▁ptr', '▁+', '▁1;', '}']
['▁public', '▁Top', 'Margin', 'Record', '(', '▁Record', 'InputStream', '▁in', '▁)', '▁{', 'field', '_1_', 'margin', '▁=', '▁in', '.', 'read', 'Double', '();', '}']
['▁public', '▁Retrieve', 'Environment', 'Info', 'Request', '(', 'Environment', 'Info', 'Type', '▁info', 'Type', ')', '▁{', 'set', 'Info', 'Type', '(', 'info', 'Type', '.', 'toString', '());', '}']
['▁public', '▁Create', 'Player', 'Sessions', 'Result', '▁create', 'Player', 'Sessions', '(', 'Create', 'Player', 'Sessions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Player', 'Sessions', '(', 'request', ');', '}']
['▁public', '▁Create', 'Proxy', 'Session', 'Result', '▁create', 'Proxy', 'Session', '(', 'Create', 'Proxy', 'Session', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Proxy', 'Session', '(', 'request', ');', '}']
['▁public', '▁int', '▁getObject', 'Type', '()', '▁{', 'return', '▁type', ';}']
['▁public', '▁String', '▁getScheme', '()', '▁{', 'return', '▁scheme', ';}']
['▁public', '▁void', '▁characters', '(', 'char', '[]', '▁ch', ',', '▁int', '▁start', ',', '▁int', '▁length', ')', '▁{', 'contents', '.', 'append', '(', 'ch', ',', '▁start', ',', '▁length', ');', '}']
['▁public', '▁Fetch', 'Album', 'Tag', 'Photos', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Fetch', 'Album', 'Tag', 'Photos', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁Delete', 'Members', 'Result', '▁delete', 'Members', '(', 'Delete', 'Members', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Members', '(', 'request', ');', '}']
['▁public', '▁Get', 'Contact', 'Re', 'ach', 'ability', 'Status', 'Result', '▁get', 'Contact', 'Re', 'ach', 'ability', 'Status', '(', 'Get', 'Contact', 'Re', 'ach', 'ability', 'Status', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Contact', 'Re', 'ach', 'ability', 'Status', '(', 'request', ');', '}']
['▁@', 'Override', '▁public', '▁boolean', '▁remove', '(', 'Object', '▁o', ')', '▁{', 'return', '▁Im', 'pl', '.', 'this', '.', 'remove', '(', 'o', ')', '▁!=', '▁null', ';}']
['▁public', '▁E', '▁last', '()', '▁{', 'return', '▁backing', 'Map', '.', 'last', 'Key', '();', '}']
['▁public', '▁Create', 'Streaming', 'Distribution', 'Result', '▁create', 'Streaming', 'Distribution', '(', 'Create', 'Streaming', 'Distribution', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Streaming', 'Distribution', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁is', 'Absolute', '()', '▁{', 'return', '▁absolute', ';}']
['▁public', '▁Disable', 'Add', 'On', 'Result', '▁disable', 'Add', 'On', '(', 'Disable', 'Add', 'On', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Disable', 'Add', 'On', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Alias', 'Result', '▁describe', 'Alias', '(', 'Des', 'cribe', 'Alias', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Alias', '(', 'request', ');', '}']
['▁public', '▁void', '▁next', '(', 'int', '▁delta', ')', '▁{', 'while', '▁(', '--', 'delta', '▁>=', '▁0)', '▁{', 'if', '▁(', 'current', 'Sub', 'tree', '▁!=', '▁null', ')', 'ptr', '▁+=', '▁current', 'Sub', 'tree', '.', 'get', 'Entry', 'Span', '();', 'else', 'ptr', '++;', 'if', '▁(', 'eof', '())', 'break', ';', 'parse', 'Entry', '();', '}}']
['▁public', '▁Rev', 'Filter', '▁clone', '()', '▁{', 'return', '▁new', '▁Binary', '(', 'a', '.', 'clone', '(),', '▁b', '.', 'clone', '());', '}']
['▁public', '▁Reader', '▁create', '(', 'Reader', '▁input', ')', '▁{', 'return', '▁new', '▁P', 'ers', 'ian', 'Char', 'Filter', '(', 'input', ');', '}']
['▁public', '▁String', '▁option', '()', '▁{', 'return', '▁option', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'final', '▁StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '("[', '");', 'for', '▁(', 'Object', '▁item', '▁:', '▁this', ')', '▁{', 'if', '▁(', 'sb', '.', 'length', '()', '>', '1)', '▁sb', '.', 'append', '(",', '▁");', 'if', '▁(', 'item', '▁instanceof', '▁char', '[])', '▁{', 'sb', '.', 'append', '((', 'char', '[])', '▁item', ');', '}', '▁else', '▁{', 'sb', '.', 'append', '(', 'item', ');', '}}', 'return', '▁sb', '.', 'append', "('", "]').", 'toString', '();', '}']
['▁public', '▁Describe', 'Signal', 'ing', 'Channel', 'Result', '▁describe', 'Signal', 'ing', 'Channel', '(', 'Des', 'cribe', 'Signal', 'ing', 'Channel', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Signal', 'ing', 'Channel', '(', 'request', ');', '}']
['▁public', '▁Attach', 'Static', 'Ip', 'Result', '▁attach', 'Static', 'Ip', '(', 'Attach', 'Static', 'Ip', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Attach', 'Static', 'Ip', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '(', '64', ');', 'Cell', 'Reference', '▁cr', 'A', '▁=', '▁new', '▁Cell', 'Reference', '(_', 'first', 'Row', 'Index', ',', '▁_', 'first', 'ColumnIndex', ',', '▁false', ',', '▁false', ');', 'Cell', 'Reference', '▁cr', 'B', '▁=', '▁new', '▁Cell', 'Reference', '(_', 'last', 'Row', 'Index', ',', '▁_', 'last', 'ColumnIndex', ',', '▁false', ',', '▁false', ');', 'sb', '.', 'append', '(', 'getClass', '().', 'getName', '());', 'sb', '.', 'append', '("', '▁[', '").', 'append', '(', 'cr', 'A', '.', 'format', 'AsString', '()).', 'append', "(':", "').", 'append', '(', 'cr', 'B', '.', 'format', 'AsString', '()).', 'append', '("', ']', '");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁B', 'loomFilter', 'ing', 'Post', 'ings', 'Format', '(', 'Post', 'ings', 'Format', '▁delegate', 'Post', 'ings', 'Format', ',', 'B', 'loom', 'FilterFactory', '▁b', 'loom', 'FilterFactory', ')', '▁{', 'super', '(', 'B', 'LO', 'OM', '_', 'CODE', 'C', '_', 'NAME', ');', 'this', '.', 'delegate', 'Post', 'ings', 'Format', '▁=', '▁delegate', 'Post', 'ings', 'Format', ';', 'this', '.', 'b', 'loom', 'FilterFactory', '▁=', '▁b', 'loom', 'FilterFactory', ';}']
['▁public', '▁List', 'Templates', 'Result', '▁list', 'Templates', '(', 'List', 'Templates', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Templates', '(', 'request', ');', '}']
['▁public', '▁Timer', 'Thread', '(', 'long', '▁resolution', ',', '▁Counter', '▁counter', ')', '▁{', 'super', '(', 'THREAD', '_', 'NAME', ');', 'this', '.', 'resolution', '▁=', '▁resolution', ';', 'this', '.', 'counter', '▁=', '▁counter', ';', 'this', '.', 'set', 'Daemon', '(', 'true', ');', '}']
['▁public', '▁Drawing', 'Record', '()', '▁{', 'record', 'Data', '▁=', '▁EMPTY', '_', 'BYTE', '_', 'ARRAY', ';}']
['▁public', '▁List', 'Directories', 'Result', '▁list', 'Directories', '(', 'List', 'Directories', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Directories', '(', 'request', ');', '}']
['▁public', '▁void', '▁decode', '(', 'byte', '[]', '▁blocks', ',', '▁int', '▁blocks', 'Offset', ',', '▁int', '[]', '▁values', ',', '▁int', '▁values', 'Offset', ',', '▁int', '▁iterations', ')', '▁{', 'for', '▁(', 'int', '▁j', '▁=', '▁0;', '▁j', '▁<', '▁iterations', ';', '▁++', 'j', ')', '▁{', 'final', '▁byte', '▁block', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', '];', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁7)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁6)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁5)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁4)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁3)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁2)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'block', '▁>>>', '▁1)', '▁&', '▁1;', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁block', '▁&', '▁1;', '}}']
['▁public', '▁Group', 'ing', 'Search', '▁disable', 'Caching', '()', '▁{', 'this', '.', 'max', 'Cache', 'RAM', 'MB', '▁=', '▁null', ';', 'this', '.', 'max', 'Docs', 'To', 'Cache', '▁=', '▁null', ';', 'return', '▁this', ';}']
['▁public', '▁static', '▁int', '▁ideal', 'ByteArray', 'Size', '(', 'int', '▁need', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁4;', '▁i', '▁<', '▁32', ';', '▁i', '++)', 'if', '▁(', 'need', '▁<=', '▁(1', '▁<<', '▁i', ')', '▁-', '▁12', ')', 'return', '▁(1', '▁<<', '▁i', ')', '▁-', '▁12', ';', 'return', '▁need', ';}']
['▁public', '▁Update', 'Assessment', 'Target', 'Result', '▁update', 'Assessment', 'Target', '(', 'Update', 'Assessment', 'Target', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Assessment', 'Target', '(', 'request', ');', '}']
['▁public', '▁Modify', 'Volume', 'Result', '▁modify', 'Volume', '(', 'Modify', 'Volume', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Modify', 'Volume', '(', 'request', ');', '}']
['▁public', '▁Cell', '▁merge', '(', 'Cell', '▁m', ',', '▁Cell', '▁e', ')', '▁{', 'if', '▁(', 'm', '.', 'cmd', '▁==', '▁e', '.', 'cmd', '▁&&', '▁m', '.', 'ref', '▁==', '▁e', '.', 'ref', '▁&&', '▁m', '.', 'skip', '▁==', '▁e', '.', 'skip', ')', '▁{', 'Cell', '▁c', '▁=', '▁new', '▁Cell', '(', 'm', ');', 'c', '.', 'cnt', '▁+=', '▁e', '.', 'cnt', ';', 'return', '▁c', ';}', '▁else', '▁{', 'return', '▁null', ';', '}}']
['▁public', '▁ByteBuffer', '▁read', '(', 'int', '▁length', ',', '▁long', '▁position', ')', '▁throws', '▁IOException', '▁{', 'if', '(', 'position', '▁>=', '▁size', '())', '▁{', 'throw', '▁new', '▁Index', 'OutOfBounds', 'Exception', '("', 'Position', '▁"', '▁+', '▁position', '▁+', '▁"', '▁past', '▁the', '▁end', '▁of', '▁the', '▁file', '");', '}', 'ByteBuffer', '▁dst', ';', 'if', '▁(', 'writable', ')', '▁{', 'dst', '▁=', '▁channel', '.', 'map', '(', 'File', 'Channel', '.', 'Map', 'Mode', '.', 'READ', '_', 'WRITE', ',', '▁position', ',', '▁length', ');', 'buffers', 'To', 'Clean', '.', 'add', '(', 'dst', ');', '}', '▁else', '▁{', 'channel', '.', 'position', '(', 'position', ');', 'dst', '▁=', '▁ByteBuffer', '.', 'allocate', '(', 'length', ');', 'int', '▁worked', '▁=', '▁IOUtils', '.', 'read', 'Fully', '(', 'channel', ',', '▁dst', ');', 'if', '(', 'work', 'ed', '▁==', '▁-1)', '▁{', 'throw', '▁new', '▁Index', 'OutOfBounds', 'Exception', '("', 'Position', '▁"', '▁+', '▁position', '▁+', '▁"', '▁past', '▁the', '▁end', '▁of', '▁the', '▁file', '");', '}}', 'dst', '.', 'position', '(0);', 'return', '▁dst', ';}']
['▁public', '▁void', '▁respond', 'Activity', 'Task', 'Completed', '(', 'Res', 'pond', 'Activity', 'Task', 'Completed', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'execute', 'Res', 'pond', 'Activity', 'Task', 'Completed', '(', 'request', ');', '}']
['▁public', '▁synchronized', '▁final', '▁void', '▁increment', 'Progress', 'By', '(', 'int', '▁diff', ')', '▁{', 'set', 'Progress', '(', 'm', 'Progress', '▁+', '▁diff', ');', '}']
['▁public', '▁Metadata', 'Diff', '▁compare', 'Metadata', '(', 'Dir', 'CacheEntry', '▁entry', ')', '▁{', 'if', '▁(', 'entry', '.', 'is', 'Ass', 'ume', 'Valid', '())', 'return', '▁Metadata', 'Diff', '.', 'EQUAL', ';', 'if', '▁(', 'entry', '.', 'is', 'Update', 'Needed', '())', 'return', '▁Metadata', 'Diff', '.', 'DI', 'FFER', '_', 'BY', '_', 'METADATA', ';', 'if', '▁(', 'is', 'Mode', 'Different', '(', 'entry', '.', 'get', 'Raw', 'Mode', '()))', 'return', '▁Metadata', 'Diff', '.', 'DI', 'FFER', '_', 'BY', '_', 'METADATA', ';', 'int', '▁type', '▁=', '▁mode', '▁&', '▁File', 'Mode', '.', 'TYPE', '_', 'MASK', ';', 'if', '▁(', 'type', '▁==', '▁File', 'Mode', '.', 'TYPE', '_', 'TREE', '▁||', '▁type', '▁==', '▁File', 'Mode', '.', 'TYPE', '_', 'G', 'IT', 'LINK', ')', 'return', '▁Metadata', 'Diff', '.', 'EQUAL', ';', 'if', '▁(!', 'entry', '.', 'is', 'Sm', 'ud', 'ged', '()', '▁&&', '▁entry', '.', 'get', 'Length', '()', '▁!=', '▁(', 'int', ')', '▁getEntry', 'Length', '())', 'return', '▁Metadata', 'Diff', '.', 'DI', 'FFER', '_', 'BY', '_', 'METADATA', ';', 'Instant', '▁cache', 'Last', 'Modified', '▁=', '▁entry', '.', 'get', 'Last', 'Modified', 'Instant', '();', 'Instant', '▁file', 'Last', 'Modified', '▁=', '▁getEntry', 'Last', 'Modified', 'Instant', '();', 'if', '▁(', 'timestamp', 'Comparator', '.', 'compare', '(', 'cache', 'Last', 'Modified', ',', '▁file', 'Last', 'Modified', ',', 'get', 'Options', '().', 'get', 'Check', 'Stat', '()', '▁==', '▁Check', 'Stat', '.', 'MIN', 'IMAL', ')', '▁!=', '▁0)', '▁{', 'return', '▁Metadata', 'Diff', '.', 'DI', 'FFER', '_', 'BY', '_', 'TIMESTAMP', ';}', 'if', '▁(', 'entry', '.', 'is', 'Sm', 'ud', 'ged', '())', '▁{', 'return', '▁Metadata', 'Diff', '.', 'SM', 'UD', 'G', 'ED', ';}', 'return', '▁Metadata', 'Diff', '.', 'EQUAL', ';}']
['▁public', '▁static', '▁Number', 'Record', '▁convertTo', 'Number', 'Record', '(', 'R', 'K', 'Record', '▁r', 'k', ')', '▁{', 'Number', 'Record', '▁num', '▁=', '▁new', '▁Number', 'Record', '();', 'num', '.', 'set', 'Column', '(', 'r', 'k', '.', 'get', 'Column', '());', 'num', '.', 'set', 'Row', '(', 'r', 'k', '.', 'get', 'Row', '());', 'num', '.', 'set', 'XF', 'Index', '(', 'r', 'k', '.', 'get', 'XF', 'Index', '());', 'num', '.', 'setValue', '(', 'r', 'k', '.', 'get', 'R', 'K', 'Number', '());', 'return', '▁num', ';}']
['▁public', '▁CharBuffer', '▁put', '(', 'char', '[]', '▁src', ',', '▁int', '▁src', 'Offset', ',', '▁int', '▁char', 'Count', ')', '▁{', 'byte', 'Buffer', '.', 'limit', '(', 'limit', '▁*', '▁Size', 'Of', '.', 'CHAR', ');', 'byte', 'Buffer', '.', 'position', '(', 'position', '▁*', '▁Size', 'Of', '.', 'CHAR', ');', 'if', '▁(', 'byte', 'Buffer', '▁instanceof', '▁Read', 'Write', 'Direct', 'ByteBuffer', ')', '▁{', '((', 'Read', 'Write', 'Direct', 'ByteBuffer', ')', '▁byteBuffer', ').', 'put', '(', 'src', ',', '▁src', 'Offset', ',', '▁char', 'Count', ');', '}', '▁else', '▁{', '((', 'Read', 'Write', 'Heap', 'ByteBuffer', ')', '▁byteBuffer', ').', 'put', '(', 'src', ',', '▁src', 'Offset', ',', '▁char', 'Count', ');', '}', 'this', '.', 'position', '▁+=', '▁char', 'Count', ';', 'return', '▁this', ';}']
['▁public', '▁int', '▁getCell', 's', '()', '▁{', 'Iterator', '<', 'Character', '>', '▁i', '▁=', '▁cells', '.', 'key', 'Set', '().', 'iterator', '();', 'int', '▁size', '▁=', '▁0;', 'for', '▁(', ';', '▁i', '.', 'hasNext', '();', ')', '▁{', 'Character', '▁c', '▁=', '▁i', '.', 'next', '();', 'Cell', '▁e', '▁=', '▁at', '(', 'c', ');', 'if', '▁(', 'e', '.', 'cmd', '▁>=', '▁0', '▁||', '▁e', '.', 'ref', '▁>=', '▁0)', '▁{', 'size', '++;', '}}', 'return', '▁size', ';}']
['▁public', '▁Be', 'ider', 'M', 'orse', 'FilterFactory', '(', 'Map', '<', 'String', ',', 'String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'Name', 'Type', '▁name', 'Type', '▁=', '▁Name', 'Type', '.', 'valueOf', '(', 'get', '(', 'args', ',', '▁"', 'name', 'Type', '",', '▁Name', 'Type', '.', 'GE', 'NERIC', '.', 'toString', '()));', 'Rule', 'Type', '▁rule', 'Type', '▁=', '▁Rule', 'Type', '.', 'valueOf', '(', 'get', '(', 'args', ',', '▁"', 'rule', 'Type', '",', '▁Rule', 'Type', '.', 'AP', 'PRO', 'X', '.', 'toString', '()));', 'boolean', '▁concat', '▁=', '▁getBoolean', '(', 'args', ',', '▁"', 'concat', '",', '▁true', ');', 'engine', '▁=', '▁new', '▁Ph', 'on', 'etic', 'Engine', '(', 'name', 'Type', ',', '▁rule', 'Type', ',', '▁concat', ');', 'Set', '<', 'String', '>', '▁lang', 's', '▁=', '▁getSet', '(', 'args', ',', '▁"', 'language', 'Set', '");', 'language', 'Set', '▁=', '▁(', 'null', '▁==', '▁lang', 's', '▁||', '▁(1', '▁==', '▁lang', 's', '.', 'size', '()', '▁&&', '▁lang', 's', '.', 'contains', '("', 'auto', '")))', '▁?', '▁null', '▁:', '▁Language', 'Set', '.', 'from', '(', 'lang', 's', ');', 'if', '▁(!', 'args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁static', '▁double', '▁var', 'p', '(', 'double', '[]', '▁v', ')', '▁{', 'double', '▁r', '▁=', '▁Double', '.', 'NaN', ';', 'if', '▁(', 'v', '!=', 'null', '▁&&', '▁v', '.', 'length', '▁>', '▁1)', '▁{', 'r', '▁=', '▁dev', 'sq', '(', 'v', ')', '▁/', 'v', '.', 'length', ';}', 'return', '▁r', ';}']
['▁public', '▁P', 'ers', 'ian', 'Normal', 'ization', 'FilterFactory', '(', 'Map', '<', 'String', ',', 'String', '>', '▁args', ')', '▁{', 'super', '(', 'args', ');', 'if', '▁(!', 'args', '.', 'isEmpty', '())', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Unknown', '▁parameters', ':', '▁"', '▁+', '▁args', ');', '}}']
['▁public', '▁static', '▁Weight', 'ed', 'Term', '[]', '▁get', 'Terms', '(', 'Query', '▁query', ',', '▁boolean', '▁pro', 'hib', 'ited', ',', '▁String', '▁fieldName', ')', '▁{', 'HashSet', '<', 'Weight', 'ed', 'Term', '>', '▁terms', '▁=', '▁new', '▁HashSet', '<>();', 'Predicate', '<', 'String', '>', '▁field', 'Selector', '▁=', '▁fieldName', '▁==', '▁null', '▁?', '▁f', '▁->', '▁true', '▁:', '▁fieldName', '::', 'equals', ';', 'query', '.', 'visit', '(', 'new', '▁Boost', 'ed', 'Term', 'Extractor', '(1,', '▁terms', ',', '▁pro', 'hib', 'ited', ',', '▁field', 'Selector', '));', 'return', '▁terms', '.', 'toArray', '(', 'new', '▁Weight', 'ed', 'Term', '[0]);', '}']
['▁public', '▁Delete', 'Documentation', 'Part', 'Result', '▁delete', 'Documentation', 'Part', '(', 'Delete', 'Documentation', 'Part', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Documentation', 'Part', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'sb', '.', 'append', '("[', 'CH', 'ART', ']\\', 'n', '");', 'sb', '.', 'append', '("', '▁.', 'x', '▁=', '▁"', ').', 'append', '(', 'getX', '()).', 'append', "('\\", 'n', "');", 'sb', '.', 'append', '("', '▁.', 'y', '▁=', '▁"', ').', 'append', '(', 'getY', '()).', 'append', "('\\", 'n', "');", 'sb', '.', 'append', '("', '▁.', 'width', '▁=', '▁"', ').', 'append', '(', 'getWidth', '()).', 'append', "('\\", 'n', "');", 'sb', '.', 'append', '("', '▁.', 'height', '=', '▁"', ').', 'append', '(', 'getHeight', '()).', 'append', "('\\", 'n', "');", 'sb', '.', 'append', '("[', '/', 'CH', 'ART', ']\\', 'n', '");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁final', '▁short', '▁get', '(', 'int', '▁index', ')', '▁{', 'check', 'Index', '(', 'index', ');', 'return', '▁backing', 'Array', '[', 'offset', '▁+', '▁index', '];', '}']
['▁public', '▁String', '▁toString', '(){', 'return', '▁image', ';}']
['▁public', '▁Value', 'Eval', '▁evaluate', '(', 'int', '▁src', 'Row', 'Index', ',', '▁int', '▁src', 'ColumnIndex', ',', '▁Value', 'Eval', '▁arg', '0,', '▁Value', 'Eval', '▁arg', '1)', '▁{', 'try', '▁{', 'Area', 'Eval', '▁re', 'A', '▁=', '▁evaluate', 'Ref', '(', 'arg', '0);', 'Area', 'Eval', '▁re', 'B', '▁=', '▁evaluate', 'Ref', '(', 'arg', '1);', 'Area', 'Eval', '▁result', '▁=', '▁resolve', 'Range', '(', 're', 'A', ',', '▁re', 'B', ');', 'if', '▁(', 'result', '▁==', '▁null', ')', '▁{', 'return', '▁Error', 'Eval', '.', 'NULL', '_', 'INTER', 'SECTION', ';}', 'return', '▁result', ';}', '▁catch', '▁(', 'Evaluation', 'Exception', '▁e', ')', '▁{', 'return', '▁e', '.', 'get', 'Error', 'Eval', '();', '}}']
['▁public', '▁void', '▁clear', '()', '▁{', 'weight', 'By', 'Span', 'Query', '.', 'clear', '();', '}']
['▁public', '▁int', '▁find', 'EndOffset', '(', 'StringBuilder', '▁buffer', ',', '▁int', '▁start', ')', '▁{', 'if', '(', '▁start', '▁>', '▁buffer', '.', 'length', '()', '▁||', '▁start', '▁<', '▁0', '▁)', '▁return', '▁start', ';', 'bi', '.', 'setText', '(', 'buffer', '.', 'substring', '(', 'start', '));', 'return', '▁bi', '.', 'next', '()', '▁+', '▁start', ';}']
['▁final', '▁public', '▁S', 'r', 'nd', 'Query', '▁Primary', 'Query', '()', '▁throws', '▁ParseException', '▁{', 'S', 'r', 'nd', 'Query', '▁q', ';', 'switch', '▁((', 'j', 'j', '_', 'ntk', '==', '-1', ')?', 'j', 'j', '_', 'ntk', '():', 'j', 'j', '_', 'ntk', ')', '▁{', 'case', '▁L', 'PAREN', ':', 'j', 'j', '_', 'consume', '_', 'token', '(', 'L', 'PAREN', ');', 'q', '▁=', '▁Fields', 'Query', '();', 'j', 'j', '_', 'consume', '_', 'token', '(', 'R', 'PAREN', ');', 'break', ';', 'case', '▁OR', ':', 'case', '▁AND', ':', 'case', '▁W', ':', 'case', '▁N', ':', 'q', '▁=', '▁Prefix', 'Operator', 'Query', '();', 'break', ';', 'case', '▁TR', 'UNC', 'QU', 'O', 'TED', ':', 'case', '▁QU', 'O', 'TED', ':', 'case', '▁SU', 'FFIX', 'TERM', ':', 'case', '▁TR', 'UN', 'CT', 'ER', 'M', ':', 'case', '▁TER', 'M', ':', 'q', '▁=', '▁Simple', 'Term', '();', 'break', ';', 'default', ':', 'j', 'j', '_', 'la', '1[', '5]', '▁=', '▁jj', '_', 'gen', ';', 'j', 'j', '_', 'consume', '_', 'token', '(-1', ');', 'throw', '▁new', '▁ParseException', '();', '}', 'Optional', 'Weights', '(', 'q', ');', '{', 'if', '▁(', 'true', ')', '▁return', '▁q', ';}', 'throw', '▁new', '▁Error', '("', 'Missing', '▁return', '▁statement', '▁in', '▁function', '");', '}']
['▁public', '▁Delete', 'Api', 'Key', 'Result', '▁delete', 'Api', 'Key', '(', 'Delete', 'Api', 'Key', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Api', 'Key', '(', 'request', ');', '}']
['▁public', '▁Insert', 'Tags', 'Request', '()', '▁{', 'super', '("', 'O', 'ts', '",', '▁"2016', '-06', '-20', '",', '▁"', 'Insert', 'Tags', '",', '▁"', 'ots', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁Delete', 'User', 'By', 'Principal', 'Id', 'Result', '▁delete', 'User', 'By', 'Principal', 'Id', '(', 'Delete', 'User', 'By', 'Principal', 'Id', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'User', 'By', 'Principal', 'Id', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Network', 'Interfaces', 'Result', '▁describe', 'Network', 'Interfaces', '(', 'Des', 'cribe', 'Network', 'Interfaces', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Network', 'Interfaces', '(', 'request', ');', '}']
['▁public', '▁int', '▁serialize', '(', '▁int', '▁offset', ',', '▁byte', '[]', '▁data', ',', '▁E', 'sch', 'er', 'Serialization', 'Listener', '▁listener', '▁){', 'listener', '.', 'before', 'Record', 'Serialize', '(', '▁offset', ',', '▁getRecord', 'Id', '(),', '▁this', '▁);', 'L', 'ittle', 'Endian', '.', 'put', 'Short', '(', '▁data', ',', '▁offset', ',', '▁getOptions', '()', '▁);', 'L', 'ittle', 'Endian', '.', 'put', 'Short', '(', '▁data', ',', '▁offset', '▁+', '▁2,', '▁getRecord', 'Id', '()', '▁);', 'L', 'ittle', 'Endian', '.', 'put', 'Int', '(', '▁data', ',', '▁offset', '▁+', '▁4,', '▁8', '▁);', 'L', 'ittle', 'Endian', '.', 'put', 'Int', '(', '▁data', ',', '▁offset', '▁+', '▁8,', '▁field', '_1_', 'num', 'Shapes', '▁);', 'L', 'ittle', 'Endian', '.', 'put', 'Int', '(', '▁data', ',', '▁offset', '▁+', '▁12,', '▁field', '_2_', 'last', 'MS', 'OS', 'PID', '▁);', 'listener', '.', 'after', 'Record', 'Serialize', '(', '▁offset', '▁+', '▁16,', '▁getRecord', 'Id', '(),', '▁getRecord', 'Size', '(),', '▁this', '▁);', 'return', '▁getRecord', 'Size', '();', '}']
['▁public', '▁Create', 'Security', 'Configuration', 'Result', '▁create', 'Security', 'Configuration', '(', 'Create', 'Security', 'Configuration', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Security', 'Configuration', '(', 'request', ');', '}']
['▁public', '▁Describe', 'Client', 'V', 'pn', 'Connections', 'Result', '▁describe', 'Client', 'V', 'pn', 'Connections', '(', 'Des', 'cribe', 'Client', 'V', 'pn', 'Connections', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Client', 'V', 'pn', 'Connections', '(', 'request', ');', '}']
['▁public', '▁static', '▁void', '▁fill', '(', 'double', '[]', '▁array', ',', '▁double', '▁value', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁array', '.', 'length', ';', '▁i', '++)', '▁{', 'array', '[', 'i', ']', '▁=', '▁value', ';', '}}']
['▁public', '▁boolean', '▁hasNext', '()', '▁{', 'return', '▁next', 'Id', '▁<', '▁cells', '.', 'length', ';}']
['▁public', '▁Post', 'ings', 'Enum', '▁reset', '(', 'int', '[]', '▁post', 'ings', ')', '▁{', 'this', '.', 'post', 'ings', '▁=', '▁post', 'ings', ';', 'upt', 'o', '▁=', '▁-', '2;', 'freq', '▁=', '▁0;', 'return', '▁this', ';}']
['▁public', '▁final', '▁boolean', '▁has', 'All', '(', 'Rev', 'Flag', 'Set', '▁set', ')', '▁{', 'return', '▁(', 'flags', '▁&', '▁set', '.', 'mask', ')', '▁==', '▁set', '.', 'mask', ';}']
['▁public', '▁Modify', 'Account', 'Result', '▁modify', 'Account', '(', 'Modify', 'Account', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Modify', 'Account', '(', 'request', ');', '}']
['▁public', '▁Token', '▁LT', '(', 'int', '▁k', ')', '▁{', 'lazy', 'Init', '();', 'if', '▁(', '▁k', '==0', '▁)', '▁return', '▁null', ';', 'if', '▁(', '▁k', '▁<', '▁0', '▁)', '▁return', '▁L', 'B', '(-', 'k', ');', 'int', '▁i', '▁=', '▁p', '▁+', '▁k', '▁-', '▁1;', 'sync', '(', 'i', ');', 'if', '▁(', '▁i', '▁>=', '▁tokens', '.', 'size', '()', '▁)', '▁{', '▁return', '▁tokens', '.', 'get', '(', 'tokens', '.', 'size', '()', '-1', ');', '}', 'return', '▁tokens', '.', 'get', '(', 'i', ');', '}']
['▁public', '▁void', '▁remove', 'Sheet', '(', 'int', '▁sheet', 'Index', ')', '▁{', 'if', '▁(', 'bound', 'sheets', '.', 'size', '()', '▁>', '▁sheet', 'Index', ')', '▁{', 'records', '.', 'remove', '(', 'records', '.', 'get', 'B', 'sp', 'os', '()', '▁-', '▁(', 'bound', 'sheets', '.', 'size', '()', '▁-', '▁1)', '▁+', '▁sheet', 'Index', ');', 'bound', 'sheets', '.', 'remove', '(', 'sheet', 'Index', ');', 'fix', 'Tab', 'Id', 'Record', '();', '}', 'int', '▁sheet', 'Num', '1', 'Based', '▁=', '▁sheet', 'Index', '▁+', '▁1;', 'for', '(', 'int', '▁i', '=0;', '▁i', '<', 'get', 'Num', 'Names', '();', '▁i', '++)', '▁{', 'Name', 'Record', '▁nr', '▁=', '▁getName', 'Record', '(', 'i', ');', 'if', '(', 'nr', '.', 'get', 'Sheet', 'Number', '()', '▁==', '▁sheet', 'Num', '1', 'Based', ')', '▁{', 'nr', '.', 'set', 'Sheet', 'Number', '(0);', '}', '▁else', '▁if', '(', 'nr', '.', 'get', 'Sheet', 'Number', '()', '▁>', '▁sheet', 'Num', '1', 'Based', ')', '▁{', 'nr', '.', 'set', 'Sheet', 'Number', '(', 'nr', '.', 'get', 'Sheet', 'Number', '()', '-1', ');', '}}', 'if', '▁(', 'link', 'Table', '▁!=', '▁null', ')', '▁{', 'link', 'Table', '.', 'remove', 'Sheet', '(', 'sheet', 'Index', ');', '}}']
['▁public', '▁void', '▁remove', 'Name', '(', 'String', '▁name', ')', '▁{', 'int', '▁index', '▁=', '▁getName', 'Index', '(', 'name', ');', 'remove', 'Name', '(', 'index', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'final', '▁Object', '▁o', ')', '▁{', 'if', '▁(!', '(', 'o', '▁instanceof', '▁Property', '))', '▁{', 'return', '▁false', ';}', 'final', '▁Property', '▁p', '▁=', '▁(', 'Property', ')', '▁o', ';', 'final', '▁Object', '▁p', 'Value', '▁=', '▁p', '.', 'getValue', '();', 'final', '▁long', '▁p', 'Id', '▁=', '▁p', '.', 'get', 'ID', '();', 'if', '▁(', 'id', '▁!=', '▁p', 'Id', '▁||', '▁(', 'id', '▁!=', '▁0', '▁&&', '▁!', 'types', 'Are', 'Equal', '(', 'type', ',', '▁p', '.', 'getType', '()', ')))', '▁{', 'return', '▁false', ';}', 'if', '▁(', 'value', '▁==', '▁null', '▁&&', '▁p', 'Value', '▁==', '▁null', ')', '▁{', 'return', '▁true', ';}', 'if', '▁(', 'value', '▁==', '▁null', '▁||', '▁p', 'Value', '▁==', '▁null', ')', '▁{', 'return', '▁false', ';}', 'final', '▁Class', '<?>', '▁value', 'Class', '▁=', '▁value', '.', 'getClass', '();', 'final', '▁Class', '<?>', '▁p', 'Value', 'Class', '▁=', '▁p', 'Value', '.', 'getClass', '();', 'if', '▁(!', '(', 'value', 'Class', '.', 'is', 'Assignable', 'From', '(', 'p', 'Value', 'Class', '))', '▁&&', '!', '(', 'p', 'Value', 'Class', '.', 'is', 'Assignable', 'From', '(', 'value', 'Class', ')))', '▁{', 'return', '▁false', ';}', 'if', '▁(', 'value', '▁instanceof', '▁byte', '[])', '▁{', 'byte', '[]', '▁this', 'Val', '▁=', '▁(', 'byte', '[])', '▁value', ',', '▁other', 'Val', '▁=', '▁(', 'byte', '[])', '▁p', 'Value', ';', 'int', '▁len', '▁=', '▁un', 'p', 'added', 'Length', '(', 'this', 'Val', ');', 'if', '▁(', 'len', '▁!=', '▁un', 'p', 'added', 'Length', '(', 'other', 'Val', '))', '▁{', 'return', '▁false', ';}', 'for', '▁(', 'int', '▁i', '=0;', '▁i', '<', 'len', ';', '▁i', '++)', '▁{', 'if', '▁(', 'this', 'Val', '[', 'i', ']', '▁!=', '▁other', 'Val', '[', 'i', '])', '▁{', 'return', '▁false', ';', '}}', 'return', '▁true', ';}', 'return', '▁value', '.', 'equals', '(', 'p', 'Value', ');', '}']
['▁public', '▁Get', 'Repo', 'Build', 'List', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Get', 'Repo', 'Build', 'List', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'repos', '/', '[', 'Repo', 'Namespace', ']/', '[', 'Repo', 'Name', ']/', 'build', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'GET', ');', '}']
['▁public', '▁Message', 'Writer', '()', '▁{', 'buf', '▁=', '▁new', '▁ByteArray', 'OutputStream', '();', 'enc', '▁=', '▁new', '▁OutputStream', 'Writer', '(', 'get', 'Raw', 'Stream', '(),', '▁UTF', '_8', ');', '}']
['▁public', '▁void', '▁append', '(', 'Record', 'Base', '▁r', '){', '_', 'rec', 's', '.', 'add', '(', 'r', ');', '}']
['▁public', '▁void', '▁close', '()', '▁throws', '▁IOException', '▁{', 'if', '▁(', 'read', '(', 'skip', 'Buffer', ')', '▁!=', '▁-1', '▁||', '▁actual', 'Size', '▁!=', '▁expected', 'Size', ')', '▁{', 'throw', '▁new', '▁Cor', 'rupt', 'ObjectException', '(', 'Message', 'Format', '.', 'format', '(', 'J', 'Git', 'Text', '.', 'get', '().', 'pack', 'file', 'Cor', 'ruption', 'Detected', ',', 'J', 'Git', 'Text', '.', 'get', '().', 'wrong', 'Dec', 'omp', 'ressed', 'Length', '));', '}', 'int', '▁used', '▁=', '▁b', 'Av', 'ail', '▁-', '▁inf', '.', 'get', 'Remaining', '();', 'if', '▁(0', '▁<', '▁used', ')', '▁{', 'on', 'Object', 'Data', '(', 'src', ',', '▁buf', ',', '▁p', ',', '▁used', ');', 'use', '(', 'used', ');', '}', 'inf', '.', 'reset', '();', '}']
['▁public', '▁Describe', 'Model', 'Package', 'Result', '▁describe', 'Model', 'Package', '(', 'Des', 'cribe', 'Model', 'Package', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Model', 'Package', '(', 'request', ');', '}']
['▁public', '▁void', '▁construct', '(', 'CellValue', 'Record', 'Interface', '▁rec', ',', '▁Record', 'Stream', '▁rs', ',', '▁Shared', 'Value', 'Manager', '▁sf', 'h', ')', '▁{', 'if', '▁(', 'rec', '▁instanceof', '▁Formula', 'Record', ')', '▁{', 'Formula', 'Record', '▁formula', 'Rec', '▁=', '▁(', 'Formula', 'Record', ')', 'rec', ';', 'String', 'Record', '▁cached', 'Text', ';', 'Class', '<?', '▁extends', '▁Record', '>', '▁next', 'Class', '▁=', '▁rs', '.', 'pe', 'ek', 'Next', 'Class', '();', 'if', '▁(', 'next', 'Class', '▁==', '▁String', 'Record', '.', 'class', ')', '▁{', 'cached', 'Text', '▁=', '▁(', 'String', 'Record', ')', '▁rs', '.', 'get', 'Next', '();', '}', '▁else', '▁{', 'cached', 'Text', '▁=', '▁null', ';}', 'insert', 'Cell', '(', 'new', '▁Formula', 'Record', 'Aggregate', '(', 'formula', 'Rec', ',', '▁cached', 'Text', ',', '▁sf', 'h', '));', '}', '▁else', '▁{', 'insert', 'Cell', '(', 'rec', ');', '}}']
['▁public', '▁Dec', 'ompressor', '▁clone', '()', '▁{', 'return', '▁new', '▁Def', 'late', 'Dec', 'ompressor', '();', '}']
['▁public', '▁Update', 'S', '3', 'Resources', 'Result', '▁update', 'S', '3', 'Resources', '(', 'Update', 'S', '3', 'Resources', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'S', '3', 'Resources', '(', 'request', ');', '}']
['▁public', '▁Group', 'Query', 'Node', '(', 'Query', 'Node', '▁query', ')', '▁{', 'if', '▁(', 'query', '▁==', '▁null', ')', '▁{', 'throw', '▁new', '▁Query', 'Node', 'Error', '(', 'new', '▁Message', 'Impl', '(', 'Query', 'Parser', 'Messages', '.', 'PARAMETER', '_', 'VALUE', '_', 'NOT', '_', 'SUPPORTED', ',', '▁"', 'query', '",', '▁"', 'null', '"));', '}', 'allocate', '();', 'set', 'Leaf', '(', 'false', ');', 'add', '(', 'query', ');', '}']
['▁public', '▁CharSequence', '▁to', 'QueryString', '(', 'Escape', 'Query', 'Syntax', '▁esc', 'aper', ')', '▁{', 'StringBuilder', '▁path', '▁=', '▁new', '▁StringBuilder', '();', 'path', '.', 'append', '("/', '").', 'append', '(', 'get', 'First', 'Path', 'Element', '());', 'for', '▁(', 'Query', 'Text', '▁path', 'element', '▁:', '▁getPath', 'Elements', '(1', '))', '▁{', 'CharSequence', '▁value', '▁=', '▁esc', 'aper', '.', 'escape', '(', 'path', 'element', '.', 'value', ',', '▁Locale', '.', 'getDefault', '(),', '▁Type', '.', 'STRING', ');', 'path', '.', 'append', '("/', '\\"', '").', 'append', '(', 'value', ').', 'append', '("', '\\"', '");', '}', 'return', '▁path', '.', 'toString', '();', '}']
['▁public', '▁void', '▁remove', 'Cell', 'Comment', '()', '▁{', 'H', 'SSF', 'Comment', '▁comment', '▁=', '▁_', 'sheet', '.', 'find', 'Cell', 'Comment', '(_', 'record', '.', 'get', 'Row', '(),', '▁_', 'record', '.', 'get', 'Column', '());', '_', 'comment', '▁=', '▁null', ';', 'if', '▁(', 'null', '▁==', '▁comment', '){', 'return', ';}', '_', 'sheet', '.', 'get', 'Drawing', 'Pat', 'ri', 'arch', '().', 'remove', 'Shape', '(', 'comment', ');', '}']
['▁public', '▁void', '▁reset', '()', '▁{', 'ar', 'riving', '▁=', '▁-1;', 'le', 'aving', '▁=', '▁-1', ';}']
['▁public', '▁Activ', 'ate', 'User', 'Result', '▁activate', 'User', '(', 'Activate', 'User', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Activate', 'User', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁is', 'Charset', 'Detected', '()', '▁{', 'throw', '▁new', '▁Unsupported', 'Operation', 'Exception', '();', '}']
['▁public', '▁Cluster', '▁modify', 'Snapshot', 'Copy', 'Retention', 'Period', '(', 'Modify', 'Snapshot', 'Copy', 'Retention', 'Period', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Modify', 'Snapshot', 'Copy', 'Retention', 'Period', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Cluster', 'Subnet', 'Group', 'Result', '▁delete', 'Cluster', 'Subnet', 'Group', '(', 'Delete', 'Cluster', 'Subnet', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Cluster', 'Subnet', 'Group', '(', 'request', ');', '}']
['▁public', '▁static', '▁String', '▁decode', '(', 'byte', '[]', '▁buffer', ')', '▁{', 'return', '▁decode', '(', 'buffer', ',', '▁0,', '▁buffer', '.', 'length', ');', '}']
['▁public', '▁int', '▁getDefault', 'Port', '()', '▁{', 'return', '▁-1', ';}']
['▁public', '▁Stop', 'Task', 'Result', '▁stop', 'Task', '(', 'Stop', 'Task', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Stop', 'Task', '(', 'request', ');', '}']
['▁public', '▁void', '▁seek', 'Exact', '(', 'Bytes', 'Ref', '▁target', ',', '▁Term', 'State', '▁other', 'State', ')', '▁{', 'assert', '▁other', 'State', '▁!=', '▁null', '▁&&', '▁other', 'State', '▁instanceof', '▁Block', 'Term', 'State', ';', 'assert', '▁!', 'do', 'Ord', '▁||', '▁((', 'Block', 'Term', 'State', ')', '▁other', 'State', ').', 'ord', '▁<', '▁num', 'Terms', ';', 'state', '.', 'copy', 'From', '(', 'other', 'State', ');', 'seek', 'Pending', '▁=', '▁true', ';', 'index', 'Is', 'Current', '▁=', '▁false', ';', 'term', '.', 'copy', 'Bytes', '(', 'target', ');', '}']
['▁public', '▁Series', 'To', 'Chart', 'Group', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'chart', 'Group', 'Index', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁static', '▁void', '▁write', 'Unicode', 'String', 'Flag', 'AndData', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ',', '▁String', '▁value', ')', '▁{', 'boolean', '▁is', '16', 'Bit', '▁=', '▁has', 'Mult', 'ib', 'y', 'te', '(', 'value', ');', 'out', '.', 'write', 'Byte', '(', 'is', '16', 'Bit', '▁?', '▁0', 'x', '01', '▁:', '▁0', 'x', '00', ');', 'if', '▁(', 'is', '16', 'Bit', ')', '▁{', 'put', 'Unicode', 'LE', '(', 'value', ',', '▁out', ');', '}', '▁else', '▁{', 'put', 'Compressed', 'Unicode', '(', 'value', ',', '▁out', ');', '}}']
['▁public', '▁Author', 'ize', 'SecurityGroup', 'In', 'gress', 'Result', '▁authorize', 'SecurityGroup', 'In', 'gress', '(', 'Author', 'ize', 'SecurityGroup', 'In', 'gress', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Author', 'ize', 'SecurityGroup', 'In', 'gress', '(', 'request', ');', '}']
['▁public', '▁void', '▁addFile', '(', 'String', '▁file', ')', '▁{', 'check', 'File', 'Names', '(', 'Collections', '.', 'singleton', '(', 'file', '));', 'set', 'Files', '.', 'add', '(', 'named', 'For', 'This', 'Segment', '(', 'file', '));', '}']
['▁public', '▁void', '▁setSize', '(', 'int', '▁width', ',', '▁int', '▁height', ')', '▁{', 'm', 'Width', '▁=', '▁width', ';', 'm', 'Height', '▁=', '▁height', ';}']
['▁public', '▁final', '▁void', '▁setP', 'rec', 'edence', 'Filter', 'Supp', 'ressed', '(', 'boolean', '▁value', ')', '▁{', 'if', '▁(', 'value', ')', '▁{', 'this', '.', 're', 'aches', 'Into', 'Outer', 'Context', '▁|=', '▁0', 'x', '4', '0000000', ';}', 'else', '▁{', 'this', '.', 're', 'aches', 'Into', 'Outer', 'Context', '▁&=', '▁~', 'SUP', 'PRESS', '_', 'PRE', 'CE', 'DEN', 'CE', '_', 'FILTER', ';', '}}']
['▁public', '▁Interval', 'Set', '▁LO', 'OK', '(', 'AT', 'N', 'State', '▁s', ',', '▁Rule', 'Context', '▁ctx', ')', '▁{', 'return', '▁LO', 'OK', '(', 's', ',', '▁null', ',', '▁ctx', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'get', 'Option', 'Flags', '());', 'out', '.', 'write', 'Short', '(', 'get', 'Row', 'Height', '());', '}']
['▁public', '▁Builder', '(', 'boolean', '▁ded', 'up', ')', '▁{', 'this', '.', 'ded', 'up', '▁=', '▁ded', 'up', ';}']
['▁public', '▁Hashtable', '(', 'int', '▁capacity', ',', '▁float', '▁load', 'Factor', ')', '▁{', 'this', '(', 'capacity', ');', 'if', '▁(', 'load', 'Factor', '▁<=', '▁0', '▁||', '▁Float', '.', 'is', 'NaN', '(', 'load', 'Factor', '))', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Load', '▁factor', ':', '▁"', '▁+', '▁load', 'Factor', ');', '}}']
['▁public', '▁Object', '▁get', '(', 'CharSequence', '▁key', ')', '▁{', 'final', '▁int', '▁bucket', '▁=', '▁normal', 'Completion', '.', 'get', 'Bucket', '(', 'key', ');', 'return', '▁bucket', '▁==', '▁-1', '▁?', '▁null', '▁:', '▁Long', '.', 'valueOf', '(', 'bucket', ');', '}']
['▁public', '▁List', 'Hyper', 'Parameter', 'T', 'uning', 'Jobs', 'Result', '▁list', 'Hyper', 'Parameter', 'T', 'uning', 'Jobs', '(', 'List', 'Hyper', 'Parameter', 'T', 'uning', 'Jobs', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Hyper', 'Parameter', 'T', 'uning', 'Jobs', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Table', 'Result', '▁delete', 'Table', '(', 'String', '▁tableName', ')', '▁{', 'return', '▁delete', 'Table', '(', 'new', '▁Delete', 'Table', 'Request', '().', 'with', 'TableName', '(', 'table', 'Name', '));', '}']
['▁public', '▁final', '▁boolean', '▁lessThan', '(', 'Text', 'Fragment', '▁frag', 'A', ',', '▁Text', 'Fragment', '▁frag', 'B', '){', 'if', '▁(', 'f', 'rag', 'A', '.', 'get', 'Score', '()', '▁==', '▁frag', 'B', '.', 'get', 'Score', '())', 'return', '▁frag', 'A', '.', 'f', 'rag', 'Num', '▁>', '▁frag', 'B', '.', 'f', 'rag', 'Num', ';', 'else', '▁return', '▁frag', 'A', '.', 'get', 'Score', '()', '▁<', '▁frag', 'B', '.', 'get', 'Score', '();', '}']
['▁public', '▁void', '▁free', 'Before', '(', 'int', '▁pos', ')', '▁{', 'assert', '▁pos', '▁>=', '▁0;', 'assert', '▁pos', '▁<=', '▁next', 'Pos', ';', 'final', '▁int', '▁new', 'Count', '▁=', '▁next', 'Pos', '▁-', '▁pos', ';', 'assert', '▁new', 'Count', '▁<=', '▁count', ':', '▁"', 'new', 'Count', '="', '▁+', '▁new', 'Count', '▁+', '▁"', '▁count', '="', '▁+', '▁count', ';', 'assert', '▁new', 'Count', '▁<=', '▁buffer', '.', 'length', ':', '▁"', 'new', 'Count', '="', '▁+', '▁new', 'Count', '▁+', '▁"', '▁buf', '.', 'length', '="', '▁+', '▁buffer', '.', 'length', ';', 'count', '▁=', '▁new', 'Count', ';}']
['▁public', '▁Update', 'H', 'IT', 'Type', 'Of', 'H', 'IT', 'Result', '▁update', 'H', 'IT', 'Type', 'Of', 'H', 'IT', '(', 'Update', 'H', 'IT', 'Type', 'Of', 'H', 'IT', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'H', 'IT', 'Type', 'Of', 'H', 'IT', '(', 'request', ');', '}']
['▁public', '▁Update', 'Rec', 'omm', 'ender', 'Configuration', 'Result', '▁update', 'Rec', 'omm', 'ender', 'Configuration', '(', 'Update', 'Rec', 'omm', 'ender', 'Configuration', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'Rec', 'omm', 'ender', 'Configuration', '(', 'request', ');', '}']
['▁public', '▁int', '▁compareTo', '(', 'Bytes', 'Ref', '▁other', ')', '▁{', 'return', '▁Arrays', '.', 'compare', 'Unsigned', '(', 'this', '.', 'bytes', ',', '▁this', '.', 'offset', ',', '▁this', '.', 'offset', '▁+', '▁this', '.', 'length', ',', 'other', '.', 'bytes', ',', '▁other', '.', 'offset', ',', '▁other', '.', 'offset', '▁+', '▁other', '.', 'length', ');', '}']
['▁public', '▁int', '▁stem', '(', 'char', '▁s', '[],', '▁int', '▁len', ')', '▁{', 'if', '▁(', 'len', '▁>', '▁4', '▁&&', '▁s', '[', 'len', '-1]', '▁==', "▁'", 's', "')", 'len', '--;', 'if', '▁(', 'len', '▁>', '▁5', '▁&&', '(', 'ends', 'With', '(', 's', ',', '▁len', ',', '▁"', 'ene', '")', '▁||', '▁(', 'ends', 'With', '(', 's', ',', '▁len', ',', '▁"', 'ane', '")', '▁&&', 'use', 'N', 'yn', 'ors', 'k', '▁)', '))', 'return', '▁len', '▁-', '▁3;', 'if', '▁(', 'len', '▁>', '▁4', '▁&&', '(', 'ends', 'With', '(', 's', ',', '▁len', ',', '▁"', 'er', '")', '▁||', '▁endsWith', '(', 's', ',', '▁len', ',', '▁"', 'en', '")', '▁||', '▁endsWith', '(', 's', ',', '▁len', ',', '▁"', 'et', '")', '▁||', '▁(', 'ends', 'With', '(', 's', ',', '▁len', ',', '▁"', 'ar', '")', '▁&&', 'use', 'N', 'yn', 'ors', 'k', '▁)', '))', 'return', '▁len', '▁-', '▁2;', 'if', '▁(', 'len', '▁>', '▁3)', 'switch', '(', 's', '[', 'len', '-1', '])', '▁{', 'case', "▁'", 'a', "':", '▁case', "▁'", 'e', "':", '▁return', '▁len', '▁-', '▁1;', '}', 'return', '▁len', ';}']
['▁public', '▁Describe', 'DB', 'Snapshots', 'Result', '▁describe', 'DB', 'Snapshots', '(', 'Des', 'cribe', 'DB', 'Snapshots', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'DB', 'Snapshots', '(', 'request', ');', '}']
['▁public', '▁SortedSet', 'DocValues', 'Facet', 'Field', '(', 'String', '▁dim', ',', '▁String', '▁label', ')', '▁{', 'super', '("', 'dummy', '",', '▁TYPE', ');', 'Facet', 'Field', '.', 'verify', 'Label', '(', 'label', ');', 'Facet', 'Field', '.', 'verify', 'Label', '(', 'dim', ');', 'this', '.', 'dim', '▁=', '▁dim', ';', 'this', '.', 'label', '▁=', '▁label', ';}']
['▁public', '▁Create', 'Documentation', 'Part', 'Result', '▁create', 'Documentation', 'Part', '(', 'Create', 'Documentation', 'Part', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Documentation', 'Part', '(', 'request', ');', '}']
['▁public', '▁String', '▁getValue', '()', '▁{', 'return', '▁value', ';}']
['▁public', '▁Short', 'Buffer', '▁as', 'ReadOnly', 'Buffer', '()', '▁{', 'return', '▁duplicate', '();', '}']
['▁public', '▁Update', 'DataSource', 'Permissions', 'Result', '▁update', 'DataSource', 'Permissions', '(', 'Update', 'DataSource', 'Permissions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁executeUpdate', 'DataSource', 'Permissions', '(', 'request', ');', '}']
['▁public', '▁static', '▁org', '.', 'apache', '.', 'poi', '.', 'h', 'ss', 'f', '.', 'record', '.', 'Record', '▁create', 'Single', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'I', '_', 'Record', 'Creator', '▁constructor', '▁=', '▁_', 'record', 'Cre', 'ators', 'ById', '.', 'get', '(', 'Integer', '.', 'valueOf', '(', 'in', '.', 'get', 'Sid', '()));', 'if', '▁(', 'constructor', '▁==', '▁null', ')', '▁{', 'return', '▁new', '▁Unknown', 'Record', '(', 'in', ');', '}', 'return', '▁constructor', '.', 'create', '(', 'in', ');', '}']
['▁public', '▁int', '▁getCount', '()', '▁{', 'return', '▁m', 'Tabs', '.', 'size', '();', '}']
['▁public', '▁Delete', 'Application', 'Reference', 'DataSource', 'Result', '▁delete', 'Application', 'Reference', 'DataSource', '(', 'Delete', 'Application', 'Reference', 'DataSource', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Application', 'Reference', 'DataSource', '(', 'request', ');', '}']
['▁public', '▁Create', 'Project', 'Version', 'Result', '▁createProject', 'Version', '(', 'Create', 'Project', 'Version', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Project', 'Version', '(', 'request', ');', '}']
['▁public', '▁IntBuffer', '▁slice', '()', '▁{', 'return', '▁new', '▁ReadOnly', 'Int', 'Array', 'Buffer', '(', 'remaining', '(),', '▁backing', 'Array', ',', '▁offset', '▁+', '▁position', ');', '}']
['▁public', '▁final', '▁byte', '▁get', '()', '▁{', 'if', '▁(', 'position', '▁==', '▁limit', ')', '▁{', 'throw', '▁new', '▁Buffer', 'Under', 'flow', 'Exception', '();', '}', 'return', '▁this', '.', 'block', '.', 'pe', 'ek', 'Byte', '(', 'offset', '▁+', '▁position', '++', ');', '}']
['▁public', '▁Long', 'Buffer', '▁put', '(', 'int', '▁index', ',', '▁long', '▁c', ')', '▁{', 'check', 'Index', '(', 'index', ');', 'back', 'ing', 'Array', '[', 'offset', '▁+', '▁index', ']', '▁=', '▁c', ';', 'return', '▁this', ';}']
['▁public', '▁Stored', 'Field', '(', 'String', '▁name', ',', '▁float', '▁value', ')', '▁{', 'super', '(', 'name', ',', '▁TYPE', ');', 'fields', 'Data', '▁=', '▁value', ';}']
['▁public', '▁Interval', 'Set', '▁getExpected', 'Tokens', 'Within', 'Current', 'Rule', '()', '▁{', 'AT', 'N', '▁at', 'n', '▁=', '▁get', 'Interpreter', '().', 'at', 'n', ';', 'AT', 'N', 'State', '▁s', '▁=', '▁at', 'n', '.', 'states', '.', 'get', '(', 'get', 'State', '());', 'return', '▁at', 'n', '.', 'next', 'Tokens', '(', 's', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'FILE', 'SH', 'AR', 'ING', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'readonly', '▁=', '▁"', ').', 'append', '(', 'get', 'ReadOnly', '()', '▁==', '▁1', '▁?', '▁"', 'true', '"', '▁:', '▁"', 'false', '").', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'password', '▁=', '▁"', ').', 'append', '(', 'Integer', '.', 'to', 'HexString', '(', 'get', 'Password', '())', ').', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'username', '▁=', '▁"', ').', 'append', '(', 'get', 'Username', '()).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'FILE', 'SH', 'AR', 'ING', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁Sub', 'module', 'Init', 'Command', '(', 'Repository', '▁repo', ')', '▁{', 'super', '(', 'repo', ');', 'paths', '▁=', '▁new', '▁ArrayList', '<>();', '}']
['▁public', '▁void', '▁include', '(', 'String', '▁name', ',', '▁Any', 'ObjectId', '▁id', ')', '▁{', 'boolean', '▁valid', 'Ref', 'Name', '▁=', '▁Repository', '.', 'is', 'Valid', 'Ref', 'Name', '(', 'name', ')', '▁||', '▁Constants', '.', 'HEAD', '.', 'equals', '(', 'name', ');', 'if', '▁(!', 'valid', 'Ref', 'Name', ')', 'throw', '▁new', '▁IllegalArgument', 'Exception', '(', 'Message', 'Format', '.', 'format', '(', 'J', 'Git', 'Text', '.', 'get', '().', 'invalid', 'Ref', 'Name', ',', '▁name', '));', 'if', '▁(', 'include', '.', 'contains', 'Key', '(', 'name', '))', 'throw', '▁new', '▁Illegal', 'StateException', '(', 'J', 'Git', 'Text', '.', 'get', '().', 'duplicate', 'Ref', '▁+', '▁name', ');', 'include', '.', 'put', '(', 'name', ',', '▁id', '.', 'to', 'ObjectId', '());', '}']
['▁public', '▁Cluster', '▁enable', 'Snapshot', 'Copy', '(', 'Enable', 'Snapshot', 'Copy', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Enable', 'Snapshot', 'Copy', '(', 'request', ');', '}']
['▁public', '▁Value', 'Fill', 'er', '▁getValue', 'Fill', 'er', '()', '▁{', 'return', '▁new', '▁Value', 'Fill', 'er', '();', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Byte', '(', 'get', 'Pane', '());', 'out', '.', 'write', 'Short', '(', 'get', 'Active', 'Cell', 'Row', '());', 'out', '.', 'write', 'Short', '(', 'get', 'Active', 'Cell', 'Col', '());', 'out', '.', 'write', 'Short', '(', 'get', 'Active', 'Cell', 'Ref', '());', 'int', '▁n', 'Refs', '▁=', '▁field', '_', '6_', 'refs', '.', 'length', ';', 'out', '.', 'write', 'Short', '(', 'n', 'Refs', ');', 'for', '▁(', 'Cell', 'Range', 'Address', '8', 'Bit', '▁field', '_', '6_', 'ref', '▁:', '▁field', '_', '6_', 'refs', ')', '▁{', 'field', '_', '6_', 'ref', '.', 'serialize', '(', 'out', ');', '}}']
['▁public', '▁static', '▁Counter', '▁new', 'Counter', '()', '▁{', 'return', '▁new', 'Counter', '(', 'false', ');', '}']
['▁public', '▁boolean', '▁get', '(', 'String', '▁name', ',', '▁boolean', '▁df', 'lt', ')', '▁{', 'boolean', '▁vals', '[]', '▁=', '▁(', 'boolean', '[])', '▁val', 'By', 'Round', '.', 'get', '(', 'name', ');', 'if', '▁(', 'vals', '▁!=', '▁null', ')', '▁{', 'return', '▁vals', '[', 'round', 'Number', '▁%', '▁vals', '.', 'length', '];', '}', 'String', '▁s', 'val', '▁=', '▁props', '.', 'getProperty', '(', 'name', ',', '▁""', '▁+', '▁df', 'lt', ');', 'if', '▁(', 's', 'val', '.', 'indexOf', '(":', '")', '▁<', '▁0)', '▁{', 'return', '▁Boolean', '.', 'valueOf', '(', 's', 'val', ').', 'boolean', 'Value', '();', '}', 'int', '▁k', '▁=', '▁s', 'val', '.', 'indexOf', '(":', '");', 'String', '▁colName', '▁=', '▁s', 'val', '.', 'substring', '(0,', '▁k', ');', 's', 'val', '▁=', '▁s', 'val', '.', 'substring', '(', 'k', '▁+', '▁1);', 'col', 'For', 'Val', 'By', 'Round', '.', 'put', '(', 'name', ',', '▁colName', ');', 'vals', '▁=', '▁prop', 'To', 'Boolean', 'Array', '(', 's', 'val', ');', 'val', 'By', 'Round', '.', 'put', '(', 'name', ',', '▁vals', ');', 'return', '▁vals', '[', 'round', 'Number', '▁%', '▁vals', '.', 'length', '];', '}']
['▁public', '▁void', '▁pre', 'Serialize', '(){', 'if', '(', 'records', '.', 'get', 'Tab', 'pos', '()', '▁>', '▁0)', '▁{', 'Tab', 'Id', 'Record', '▁t', 'ir', '▁=', '▁(', '▁Tab', 'Id', 'Record', '▁)', '▁records', '.', 'get', '(', 'records', '.', 'get', 'Tab', 'pos', '());', 'if', '(', 't', 'ir', '._', 'tab', 'ids', '.', 'length', '▁<', '▁bound', 'sheets', '.', 'size', '())', '▁{', 'fix', 'Tab', 'Id', 'Record', '();', '}}', '}']
['▁public', '▁Limit', 'Token', 'Count', 'Analyzer', '(', 'Analyzer', '▁delegate', ',', '▁int', '▁max', 'Token', 'Count', ',', '▁boolean', '▁consume', 'All', 'Tokens', ')', '▁{', 'super', '(', 'delegate', '.', 'get', 'Reuse', 'Strategy', '());', 'this', '.', 'delegate', '▁=', '▁delegate', ';', 'this', '.', 'max', 'Token', 'Count', '▁=', '▁max', 'Token', 'Count', ';', 'this', '.', 'consume', 'All', 'Tokens', '▁=', '▁consume', 'All', 'Tokens', ';}']
['▁public', '▁External', 'Book', 'Block', '(', 'int', '▁numberOf', 'Sh', 'eets', ')', '▁{', '_', 'external', 'Book', 'Record', '▁=', '▁S', 'up', 'Book', 'Record', '.', 'create', 'Internal', 'References', '((', 'short', ')', '▁numberOf', 'Sh', 'eets', ');', '_', 'external', 'Name', 'Records', '▁=', '▁new', '▁External', 'Name', 'Record', '[0];', '_', 'cr', 'n', 'Blocks', '▁=', '▁new', '▁CR', 'N', 'Block', '[0];', '}']
['▁public', '▁String', '▁toString', '(){', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'S', 'CE', 'N', 'AR', 'IO', 'PRO', 'TE', 'CT', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'prot', 'ect', '▁=', '▁"', ').', 'append', '(', 'get', 'Prot', 'ect', '()).', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'S', 'CE', 'N', 'AR', 'IO', 'PRO', 'TE', 'CT', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁Push', 'Command', '▁set', 'Th', 'in', '(', 'boolean', '▁thin', ')', '▁{', 'check', 'Callable', '();', 'this', '.', 'th', 'in', '▁=', '▁thin', ';', 'return', '▁this', ';}']
['▁public', '▁int', '▁compareTo', '(', 'Searcher', 'Tracker', '▁other', ')', '▁{', 'return', '▁Double', '.', 'compare', '(', 'other', '.', 'record', 'Time', 'Sec', ',', '▁record', 'Time', 'Sec', ');', '}']
['▁public', '▁Reverse', 'String', 'Filter', '▁create', '(', 'Token', 'Stream', '▁in', ')', '▁{', 'return', '▁new', '▁Reverse', 'String', 'Filter', '(', 'in', ');', '}']
['▁public', '▁Block', 'List', '()', '▁{', 'directory', '▁=', '▁Block', 'List', '.<', 'T', '>', '▁new', 'Directory', '(', '256', ');', 'directory', '[0]', '▁=', '▁Block', 'List', '.<', 'T', '>', '▁new', 'Block', '();', 'tail', 'Block', '▁=', '▁directory', '[0];', '}']
['▁public', '▁Query', 'Sc', 'orer', '(', 'Weight', 'ed', 'Span', 'Term', '[]', '▁weighted', 'Terms', ')', '▁{', 'this', '.', 'field', 'Weight', 'ed', 'Span', 'Terms', '▁=', '▁new', '▁HashMap', '<>(', 'weighted', 'Terms', '.', 'length', ');', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁weighted', 'Terms', '.', 'length', ';', '▁i', '++)', '▁{', 'Weight', 'ed', 'Span', 'Term', '▁existing', 'Term', '▁=', '▁field', 'Weight', 'ed', 'Span', 'Terms', '.', 'get', '(', 'weighted', 'Terms', '[', 'i', '].', 'term', ');', 'if', '▁((', 'existing', 'Term', '▁==', '▁null', ')', '▁||', '(', 'existing', 'Term', '.', 'weight', '▁<', '▁weighted', 'Terms', '[', 'i', '].', 'weight', '))', '▁{', 'field', 'Weight', 'ed', 'Span', 'Terms', '.', 'put', '(', 'weighted', 'Terms', '[', 'i', '].', 'term', ',', '▁weighted', 'Terms', '[', 'i', ']);', 'max', 'Term', 'Weight', '▁=', '▁Math', '.', 'max', '(', 'max', 'Term', 'Weight', ',', '▁weighted', 'Terms', '[', 'i', '].', 'get', 'Weight', '());', '}}', 'skip', 'Init', 'Extractor', '▁=', '▁true', ';}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁_', 'other', ')', '▁{', 'assert', '▁never', 'Equals', '(_', 'other', ');', 'if', '▁(_', 'other', '▁instanceof', '▁Mer', 'ged', 'Group', ')', '▁{', 'Merged', 'Group', '<?>', '▁other', '▁=', '▁(', 'Merged', 'Group', '<?>', ')', '▁_', 'other', ';', 'if', '▁(', 'group', 'Value', '▁==', '▁null', ')', '▁{', 'return', '▁other', '▁==', '▁null', ';}', '▁else', '▁{', 'return', '▁group', 'Value', '.', 'equals', '(', 'other', ');', '}}', '▁else', '▁{', 'return', '▁false', ';', '}}']
['▁public', '▁final', '▁Charset', '▁charset', '()', '▁{', 'return', '▁cs', ';}']
['▁public', '▁Describe', 'Experiment', 'Result', '▁describe', 'Experiment', '(', 'Des', 'cribe', 'Experiment', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Experiment', '(', 'request', ');', '}']
['▁public', '▁E', 'sch', 'er', 'Graphics', '(', 'H', 'SSF', 'Shape', 'Group', '▁es', 'ch', 'er', 'Group', ',', '▁H', 'SSF', 'Workbook', '▁workbook', ',', '▁Color', '▁fore', 'color', ',', '▁float', '▁vertical', 'Points', 'Per', 'Pixel', '▁){', 'this', '.', 'es', 'ch', 'er', 'Group', '▁=', '▁es', 'ch', 'er', 'Group', ';', 'this', '.', 'work', 'book', '▁=', '▁workbook', ';', 'this', '.', 'vertical', 'Points', 'Per', 'Pixel', '▁=', '▁vertical', 'Points', 'Per', 'Pixel', ';', 'this', '.', 'vertical', 'Pixels', 'Per', 'Point', '▁=', '▁1', '▁/', '▁vertical', 'Points', 'Per', 'Pixel', ';', 'this', '.', 'font', '▁=', '▁new', '▁Font', '("', 'A', 'rial', '",', '▁0,', '▁10);', 'this', '.', 'fore', 'ground', '▁=', '▁fore', 'color', ';}']
['▁public', '▁String', '▁pattern', '()', '▁{', 'return', '▁pattern', 'Text', ';}']
['▁public', '▁Delete', 'Route', 'Table', 'Result', '▁delete', 'Route', 'Table', '(', 'Delete', 'Route', 'Table', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Route', 'Table', '(', 'request', ');', '}']
['▁public', '▁Assoc', 'iate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', 'Result', '▁associate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', '(', 'Assoc', 'iate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Assoc', 'iate', 'V', 'PC', 'With', 'Host', 'ed', 'Zone', '(', 'request', ');', '}']
['▁public', '▁Put', 'Integration', 'Result', '▁put', 'Integration', '(', 'Put', 'Integration', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Put', 'Integration', '(', 'request', ');', '}']
['▁public', '▁Simple', 'Entry', '(', 'K', '▁the', 'Key', ',', '▁V', '▁the', 'Value', ')', '▁{', 'key', '▁=', '▁the', 'Key', ';', 'value', '▁=', '▁the', 'Value', ';}']
['▁public', '▁void', '▁decode', '(', 'byte', '[]', '▁blocks', ',', '▁int', '▁blocks', 'Offset', ',', '▁long', '[]', '▁values', ',', '▁int', '▁values', 'Offset', ',', '▁int', '▁iterations', ')', '▁{', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁iterations', ';', '▁++', 'i', ')', '▁{', 'final', '▁long', '▁byte', '0', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', ']', '▁&', '▁0', 'xFF', ';', 'final', '▁long', '▁byte', '1', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', ']', '▁&', '▁0', 'xFF', ';', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁(', 'byte', '0', '▁<<', '▁4)', '▁|', '▁(', 'byte', '1', '▁>>>', '▁4', ');', 'final', '▁long', '▁byte', '2', '▁=', '▁blocks', '[', 'blocks', 'Offset', '++', ']', '▁&', '▁0', 'xFF', ';', 'values', '[', 'values', 'Offset', '++', ']', '▁=', '▁((', 'byte', '1', '▁&', '▁15', ')', '▁<<', '▁8)', '▁|', '▁byte', '2;', '}}']
['▁public', '▁Dis', 'associate', 'Connection', 'From', 'L', 'ag', 'Result', '▁dis', 'associate', 'Connection', 'From', 'L', 'ag', '(', 'Dis', 'associate', 'Connection', 'From', 'L', 'ag', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Dis', 'associate', 'Connection', 'From', 'L', 'ag', '(', 'request', ');', '}']
['▁public', '▁File', 'Mode', '▁getOld', 'Mode', '()', '▁{', 'return', '▁old', 'Mode', ';}']
['▁@', 'Override', '▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁m', '.', 'toString', '();', '}']
['▁public', '▁Stop', 'Key', 'Ph', 'rases', 'Detection', 'Job', 'Result', '▁stop', 'Key', 'Ph', 'rases', 'Detection', 'Job', '(', 'Stop', 'Key', 'Ph', 'rases', 'Detection', 'Job', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Stop', 'Key', 'Ph', 'rases', 'Detection', 'Job', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"[', 'Array', '▁Formula', '▁or', '▁Shared', '▁Formula', ']\\', 'n', '"', '▁+', '▁"', 'row', '▁=', '▁"', '▁+', '▁getRow', '()', '▁+', '▁"\\', 'n', '"', '▁+', '▁"', 'col', '▁=', '▁"', '▁+', '▁getColumn', '()', '▁+', '▁"\\', 'n', '";', '}']
['▁public', '▁List', 'Dom', 'inant', 'Language', 'Detection', 'Jobs', 'Result', '▁list', 'Dom', 'inant', 'Language', 'Detection', 'Jobs', '(', 'List', 'Dom', 'inant', 'Language', 'Detection', 'Jobs', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Dom', 'inant', 'Language', 'Detection', 'Jobs', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"', 'slice', '▁start', '="', '▁+', '▁start', '▁+', '▁"', '▁length', '="', '▁+', '▁length', '▁+', '▁"', '▁readerIndex', '="', '▁+', '▁readerIndex', ';}']
['▁public', '▁static', '▁final', '▁int', '▁parse', 'Hex', 'Int', '4', '(', 'final', '▁byte', '▁digit', ')', '▁{', 'final', '▁byte', '▁r', '▁=', '▁digits', '16', '[', 'digit', '];', 'if', '▁(', 'r', '▁<', '▁0)', 'throw', '▁new', '▁Array', 'IndexOutOfBounds', 'Exception', '();', 'return', '▁r', ';}']
['▁public', '▁Attribute', '(', 'String', '▁name', ',', '▁String', '▁value', ')', '▁{', 'setName', '(', 'name', ');', 'setValue', '(', 'value', ');', '}']
['▁public', '▁Describe', 'Stack', 'Set', 'Operation', 'Result', '▁describe', 'Stack', 'Set', 'Operation', '(', 'Des', 'cribe', 'Stack', 'Set', 'Operation', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Stack', 'Set', 'Operation', '(', 'request', ');', '}']
['▁public', '▁H', 'SSF', 'Cell', '▁getCell', '(', 'int', '▁cell', 'num', ')', '▁{', 'return', '▁getCell', '(', 'cell', 'num', ',', '▁book', '.', 'get', 'Missing', 'Cell', 'Policy', '());', '}']
['▁public', '▁void', '▁write', '(', 'byte', '[]', '▁b', ')', '▁{', 'write', 'Continue', 'If', 'Required', '(', 'b', '.', 'length', ');', '_', 'ul', 'r', 'Output', '.', 'write', '(', 'b', ');', '}']
['▁public', '▁Reset', 'Image', 'Attribute', 'Request', '(', 'String', '▁image', 'Id', ',', '▁Reset', 'Image', 'AttributeName', '▁attribute', ')', '▁{', 'setImage', 'Id', '(', 'image', 'Id', ');', 'setAttribute', '(', 'attribute', '.', 'toString', '());', '}']
['▁public', '▁void', '▁discard', 'Result', 'Contents', '()', '▁{', 'result', 'Contents', '▁=', '▁null', ';}']
['▁public', '▁ObjectId', '▁getP', 'eel', 'ed', 'ObjectId', '()', '▁{', 'return', '▁getLe', 'af', '().', 'get', 'P', 'eel', 'ed', 'ObjectId', '();', '}']
['▁public', '▁void', '▁und', 'ep', 'rec', 'ate', 'Domain', '(', 'Und', 'ep', 'rec', 'ate', 'Domain', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'execute', 'Und', 'ep', 'rec', 'ate', 'Domain', '(', 'request', ');', '}']
['▁public', '▁void', '▁write', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Byte', '(', 'sid', '▁+', '▁getP', 'tg', 'Class', '());', 'out', '.', 'write', 'Byte', '(', 'field', '_3_', 'string', '.', 'length', '());', '▁out', '.', 'write', 'Byte', '(_', 'is', '16', 'bit', 'Unicode', '▁?', '▁0', 'x', '01', '▁:', '▁0', 'x', '00', ');', 'if', '▁(_', 'is', '16', 'bit', 'Unicode', ')', '▁{', 'String', 'Util', '.', 'put', 'Unicode', 'LE', '(', 'field', '_3_', 'string', ',', '▁out', ');', '}', '▁else', '▁{', 'String', 'Util', '.', 'put', 'Compressed', 'Unicode', '(', 'field', '_3_', 'string', ',', '▁out', ');', '}}']
['▁public', '▁Delete', 'Queue', 'Result', '▁delete', 'Queue', '(', 'String', '▁queue', 'Url', ')', '▁{', 'return', '▁delete', 'Queue', '(', 'new', '▁Delete', 'Queue', 'Request', '().', 'with', 'Queue', 'Url', '(', 'queue', 'Url', '));', '}']
['▁public', '▁void', '▁set', 'Check', 'E', 'of', 'After', 'Pack', 'Footer', '(', 'boolean', '▁b', ')', '▁{', 'check', 'E', 'of', 'After', 'Pack', 'Footer', '▁=', '▁b', ';}']
['▁public', '▁void', '▁swap', '()', '▁{', 'final', '▁int', '▁s', 'Begin', '▁=', '▁begin', 'A', ';', 'final', '▁int', '▁s', 'End', '▁=', '▁end', 'A', ';', 'begin', 'A', '▁=', '▁begin', 'B', ';', 'end', 'A', '▁=', '▁end', 'B', ';', 'begin', 'B', '▁=', '▁s', 'Begin', ';', 'end', 'B', '▁=', '▁s', 'End', ';}']
['▁public', '▁int', '▁getPack', 'ed', 'Git', 'WindowSize', '()', '▁{', 'return', '▁packed', 'Git', 'WindowSize', ';}']
['▁public', '▁Put', 'Metric', 'Data', 'Result', '▁put', 'Metric', 'Data', '(', 'Put', 'Metric', 'Data', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Put', 'Metric', 'Data', '(', 'request', ');', '}']
['▁public', '▁Get', 'C', 'el', 'eb', 'rity', 'Rec', 'ognition', 'Result', '▁getC', 'el', 'eb', 'rity', 'Rec', 'ognition', '(', 'Get', 'C', 'el', 'eb', 'rity', 'Rec', 'ognition', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'C', 'el', 'eb', 'rity', 'Rec', 'ognition', '(', 'request', ');', '}']
['▁public', '▁Create', 'Queue', 'Request', '(', 'String', '▁queueName', ')', '▁{', 'set', 'Queue', 'Name', '(', 'queue', 'Name', ');', '}']
['▁public', '▁Area', '3', 'DP', 'x', 'g', '(', 'int', '▁external', 'Workbook', 'Number', ',', '▁Sheet', 'Identifier', '▁sheet', 'Name', ',', '▁Area', 'Reference', '▁are', 'are', 'f', ')', '▁{', 'super', '(', 'are', 'are', 'f', ');', 'this', '.', 'external', 'Workbook', 'Number', '▁=', '▁external', 'Workbook', 'Number', ';', 'this', '.', 'first', 'Sheet', 'Name', '▁=', '▁sheet', 'Name', '.', 'get', 'Sheet', 'Identifier', '().', 'getName', '();', 'if', '▁(', 'sheet', 'Name', '▁instanceof', '▁Sheet', 'Range', 'Identifier', ')', '▁{', 'this', '.', 'last', 'Sheet', 'Name', '▁=', '▁((', 'Sheet', 'Range', 'Identifier', ')', 'sheet', 'Name', ').', 'get', 'Last', 'Sheet', 'Identifier', '().', 'getName', '();', '}', '▁else', '▁{', 'this', '.', 'last', 'Sheet', 'Name', '▁=', '▁null', ';', '}}']
['▁public', '▁void', '▁setB', 'as', 'eline', '(', 'long', '▁clock', 'Time', ')', '▁{', 't', '0', '▁=', '▁clock', 'Time', ';', 'timeout', '▁=', '▁t', '0', '▁+', '▁ticks', 'Allowed', ';}']
['▁public', '▁Move', 'Address', 'To', 'V', 'pc', 'Result', '▁move', 'Address', 'To', 'V', 'pc', '(', 'Move', 'Address', 'To', 'V', 'pc', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Move', 'Address', 'To', 'V', 'pc', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'String', '▁coll', '▁=', '▁collection', 'Model', '.', 'getName', '();', 'if', '▁(', 'coll', '▁!=', '▁null', ')', '▁{', 'return', '▁String', '.', 'format', '(', 'Locale', '.', 'ROOT', ',', '▁"', 'LM', '▁%', 's', '▁-', '▁%', 's', '",', '▁getName', '(),', '▁coll', ');', '}', '▁else', '▁{', 'return', '▁String', '.', 'format', '(', 'Locale', '.', 'ROOT', ',', '▁"', 'LM', '▁%', 's', '",', '▁getName', '());', '}}']
['▁public', '▁Describe', 'L', 'ags', 'Result', '▁describe', 'L', 'ags', '(', 'Des', 'cribe', 'L', 'ags', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'L', 'ags', '(', 'request', ');', '}']
['▁public', '▁Area', 'Eval', '▁offset', '(', 'int', '▁rel', 'First', 'Row', 'I', 'x', ',', '▁int', '▁rel', 'Last', 'Row', 'I', 'x', ',', 'int', '▁rel', 'First', 'Col', 'I', 'x', ',', '▁int', '▁rel', 'Last', 'Col', 'I', 'x', ')', '▁{', 'if', '▁(_', 'ref', 'Eval', '▁==', '▁null', ')', '▁{', 'return', '▁_', 'area', 'Eval', '.', 'offset', '(', 'rel', 'First', 'Row', 'I', 'x', ',', '▁rel', 'Last', 'Row', 'I', 'x', ',', '▁rel', 'First', 'Col', 'I', 'x', ',', '▁rel', 'Last', 'Col', 'I', 'x', ');', '}', 'return', '▁_', 'ref', 'Eval', '.', 'offset', '(', 'rel', 'First', 'Row', 'I', 'x', ',', '▁rel', 'Last', 'Row', 'I', 'x', ',', '▁rel', 'First', 'Col', 'I', 'x', ',', '▁rel', 'Last', 'Col', 'I', 'x', ');', '}']
['▁public', '▁Short', 'Buffer', '▁put', '(', 'short', '[]', '▁src', ',', '▁int', '▁src', 'Offset', ',', '▁int', '▁short', 'Count', ')', '▁{', 'byte', 'Buffer', '.', 'limit', '(', 'limit', '▁*', '▁Size', 'Of', '.', 'SHORT', ');', 'byte', 'Buffer', '.', 'position', '(', 'position', '▁*', '▁Size', 'Of', '.', 'SHORT', ');', 'if', '▁(', 'byte', 'Buffer', '▁instanceof', '▁Read', 'Write', 'Direct', 'ByteBuffer', ')', '▁{', '((', 'Read', 'Write', 'Direct', 'ByteBuffer', ')', '▁byteBuffer', ').', 'put', '(', 'src', ',', '▁src', 'Offset', ',', '▁short', 'Count', ');', '}', '▁else', '▁{', '((', 'Read', 'Write', 'Heap', 'ByteBuffer', ')', '▁byteBuffer', ').', 'put', '(', 'src', ',', '▁src', 'Offset', ',', '▁short', 'Count', ');', '}', 'this', '.', 'position', '▁+=', '▁short', 'Count', ';', 'return', '▁this', ';}']
['▁public', '▁void', '▁initialize', '(', 'final', '▁String', '▁cat', ')', '▁{', 'this', '._', 'cat', '=', 'cat', ';}']
['▁public', '▁void', '▁write', '(', 'int', '▁one', 'Byte', ')', '▁throws', '▁IOException', '▁{', 'out', '.', 'write', '(', 'one', 'Byte', ');', 'written', '++;', '}']
['▁public', '▁Describe', 'Import', 'Image', 'Tasks', 'Result', '▁describe', 'Import', 'Image', 'Tasks', '(', 'Des', 'cribe', 'Import', 'Image', 'Tasks', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Import', 'Image', 'Tasks', '(', 'request', ');', '}']
['▁public', '▁Column', 'Info', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', '_', 'first', 'Col', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', '_', 'last', 'Col', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', '_', 'col', 'Width', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', '_', 'xf', 'Index', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', '_', 'options', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', 'switch', '(', 'in', '.', 'remaining', '())', '▁{', 'case', '▁2:', '▁field', '_', '6_', 'reserved', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', 'break', ';', 'case', '▁1:', 'field', '_', '6_', 'reserved', '▁=', '▁in', '.', 'read', 'Byte', '();', 'break', ';', 'case', '▁0:', 'field', '_', '6_', 'reserved', '▁=', '▁0;', 'break', ';', 'default', ':', 'throw', '▁new', '▁Runtime', 'Exception', '("', 'Un', 'usual', '▁record', '▁size', '▁remaining', '=', '("', '▁+', '▁in', '.', 'remaining', '()', '▁+', '▁")', '");', '}}']
['▁public', '▁Status', '(', 'Index', 'Diff', '▁diff', ')', '▁{', 'super', '();', 'this', '.', 'diff', '▁=', '▁diff', ';', 'has', 'Un', 'committed', 'Changes', '▁=', '▁!', 'diff', '.', 'get', 'Added', '().', 'isEmpty', '()', '▁||', '▁!', 'diff', '.', 'get', 'Changed', '().', 'isEmpty', '()', '▁||', '▁!', 'diff', '.', 'get', 'Removed', '().', 'isEmpty', '()', '▁||', '▁!', 'diff', '.', 'get', 'Missing', '().', 'isEmpty', '()', '▁||', '▁!', 'diff', '.', 'get', 'Modified', '().', 'isEmpty', '()', '▁||', '▁!', 'diff', '.', 'get', 'Conflict', 'ing', '().', 'isEmpty', '();', 'clean', '▁=', '▁!', 'has', 'Un', 'committed', 'Changes', '▁&&', '▁diff', '.', 'get', 'Un', 'tracked', '().', 'isEmpty', '();', '}']
['▁public', '▁Create', 'Experiment', 'Result', '▁create', 'Experiment', '(', 'Create', 'Experiment', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Experiment', '(', 'request', ');', '}']
['▁public', '▁Unknown', 'Record', '▁clone', '()', '▁{', 'return', '▁copy', '();', '}']
['▁public', '▁Float', 'Buffer', '▁slice', '()', '▁{', 'byte', 'Buffer', '.', 'limit', '(', 'limit', '▁*', '▁Size', 'Of', '.', 'FLOAT', ');', 'byte', 'Buffer', '.', 'position', '(', 'position', '▁*', '▁Size', 'Of', '.', 'FLOAT', ');', 'ByteBuffer', '▁bb', '▁=', '▁byteBuffer', '.', 'slice', '().', 'order', '(', 'byte', 'Buffer', '.', 'order', '());', 'Float', 'Buffer', '▁result', '▁=', '▁new', '▁Float', 'To', 'ByteBuffer', 'Adapter', '(', 'bb', ');', 'byte', 'Buffer', '.', 'clear', '();', 'return', '▁result', ';}']
['▁public', '▁Describe', 'Snapshot', 'Sched', 'ules', 'Result', '▁describe', 'Snapshot', 'Sched', 'ules', '(', 'Des', 'cribe', 'Snapshot', 'Sched', 'ules', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Snapshot', 'Sched', 'ules', '(', 'request', ');', '}']
['▁public', '▁List', 'Images', 'Result', '▁list', 'Images', '(', 'List', 'Images', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'List', 'Images', '(', 'request', ');', '}']
['▁public', '▁Diff', '(', 'int', '▁ins', ',', '▁int', '▁del', ',', '▁int', '▁rep', ',', '▁int', '▁noop', ')', '▁{', 'INSERT', '▁=', '▁ins', ';', 'DELETE', '▁=', '▁del', ';', 'REPLACE', '▁=', '▁rep', ';', 'NO', 'OP', '▁=', '▁noop', ';}']
['▁public', '▁String', '▁to', 'Formula', 'String', '(', 'String', '[]', '▁operands', '){', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '(', 'oper', 'ands', '[', '▁0', '▁]);', 'buffer', '.', 'append', '(",', '");', 'buffer', '.', 'append', '(', 'oper', 'ands', '[', '▁1', '▁]);', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁static', '▁void', '▁setup', 'Environment', '(', 'String', '[]', '▁workbook', 'Names', ',', '▁Fork', 'ed', 'Evaluator', '[]', '▁evalu', 'ators', ')', '▁{', 'Workbook', 'Evaluator', '[]', '▁wb', 'E', 'vals', '▁=', '▁new', '▁Work', 'book', 'Evaluator', '[', 'eval', 'u', 'ators', '.', 'length', '];', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁wb', 'E', 'vals', '.', 'length', ';', '▁i', '++)', '▁{', 'wb', 'E', 'vals', '[', 'i', ']', '▁=', '▁evalu', 'ators', '[', 'i', '].', '_', 'eval', 'uator', ';}', 'Col', 'lab', 'or', 'ating', 'Work', 'books', 'Environment', '.', 'setup', '(', 'work', 'book', 'Names', ',', '▁wb', 'E', 'vals', ');', '}']
['▁public', '▁List', 'Photo', 'Tags', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'List', 'Photo', 'Tags', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁Random', 'S', 'ampling', 'Fac', 'ets', 'Collector', '(', 'int', '▁sample', 'Size', ',', '▁long', '▁seed', ')', '▁{', 'super', '(', 'false', ');', 'this', '.', 'sample', 'Size', '▁=', '▁sample', 'Size', ';', 'this', '.', 'random', '▁=', '▁new', '▁XOR', 'Shift', '64', 'Random', '(', 'seed', ');', 'this', '.', 'sampled', 'Docs', '▁=', '▁null', ';}']
['▁public', '▁Al', 'locate', 'Static', 'Ip', 'Result', '▁allocate', 'Static', 'Ip', '(', 'Alloc', 'ate', 'Static', 'Ip', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Alloc', 'ate', 'Static', 'Ip', '(', 'request', ');', '}']
['▁public', '▁F', 'eat', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'future', 'Header', '▁=', '▁new', '▁F', 'tr', 'Header', '(', 'in', ');', 'is', 'f', '_', 'shared', 'Feature', 'Type', '▁=', '▁in', '.', 'read', 'Short', '();', 'reserved', '1', '▁=', '▁in', '.', 'read', 'Byte', '();', 'reserved', '2', '▁=', '▁in', '.', 'read', 'Int', '();', 'int', '▁cre', 'f', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', 'cb', 'Feat', 'Data', '▁=', '▁in', '.', 'read', 'Int', '();', 'reserved', '3', '▁=', '▁in', '.', 'read', 'Short', '();', 'cell', 'Refs', '▁=', '▁new', '▁Cell', 'Range', 'Address', '[', 'cre', 'f', '];', 'for', '(', 'int', '▁i', '=0;', '▁i', '<', 'cell', 'Refs', '.', 'length', ';', '▁i', '++)', '▁{', 'cell', 'Refs', '[', 'i', ']', '▁=', '▁new', '▁Cell', 'Range', 'Address', '(', 'in', ');', '}', 'switch', '(', 'is', 'f', '_', 'shared', 'Feature', 'Type', ')', '▁{', 'case', '▁F', 'eat', 'H', 'dr', 'Record', '.', 'SHA', 'RE', 'DF', 'E', 'ATURE', 'S', '_', 'IS', 'F', 'PRO', 'TE', 'CTION', ':', 'shared', 'Feature', '▁=', '▁new', '▁F', 'eat', 'Protection', '(', 'in', ');', 'break', ';', 'case', '▁F', 'eat', 'H', 'dr', 'Record', '.', 'SHA', 'RE', 'DF', 'E', 'ATURE', 'S', '_', 'IS', 'FF', 'EC', '2:', 'shared', 'Feature', '▁=', '▁new', '▁F', 'eat', 'Formula', 'Err', '2(', 'in', ');', 'break', ';', 'case', '▁F', 'eat', 'H', 'dr', 'Record', '.', 'SHA', 'RE', 'DF', 'E', 'ATURE', 'S', '_', 'IS', 'F', 'FACT', 'OID', ':', 'shared', 'Feature', '▁=', '▁new', '▁F', 'eat', 'Smart', 'Tag', '(', 'in', ');', 'break', ';', 'default', ':', 'logger', '.', 'log', '(', '▁POI', 'Logger', '.', 'ERROR', ',', '▁"', 'Unknown', '▁Shared', '▁Feature', '▁"', '▁+', '▁is', 'f', '_', 'shared', 'Feature', 'Type', '▁+', '▁"', '▁found', '!");', '}}']
['▁public', '▁Rev', 'Commit', '▁try', 'Fast', 'Forward', '(', 'Rev', 'Commit', '▁new', 'Commit', ')', '▁throws', '▁IOException', ',', 'Git', 'API', 'Exception', '▁{', 'Ref', '▁head', '▁=', '▁getH', 'ead', '();', 'ObjectId', '▁head', 'Id', '▁=', '▁head', '.', 'get', 'ObjectId', '();', 'if', '▁(', 'head', 'Id', '▁==', '▁null', ')', 'throw', '▁new', '▁Ref', 'NotFound', 'Exception', '(', 'Message', 'Format', '.', 'format', '(', 'J', 'Git', 'Text', '.', 'get', '().', 'ref', 'Not', 'Resolved', ',', '▁Constants', '.', 'HEAD', '));', 'Rev', 'Commit', '▁head', 'Commit', '▁=', '▁walk', '.', 'lookup', 'Commit', '(', 'head', 'Id', ');', 'if', '▁(', 'walk', '.', 'is', 'Merged', 'Into', '(', 'new', 'Commit', ',', '▁head', 'Commit', '))', 'return', '▁new', 'Commit', ';', 'String', '▁head', 'Name', '▁=', '▁getH', 'ead', 'Name', '(', 'head', ');', 'return', '▁try', 'Fast', 'Forward', '(', 'head', 'Name', ',', '▁head', 'Commit', ',', '▁new', 'Commit', ');', '}']
['▁public', '▁Create', 'Snapshot', 'Schedule', 'Result', '▁create', 'Snapshot', 'Schedule', '(', 'Create', 'Snapshot', 'Schedule', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Snapshot', 'Schedule', '(', 'request', ');', '}']
['▁public', '▁Record', '▁getNext', '()', '▁{', 'if', '(!', 'hasNext', '())', '▁{', 'throw', '▁new', '▁Runtime', 'Exception', '("', 'Attempt', '▁to', '▁read', '▁past', '▁end', '▁of', '▁record', '▁stream', '");', '}', '_', 'count', 'Read', '▁++', ';', 'return', '▁_', 'list', '.', 'get', '(_', 'next', 'Index', '++', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁Raw', 'Parse', 'Utils', '.', 'decode', '(', 'buf', '.', 'to', 'ByteArray', '());', '}']
['▁public', '▁List', 'Tables', 'Request', '(', 'String', '▁exclusive', 'Start', 'TableName', ')', '▁{', 'set', 'Exclusive', 'Start', 'TableName', '(', 'exclusive', 'Start', 'TableName', ');', '}']
['▁public', '▁Enable', 'Alarm', 'Actions', 'Result', '▁enable', 'Alarm', 'Actions', '(', 'Enable', 'Alarm', 'Actions', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Enable', 'Alarm', 'Actions', '(', 'request', ');', '}']
['▁public', '▁Builder', '()', '▁{', 'this', '(', 'true', ');', '}']
['▁public', '▁boolean', '▁equals', '(', 'Object', '▁obj', ')', '▁{', 'final', '▁State', '▁other', '▁=', '▁(', 'State', ')', '▁obj', ';', 'return', '▁is', '_', 'final', '▁==', '▁other', '.', 'is', '_', 'final', '&&', '▁Arrays', '.', 'equals', '(', 'this', '.', 'labels', ',', '▁other', '.', 'labels', ')', '&&', '▁reference', 'Equals', '(', 'this', '.', 'states', ',', '▁other', '.', 'states', ');', '}']
['▁public', '▁TokenStream', '▁create', '(', 'Token', 'Stream', '▁input', ')', '▁{', 'return', '▁new', '▁English', 'P', 'oss', 'ess', 'ive', 'Filter', '(', 'input', ');', '}']
['▁public', '▁void', '▁clear', 'Formatting', '()', '▁{', '_', 'string', '▁=', '▁clone', 'String', 'If', 'Required', '();', '_', 'string', '.', 'clear', 'Formatting', '();', 'addTo', 'S', 'ST', 'If', 'Required', '();', '}']
['▁public', '▁int', '▁get', '(', 'int', '▁index', ',', '▁long', '[]', '▁arr', ',', '▁int', '▁off', ',', '▁int', '▁len', ')', '▁{', 'assert', '▁len', '▁>', '▁0', '▁:', '▁"', 'len', '▁must', '▁be', '▁>', '▁0', '▁(', 'got', '▁"', '▁+', '▁len', '▁+', '▁")', '";', 'assert', '▁index', '▁>=', '▁0', '▁&&', '▁index', '▁<', '▁value', 'Count', ';', 'len', '▁=', '▁Math', '.', 'min', '(', 'len', ',', '▁value', 'Count', '▁-', '▁index', ');', 'Arrays', '.', 'fill', '(', 'arr', ',', '▁off', ',', '▁off', '▁+', '▁len', ',', '▁0);', 'return', '▁len', ';}']
['▁public', '▁Delete', 'Route', 'Response', 'Result', '▁delete', 'Route', 'Response', '(', 'Delete', 'Route', 'Response', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'Route', 'Response', '(', 'request', ');', '}']
['▁public', '▁String', '▁to', 'Private', 'String', '()', '▁{', 'return', '▁format', '(', 'true', ',', '▁false', ');', '}']
['▁public', '▁Create', 'Pres', 'ign', 'ed', 'Domain', 'Url', 'Result', '▁create', 'Pres', 'ign', 'ed', 'Domain', 'Url', '(', 'Create', 'Pres', 'ign', 'ed', 'Domain', 'Url', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Pres', 'ign', 'ed', 'Domain', 'Url', '(', 'request', ');', '}']
['▁public', '▁void', '▁write', '(', 'int', '▁one', 'Char', ')', '▁{', 'do', 'Write', '(', 'new', '▁char', '[]', '▁{', '▁(', 'char', ')', '▁one', 'Char', '▁},', '▁0,', '▁1);', '}']
['▁public', '▁S', 'ST', 'Record', '▁getS', 'ST', 'Record', '()', '▁{', 'return', '▁sst', 'Record', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"', 'term', '="', '▁+', '▁term', '▁+', '▁",', 'field', '="', '▁+', '▁field', '▁+', '▁",', 'value', '="', '▁+', '▁value', 'ToString', '()', '▁+', '▁",', 'doc', 'ID', 'U', 'pto', '="', '▁+', '▁doc', 'ID', 'U', 'pto', ';}']
['▁public', '▁boolean', '▁isS', 'atur', 'ated', '(', 'F', 'uzzy', 'Set', '▁b', 'loomFilter', ',', '▁Field', 'Info', '▁field', 'Info', ')', '▁{', 'return', '▁b', 'loomFilter', '.', 'get', 'Sat', 'uration', '()', '▁>', '▁0.9', 'f', ';}']
['▁public', '▁Builder', '(', 'boolean', '▁ignore', 'Case', ')', '▁{', 'this', '.', 'ignore', 'Case', '▁=', '▁ignore', 'Case', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁getClass', '().', 'getName', '()+', '▁"(', 'max', 'Basic', 'Queries', ':', '▁"', '▁+', '▁max', 'Basic', 'Queries', '+', '▁",', '▁queries', 'Made', ':', '▁"', '▁+', '▁queries', 'Made', '+', '▁")', '";', '}']
['▁public', '▁Delete', 'DataSource', 'Result', '▁delete', 'DataSource', '(', 'Delete', 'DataSource', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Delete', 'DataSource', '(', 'request', ');', '}']
['▁public', '▁Reb', 'oot', 'Node', 'Result', '▁reboot', 'Node', '(', 'Reb', 'oot', 'Node', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Reb', 'oot', 'Node', '(', 'request', ');', '}']
['▁public', '▁void', '▁process', 'Child', 'Records', '()', '▁{', 'convert', 'Raw', 'Bytes', 'To', 'E', 'sch', 'er', 'Records', '();', '}']
['▁public', '▁Create', 'OrUpdate', 'Tags', 'Result', '▁create', 'OrUpdate', 'Tags', '(', 'Create', 'OrUpdate', 'Tags', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'OrUpdate', 'Tags', '(', 'request', ');', '}']
['▁public', '▁File', 'Snapshot', '▁getS', 'n', 'ap', 'Shot', '()', '▁{', 'return', '▁snap', 'Shot', ';}']
['▁public', '▁InputStream', '▁open', 'Resource', '(', 'String', '▁resource', ')', '▁throws', '▁IOException', '▁{', 'final', '▁InputStream', '▁stream', '▁=', '▁(', 'c', 'lazz', '▁!=', '▁null', ')', '▁?', 'c', 'lazz', '.', 'getResource', 'AsStream', '(', 'resource', ')', '▁:', 'loader', '.', 'getResource', 'AsStream', '(', 'resource', ');', 'if', '▁(', 'stream', '▁==', '▁null', ')', 'throw', '▁new', '▁IOException', '("', 'Resource', '▁not', '▁found', ':', '▁"', '▁+', '▁resource', ');', 'return', '▁stream', ';}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '(', '64', ');', 'sb', '.', 'append', '(', 'getClass', '().', 'getName', '()).', 'append', '("', '▁[', '");', 'sb', '.', 'append', '("', 'sid', '="', ').', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(_', 'sid', '));', 'sb', '.', 'append', '("', '▁size', '="', ').', 'append', '(_', 'data', '.', 'length', ');', 'sb', '.', 'append', '("', '▁:', '▁"', ').', 'append', '(', 'Hex', 'Dump', '.', 'to', 'Hex', '(_', 'data', '));', 'sb', '.', 'append', '("', ']\\', 'n', '");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁int', '▁nextIndex', '()', '▁{', 'return', '▁index', ';}']
['▁public', '▁CharSequence', '▁to', 'QueryString', '(', 'Escape', 'Query', 'Syntax', '▁esc', 'aper', ')', '▁{', 'if', '▁(', 'is', 'Default', 'Field', '(', 'this', '.', 'field', '))', '▁{', 'return', '▁"\\"', '"', '▁+', '▁get', 'Term', 'Escape', 'Quoted', '(', 'esc', 'aper', ')', '▁+', '▁"\\"', '";', '}', '▁else', '▁{', 'return', '▁this', '.', 'field', '▁+', '▁":"', '▁+', '▁"\\"', '"', '▁+', '▁get', 'Term', 'Escape', 'Quoted', '(', 'esc', 'aper', ')', '▁+', '▁"\\"', '";', '}}']
['▁public', '▁Calc', 'Mode', 'Record', '▁clone', '()', '▁{', 'return', '▁copy', '();', '}']
['▁public', '▁boolean', '▁is', 'Output', '()', '▁{', 'return', '▁output', ';}']
['▁public', '▁Create', 'Network', 'Interface', 'Result', '▁create', 'Network', 'Interface', '(', 'Create', 'Network', 'Interface', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Network', 'Interface', '(', 'request', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'password', ');', '}']
['▁public', '▁Stop', 'Dom', 'inant', 'Language', 'Detection', 'Job', 'Result', '▁stop', 'Dom', 'inant', 'Language', 'Detection', 'Job', '(', 'Stop', 'Dom', 'inant', 'Language', 'Detection', 'Job', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Stop', 'Dom', 'inant', 'Language', 'Detection', 'Job', '(', 'request', ');', '}']
['▁public', '▁E', 'CS', 'Metadata', 'Service', 'Credentials', 'Fetcher', '▁with', 'Connection', 'Timeout', '(', 'int', '▁milliseconds', ')', '▁{', 'this', '.', 'connection', 'Timeout', 'In', 'Milliseconds', '▁=', '▁milliseconds', ';', 'return', '▁this', ';}']
['▁public', '▁Get', 'Gateway', 'Group', 'Result', '▁getG', 'ateway', 'Group', '(', 'Get', 'Gateway', 'Group', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Gateway', 'Group', '(', 'request', ');', '}']
['▁public', '▁Float', 'Buffer', '▁slice', '()', '▁{', 'return', '▁new', '▁ReadOnly', 'Float', 'Array', 'Buffer', '(', 'remaining', '(),', '▁backing', 'Array', ',', '▁offset', '▁+', '▁position', ');', '}']
['▁public', '▁static', '▁String', '▁join', '(', 'Collection', '<', 'String', '>', '▁parts', ',', '▁String', '▁separator', ',', 'String', '▁last', 'Separator', ')', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'int', '▁i', '▁=', '▁0;', 'int', '▁lastIndex', '▁=', '▁parts', '.', 'size', '()', '▁-', '▁1;', 'for', '▁(', 'String', '▁part', '▁:', '▁parts', ')', '▁{', 'sb', '.', 'append', '(', 'part', ');', 'if', '▁(', 'i', '▁==', '▁lastIndex', '▁-', '▁1)', '▁{', 'sb', '.', 'append', '(', 'last', 'Separator', ');', '}', '▁else', '▁if', '▁(', 'i', '▁!=', '▁lastIndex', ')', '▁{', 'sb', '.', 'append', '(', 'separator', ');', '}', 'i', '++;', '}', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'return', '▁"', '("', '▁+', '▁a', '.', 'toString', '()', '▁+', '▁"', '▁AND', '▁"', '▁+', '▁b', '.', 'toString', '()', '▁+', '▁")', '";', '▁}']
['▁public', '▁List', 'Subscriptions', 'By', 'Topic', 'Request', '(', 'String', '▁topic', 'Arn', ',', '▁String', '▁nextToken', ')', '▁{', 'set', 'Topic', 'Arn', '(', 'topic', 'Arn', ');', 'set', 'Next', 'Token', '(', 'next', 'Token', ');', '}']
['▁public', '▁byte', '▁readByte', '()', '▁{', 'return', '▁bytes', '[', 'pos', '--', '];', '}']
['▁public', '▁Term', 'inate', 'Client', 'V', 'pn', 'Connections', 'Result', '▁terminate', 'Client', 'V', 'pn', 'Connections', '(', 'Term', 'inate', 'Client', 'V', 'pn', 'Connections', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Term', 'inate', 'Client', 'V', 'pn', 'Connections', '(', 'request', ');', '}']
['▁public', '▁Receive', 'Message', 'Request', '(', 'String', '▁queue', 'Url', ')', '▁{', 'set', 'Queue', 'Url', '(', 'queue', 'Url', ');', '}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'bar', 'Space', ');', 'out', '.', 'write', 'Short', '(', 'field', '_2_', 'category', 'Space', ');', 'out', '.', 'write', 'Short', '(', 'field', '_3_', 'format', 'Flags', ');', '}']
['▁public', '▁Object', '▁common', '(', 'Object', '▁output', '1,', '▁Object', '▁output', '2)', '▁{', 'return', '▁outputs', '.', 'common', '((', 'T', ')', '▁output', '1,', '▁(', 'T', ')', '▁output', '2);', '}']
['▁public', '▁Create', 'Variable', 'Result', '▁create', 'Variable', '(', 'Create', 'Variable', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Variable', '(', 'request', ');', '}']
['▁public', '▁static', '▁final', '▁int', '▁match', '(', 'byte', '[]', '▁b', ',', '▁int', '▁ptr', ',', '▁byte', '[]', '▁src', ')', '▁{', 'if', '▁(', 'ptr', '▁+', '▁src', '.', 'length', '▁>', '▁b', '.', 'length', ')', 'return', '▁-1;', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁src', '.', 'length', ';', '▁i', '++,', '▁ptr', '++)', 'if', '▁(', 'b', '[', 'ptr', ']', '▁!=', '▁src', '[', 'i', '])', 'return', '▁-1;', 'return', '▁ptr', ';}']
['▁public', '▁int', '▁fill', 'Fields', '(', 'byte', '[]', '▁data', ',', '▁int', '▁offset', ',', '▁E', 'sch', 'er', 'Record', 'Factory', '▁record', 'Factory', ')', '▁{', 'int', '▁bytes', 'Remaining', '▁=', '▁read', 'Header', '(', '▁data', ',', '▁offset', '▁);', 'int', '▁pos', '▁=', '▁offset', '▁+', '▁8', ';', 'int', '▁size', '▁=', '▁0;', 'field', '_1_', 'rect', 'X', '1', '▁=', '▁L', 'ittle', 'Endian', '.', 'getInt', '(', '▁data', ',', '▁pos', '▁+', '▁size', '▁);', 'size', '+', '=4', ';', 'field', '_2_', 'rect', 'Y', '1', '▁=', '▁L', 'ittle', 'Endian', '.', 'getInt', '(', '▁data', ',', '▁pos', '▁+', '▁size', '▁);', 'size', '+', '=4', ';', 'field', '_3_', 'rect', 'X', '2', '▁=', '▁L', 'ittle', 'Endian', '.', 'getInt', '(', '▁data', ',', '▁pos', '▁+', '▁size', '▁);', 'size', '+', '=4', ';', 'field', '_4_', 'rect', 'Y', '2', '▁=', '▁L', 'ittle', 'Endian', '.', 'getInt', '(', '▁data', ',', '▁pos', '▁+', '▁size', '▁);', 'size', '+', '=4', ';', 'bytes', 'Remaining', '▁-=', '▁size', ';', 'if', '▁(', 'bytes', 'Remaining', '▁!=', '▁0)', '▁{', 'throw', '▁new', '▁Record', 'FormatException', '("', 'Expected', '▁no', '▁remaining', '▁bytes', '▁but', '▁got', '▁"', '▁+', '▁bytes', 'Remaining', ');', '}', 'return', '▁8', '▁+', '▁size', '▁+', '▁bytes', 'Remaining', ';}']
['▁public', '▁Create', 'Cloud', 'Front', 'Origin', 'Access', 'Identity', 'Result', '▁create', 'Cloud', 'Front', 'Origin', 'Access', 'Identity', '(', 'Create', 'Cloud', 'Front', 'Origin', 'Access', 'Identity', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'Cloud', 'Front', 'Origin', 'Access', 'Identity', '(', 'request', ');', '}']
['▁public', '▁boolean', '▁is', 'Namespace', 'Aware', '()', '▁{', 'return', '▁getFeature', '▁(', 'Xml', 'PullParser', '.', 'FEATURE', '_', 'PROCESS', '_', 'NAMESPACE', 'S', ');', '}']
['▁public', '▁void', '▁setO', 'verr', 'id', 'able', '(', 'boolean', '▁on', ')', '▁{', 'o', 'verr', 'id', 'able', '▁=', '▁on', ';}']
['▁public', '▁String', '▁getClassName', '()', '▁{', 'return', '▁className', ';}']
['▁public', '▁synchronized', '▁Directory', 'Reader', '▁getIndex', 'Reader', '()', '▁{', 'if', '▁(', 'index', 'Reader', '▁!=', '▁null', ')', '▁{', 'index', 'Reader', '.', 'inc', 'Ref', '();', '}', 'return', '▁index', 'Reader', ';}']
['▁public', '▁int', '▁indexOf', 'Key', '(', 'int', '▁key', ')', '▁{', 'return', '▁binarySearch', '(', 'm', 'Keys', ',', '▁0,', '▁m', 'Size', ',', '▁key', ');', '}']
['▁public', '▁Bl', 'ank', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'row', '▁=', '▁in', '.', 'read', 'U', 'Short', '();', 'field', '_2_', 'col', '▁=', '▁in', '.', 'read', 'Short', '();', 'field', '_3_', 'xf', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁long', '▁length', '()', '▁{', 'return', '▁length', ';}']
['▁public', '▁Password', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'field', '_1_', 'password', '▁=', '▁in', '.', 'read', 'Short', '();', '}']
['▁public', '▁HashMap', '(', 'int', '▁capacity', ',', '▁float', '▁load', 'Factor', ')', '▁{', 'this', '(', 'capacity', ');', 'if', '▁(', 'load', 'Factor', '▁<=', '▁0', '▁||', '▁Float', '.', 'is', 'NaN', '(', 'load', 'Factor', '))', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '("', 'Load', '▁factor', ':', '▁"', '▁+', '▁load', 'Factor', ');', '}}']
['▁public', '▁void', '▁run', '()', '▁{', 'long', '▁last', 'Re', 'open', 'Start', 'NS', '▁=', '▁System', '.', 'nan', 'oTime', '();', 'while', '▁(!', 'finish', ')', '▁{', 'while', '▁(!', 'finish', ')', '▁{', 're', 'open', 'Lock', '.', 'lock', '();', 'try', '▁{', 'boolean', '▁has', 'Waiting', '▁=', '▁waiting', 'Gen', '▁>', '▁searching', 'Gen', ';', 'final', '▁long', '▁next', 'Re', 'open', 'Start', 'NS', '▁=', '▁last', 'Re', 'open', 'Start', 'NS', '▁+', '▁(', 'has', 'Waiting', '▁?', '▁target', 'Min', 'Stale', 'NS', '▁:', '▁target', 'Max', 'Stale', 'NS', ');', 'final', '▁long', '▁sleep', 'NS', '▁=', '▁next', 'Re', 'open', 'Start', 'NS', '▁-', '▁System', '.', 'nan', 'oTime', '();', 'if', '▁(', 'sleep', 'NS', '▁>', '▁0)', '▁{', 're', 'open', 'Cond', '.', 'await', 'Nanos', '(', 'sleep', 'NS', ');', '}', '▁else', '▁{', 'break', ';', '}}', '▁catch', '▁(', 'Inter', 'ruptedException', '▁ie', ')', '▁{', 'Thread', '.', 'currentThread', '().', 'interrupt', '();', 'return', ';}', '▁finally', '▁{', 're', 'open', 'Lock', '.', 'un', 'lock', '();', '}}', 'if', '▁(', 'finish', ')', '▁{', 'break', ';}', 'last', 'Re', 'open', 'Start', 'NS', '▁=', '▁System', '.', 'nan', 'oTime', '();', 'refresh', 'Start', 'Gen', '▁=', '▁writer', '.', 'get', 'Max', 'Completed', 'SequenceNumber', '();', 'try', '▁{', 'manager', '.', 'maybe', 'Refresh', 'Blocking', '();', '}', '▁catch', '▁(', 'IOException', '▁ioe', ')', '▁{', 'throw', '▁new', '▁Runtime', 'Exception', '(', 'io', 'e', ');', '}}', '}']
['▁public', '▁Delete', 'Login', 'Profile', 'Request', '(', 'String', '▁userName', ')', '▁{', 'set', 'UserName', '(', 'userName', ');', '}']
['▁public', '▁E', '▁poll', 'First', '()', '▁{', 'return', '▁(', 'size', '▁==', '▁0)', '▁?', '▁null', '▁:', '▁remove', 'First', 'Impl', '();', '}']
['▁public', '▁Create', 'Photo', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Create', 'Photo', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁String', '▁getName', '()', '▁{', 'return', '▁"', 'resolve', '";', '▁}']
['▁public', '▁int', '▁find', 'EndOffset', '(', 'StringBuilder', '▁buffer', ',', '▁int', '▁start', ')', '▁{', 'if', '(', '▁start', '▁>', '▁buffer', '.', 'length', '()', '▁||', '▁start', '▁<', '▁0', '▁)', '▁return', '▁start', ';', 'int', '▁offset', ',', '▁count', '▁=', '▁max', 'Scan', ';', 'for', '(', '▁offset', '▁=', '▁start', ';', '▁offset', '▁<', '▁buffer', '.', 'length', '()', '▁&&', '▁count', '▁>', '▁0;', '▁count', '--', '▁){', 'if', '(', '▁boundary', 'Chars', '.', 'contains', '(', '▁buffer', '.', 'charAt', '(', '▁offset', '▁)', '▁)', '▁)', '▁return', '▁offset', ';', 'offset', '++;', '}', 'return', '▁start', ';}']
['▁public', '▁void', '▁setObject', 'Checker', '(', 'Object', 'Checker', '▁oc', ')', '▁{', 'obj', 'Check', '▁=', '▁oc', ';}']
['▁public', '▁Base', 'Ref', '(', 'Area', 'Eval', '▁ae', ')', '▁{', '_', 'ref', 'Eval', '▁=', '▁null', ';', '_', 'area', 'Eval', '▁=', '▁ae', ';', '_', 'first', 'Row', 'Index', '▁=', '▁ae', '.', 'get', 'First', 'Row', '();', '_', 'first', 'ColumnIndex', '▁=', '▁ae', '.', 'get', 'First', 'Column', '();', '_', 'height', '▁=', '▁ae', '.', 'get', 'Last', 'Row', '()', '▁-', '▁ae', '.', 'get', 'First', 'Row', '()', '▁+', '▁1;', '_', 'width', '▁=', '▁ae', '.', 'get', 'Last', 'Column', '()', '▁-', '▁ae', '.', 'get', 'First', 'Column', '()', '▁+', '▁1;', '}']
['▁public', '▁Create', 'V', 'pc', 'Endpoint', 'Result', '▁create', 'V', 'pc', 'Endpoint', '(', 'Create', 'V', 'pc', 'Endpoint', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'V', 'pc', 'Endpoint', '(', 'request', ');', '}']
['▁public', '▁D', 'eregister', 'Workspace', 'Directory', 'Result', '▁d', 'eregister', 'Workspace', 'Directory', '(', 'D', 'eregister', 'Workspace', 'Directory', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'D', 'eregister', 'Workspace', 'Directory', '(', 'request', ');', '}']
['▁public', '▁Chart', 'F', 'RT', 'Info', 'Record', '(', 'Record', 'InputStream', '▁in', ')', '▁{', 'rt', '▁=', '▁in', '.', 'read', 'Short', '();', 'gr', 'bit', 'F', 'rt', '▁=', '▁in', '.', 'read', 'Short', '();', 'ver', 'Origin', 'ator', '▁=', '▁in', '.', 'read', 'Byte', '();', 'ver', 'Writer', '▁=', '▁in', '.', 'read', 'Byte', '();', 'int', '▁c', 'CF', 'RT', 'ID', '▁=', '▁in', '.', 'read', 'Short', '();', 'rg', 'CF', 'RT', 'ID', '▁=', '▁new', '▁CF', 'RT', 'ID', '[', 'c', 'CF', 'RT', 'ID', '];', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁c', 'CF', 'RT', 'ID', ';', '▁i', '++)', '▁{', 'rg', 'CF', 'RT', 'ID', '[', 'i', ']', '▁=', '▁new', '▁CF', 'RT', 'ID', '(', 'in', ');', '}}']
['▁public', '▁Mer', 'ger', '▁new', 'Merger', '(', 'Repository', '▁db', ')', '▁{', 'return', '▁new', '▁One', 'Side', '(', 'db', ',', '▁tree', 'Index', ');', '}']
['▁public', '▁Create', 'DataSource', 'From', 'Red', 'shift', 'Result', '▁create', 'DataSource', 'From', 'Red', 'shift', '(', 'Create', 'DataSource', 'From', 'Red', 'shift', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Create', 'DataSource', 'From', 'Red', 'shift', '(', 'request', ');', '}']
['▁public', '▁void', '▁clear', 'D', 'FA', '()', '▁{', 'for', '▁(', 'int', '▁d', '▁=', '▁0;', '▁d', '▁<', '▁decision', 'To', 'D', 'FA', '.', 'length', ';', '▁d', '++)', '▁{', 'decision', 'To', 'D', 'FA', '[', 'd', ']', '▁=', '▁new', '▁D', 'FA', '(', 'at', 'n', '.', 'get', 'Decision', 'State', '(', 'd', '),', '▁d', ');', '}}']
['▁public', '▁void', '▁remove', 'Name', '(', 'String', '▁name', ')', '▁{', 'int', '▁index', '▁=', '▁getName', 'Index', '(', 'name', ');', 'remove', 'Name', '(', 'index', ');', '}']
['▁public', '▁String', '▁toString', '(){', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '(', '▁"[', 'Right', 'Margin', ']\\', 'n', '"', '▁);', 'buffer', '.', 'append', '(', '▁"', '▁.', 'margin', '▁=', '▁"', '▁).', 'append', '(', '▁"', '▁("', '▁).', 'append', '(', '▁getM', 'argin', '()', '▁).', 'append', '(', '▁"', '▁)', '\\', 'n', '"', '▁);', 'buffer', '.', 'append', '(', '▁"[', '/', 'Right', 'Margin', ']\\', 'n', '"', '▁);', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁Refresh', 'All', 'Record', '▁clone', '()', '▁{', 'return', '▁copy', '();', '}']
['▁public', '▁Standard', 'Query', 'Node', 'Processor', 'Pipeline', '(', 'Query', 'Config', 'Handler', '▁query', 'Config', ')', '▁{', 'super', '(', 'query', 'Config', ');', 'add', '(', 'new', '▁Wildcard', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Multi', 'Field', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁F', 'uzzy', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Reg', 'exp', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Match', 'All', 'Docs', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Open', 'Range', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Point', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Point', 'Range', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Term', 'Range', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Allow', 'Leading', 'Wildcard', 'Processor', '());', 'add', '(', 'new', '▁Analyzer', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Ph', 'rase', 'S', 'lop', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Boolean', 'Query', '2', 'Modifier', 'Node', 'Processor', '());', 'add', '(', 'new', '▁No', 'Child', 'Opt', 'imization', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Remove', 'Deleted', 'Query', 'Nodes', 'Processor', '());', 'add', '(', 'new', '▁Remove', 'Empty', 'Non', 'Leaf', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Boolean', 'Single', 'Child', 'Opt', 'imization', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Default', 'Phrase', 'S', 'lop', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Boost', 'Query', 'Node', 'Processor', '());', 'add', '(', 'new', '▁Multi', 'Term', 'Rewrite', 'Method', 'Processor', '());', '}']
['▁public', '▁String', '▁format', 'AsString', '(', 'String', '▁sheet', 'Name', ',', '▁boolean', '▁use', 'Absolute', 'Address', ')', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'if', '▁(', 'sheet', 'Name', '▁!=', '▁null', ')', '▁{', 'sb', '.', 'append', '(', 'Sheet', 'Name', 'Formatter', '.', 'format', '(', 'sheet', 'Name', '));', 'sb', '.', 'append', '("', '!");', '}', 'Cell', 'Reference', '▁cell', 'Ref', 'From', '▁=', '▁new', '▁Cell', 'Reference', '(', 'get', 'First', 'Row', '(),', '▁getFirst', 'Column', '(),', 'use', 'Absolute', 'Address', ',', '▁use', 'Absolute', 'Address', ');', 'Cell', 'Reference', '▁cell', 'Ref', 'To', '▁=', '▁new', '▁Cell', 'Reference', '(', 'get', 'Last', 'Row', '(),', '▁getLast', 'Column', '(),', 'use', 'Absolute', 'Address', ',', '▁use', 'Absolute', 'Address', ');', 'sb', '.', 'append', '(', 'cell', 'Ref', 'From', '.', 'format', 'AsString', '());', 'if', '(!', 'cell', 'Ref', 'From', '.', 'equals', '(', 'cell', 'Ref', 'To', ')', '||', '▁is', 'Full', 'Column', 'Range', '()', '▁||', '▁is', 'Full', 'Row', 'Range', '()){', 'sb', '.', 'append', "(':", "');", 'sb', '.', 'append', '(', 'cell', 'Ref', 'To', '.', 'format', 'AsString', '());', '}', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁ByteBuffer', '▁put', '(', 'int', '▁index', ',', '▁byte', '▁value', ')', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁void', '▁mode', '(', 'int', '▁m', ')', '▁{', '_', 'mode', '▁=', '▁m', ';}']
['▁public', '▁Short', 'Buffer', '▁slice', '()', '▁{', 'return', '▁new', '▁Read', 'Write', 'Short', 'Array', 'Buffer', '(', 'remaining', '(),', '▁backing', 'Array', ',', '▁offset', '▁+', '▁position', ');', '}']
['▁public', '▁void', '▁set', '(', 'int', '▁index', ',', '▁long', '▁n', ')', '▁{', 'if', '▁(', 'count', '▁<', '▁index', ')', 'throw', '▁new', '▁Array', 'IndexOutOfBounds', 'Exception', '(', 'index', ');', 'else', '▁if', '▁(', 'count', '▁==', '▁index', ')', 'add', '(', 'n', ');', 'else', 'entries', '[', 'index', ']', '▁=', '▁n', ';}']
['▁public', '▁ByteBuffer', '▁put', 'Float', '(', 'float', '▁value', ')', '▁{', 'throw', '▁new', '▁ReadOnly', 'BufferException', '();', '}']
['▁public', '▁static', '▁double', '▁max', '(', 'double', '[]', '▁values', ')', '▁{', 'double', '▁max', '▁=', '▁Double', '.', 'NE', 'G', 'ATIVE', '_', 'INFINITY', ';', 'for', '▁(', 'double', '▁value', '▁:', '▁values', ')', '▁{', 'max', '▁=', '▁Math', '.', 'max', '(', 'max', ',', '▁value', ');', '}', 'return', '▁max', ';}']
['▁public', '▁Update', 'Repo', 'Web', 'hook', 'Request', '()', '▁{', 'super', '("', 'cr', '",', '▁"2016', '-06', '-07', '",', '▁"', 'Update', 'Repo', 'Web', 'hook', '",', '▁"', 'cr', '");', 'set', 'Uri', 'Pattern', '("/', 'repos', '/', '[', 'Repo', 'Namespace', ']/', '[', 'Repo', 'Name', ']/', 'web', 'hooks', '/', '[', 'Web', 'hook', 'Id', ']', '");', 'set', 'Method', '(', 'Method', 'Type', '.', 'POST', ');', '}']
['▁public', '▁Delete', 'Attributes', 'Request', '(', 'String', '▁domain', 'Name', ',', '▁String', '▁itemName', ',', '▁java', '.', 'util', '.', 'List', '<', 'Attribute', '>', '▁attributes', ',', '▁Update', 'Condition', '▁expected', ')', '▁{', 'set', 'Domain', 'Name', '(', 'domain', 'Name', ');', 'setItem', 'Name', '(', 'item', 'Name', ');', 'set', 'Attributes', '(', 'attributes', ');', 'set', 'Expected', '(', 'expected', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'sb', '.', 'append', '("[', 'S', 'X', 'PI', ']\\', 'n', '");', 'for', '▁(', 'int', '▁i', '▁=', '▁0;', '▁i', '▁<', '▁_', 'field', 'Infos', '.', 'length', ';', '▁i', '++)', '▁{', 'sb', '.', 'append', '("', '▁item', '[', '").', 'append', '(', 'i', ').', 'append', '("', ']="', ');', '_', 'field', 'Infos', '[', 'i', '].', 'append', 'Debug', 'Info', '(', 'sb', ');', 'sb', '.', 'append', "('\\", 'n', "');", '}', 'sb', '.', 'append', '("[', '/', 'S', 'X', 'PI', ']\\', 'n', '");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁boolean', '▁is', 'Successful', '()', '▁{', 'if', '▁(', 'merge', 'Result', '▁!=', '▁null', ')', 'return', '▁merge', 'Result', '.', 'get', 'Merge', 'Status', '().', 'is', 'Successful', '();', 'else', '▁if', '▁(', 're', 'base', 'Result', '▁!=', '▁null', ')', 'return', '▁re', 'base', 'Result', '.', 'get', 'Status', '().', 'is', 'Successful', '();', 'return', '▁true', ';}']
['▁public', '▁void', '▁setBytes', 'Value', '(', 'byte', '[]', '▁value', ')', '▁{', 'set', 'Bytes', 'Value', '(', 'new', '▁BytesRef', '(', 'value', '));', '}']
['▁public', '▁Describe', 'Connections', 'Result', '▁describe', 'Connections', '(', 'Des', 'cribe', 'Connections', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Connections', '(', 'request', ');', '}']
['▁public', '▁Delete', 'Photos', 'Request', '()', '▁{', 'super', '("', 'Cloud', 'Photo', '",', '▁"2017', '-07', '-11', '",', '▁"', 'Delete', 'Photos', '",', '▁"', 'cloud', 'photo', '");', 'set', 'Protocol', '(', 'Protocol', 'Type', '.', 'HTTPS', ');', '}']
['▁public', '▁void', '▁add', '(', 'E', '▁object', ')', '▁{', 'iterator', '.', 'add', '(', 'object', ');', 'sub', 'List', '.', 'size', 'Changed', '(', 'true', ');', 'end', '++;', '}']
['▁public', '▁static', '▁ByteBuffer', '▁allocate', '(', 'int', '▁capacity', ')', '▁{', 'if', '▁(', 'capacity', '▁<', '▁0)', '▁{', 'throw', '▁new', '▁IllegalArgument', 'Exception', '();', '}', 'return', '▁new', '▁Read', 'Write', 'Heap', 'ByteBuffer', '(', 'capacity', ');', '}']
['▁public', '▁S', 'r', 'nd', 'Query', '▁getSub', 'Query', '(', 'int', '▁qn', ')', '▁{', 'return', '▁queries', '.', 'get', '(', 'q', 'n', ');', '}']
['▁public', '▁float', '▁current', 'Score', '(', 'int', '▁docId', ',', '▁String', '▁field', ',', '▁int', '▁start', ',', '▁int', '▁end', ',', '▁int', '▁num', 'Payload', 's', 'Seen', ',', '▁float', '▁current', 'Score', ',', '▁float', '▁current', 'Payload', 'Score', ')', '▁{', 'if', '▁(', 'num', 'Payload', 's', 'Seen', '▁==', '▁0)', '▁{', 'return', '▁current', 'Payload', 'Score', ';}', '▁else', '▁{', 'return', '▁Math', '.', 'min', '(', 'current', 'Payload', 'Score', ',', '▁current', 'Score', ');', '}}']
['▁public', '▁String', '▁toString', '(){', 'StringBuilder', '▁sb', '▁=', '▁new', '▁StringBuilder', '();', 'sb', '.', 'append', '("[', 'BL', 'ANK', ']\\', 'n', '");', 'sb', '.', 'append', '("', '▁row', '=', '▁"', ').', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(', 'get', 'Row', '())', ').', 'append', '("\\', 'n', '");', 'sb', '.', 'append', '("', '▁col', '=', '▁"', ').', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(', 'get', 'Column', '())', ').', 'append', '("\\', 'n', '");', 'sb', '.', 'append', '("', '▁xf', '▁=', '▁"', ').', 'append', '(', 'Hex', 'Dump', '.', 'short', 'To', 'Hex', '(', 'get', 'XF', 'Index', '())', ').', 'append', '("\\', 'n', '");', 'sb', '.', 'append', '("[', '/', 'BL', 'ANK', ']\\', 'n', '");', 'return', '▁sb', '.', 'toString', '();', '}']
['▁public', '▁Describe', 'Log', 'Pattern', 'Result', '▁describe', 'Log', 'Pattern', '(', 'Des', 'cribe', 'Log', 'Pattern', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Des', 'cribe', 'Log', 'Pattern', '(', 'request', ');', '}']
['▁public', '▁Register', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', 'Result', '▁register', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', '(', 'Register', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Register', 'Trans', 'it', 'Gateway', 'Multicast', 'Group', 'Members', '(', 'request', ');', '}']
['▁public', '▁Get', 'PhoneNumber', 'Settings', 'Result', '▁getPh', 'one', 'Number', 'Settings', '(', 'Get', 'PhoneNumber', 'Settings', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'PhoneNumber', 'Settings', '(', 'request', ');', '}']
['▁public', '▁ObjectId', '▁getData', '()', '▁{', 'return', '▁data', ';}']
['▁public', '▁boolean', '▁is', 'Direct', '()', '▁{', 'return', '▁false', ';}']
['▁public', '▁Delete', 'Server', 'Certificate', 'Request', '(', 'String', '▁server', 'Certificate', 'Name', ')', '▁{', 'set', 'Server', 'Certificate', 'Name', '(', 'server', 'Certificate', 'Name', ');', '}']
['▁public', '▁StringBuffer', '▁append', '(', 'double', '▁d', ')', '▁{', 'Real', 'ToString', '.', 'getInstance', '().', 'append', 'Double', '(', 'this', ',', '▁d', ');', 'return', '▁this', ';}']
['▁public', '▁Get', 'Evaluation', 'Result', '▁getE', 'val', 'uation', '(', 'Get', 'Evaluation', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Evaluation', '(', 'request', ');', '}']
['▁public', '▁Linked', 'Data', 'Record', '▁getData', 'Name', '(){', 'return', '▁data', 'Name', ';}']
['▁public', '▁boolean', '▁find', '(', 'int', '▁start', ')', '▁{', 'find', 'Pos', '▁=', '▁start', ';', 'if', '▁(', 'find', 'Pos', '▁<', '▁region', 'Start', ')', '▁{', 'find', 'Pos', '▁=', '▁region', 'Start', ';}', '▁else', '▁if', '▁(', 'find', 'Pos', '▁>=', '▁region', 'End', ')', '▁{', 'match', 'Found', '▁=', '▁false', ';', 'return', '▁false', ';}', 'match', 'Found', '▁=', '▁find', 'Impl', '(', 'address', ',', '▁input', ',', '▁find', 'Pos', ',', '▁match', 'Offsets', ');', 'if', '▁(', 'match', 'Found', ')', '▁{', 'find', 'Pos', '▁=', '▁match', 'Offsets', '[1];', '}', 'return', '▁match', 'Found', ';}']
['▁public', '▁Get', 'Lifecycle', 'Policy', 'Preview', 'Result', '▁getL', 'ifecycle', 'Policy', 'Preview', '(', 'Get', 'Lifecycle', 'Policy', 'Preview', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Get', 'Lifecycle', 'Policy', 'Preview', '(', 'request', ');', '}']
['▁public', '▁Single', 'Position', 'Token', 'Stream', '(', 'String', '▁word', ')', '▁{', 'term', 'Att', '▁=', '▁addAttribute', '(', 'Char', 'Term', 'Attribute', '.', 'class', ');', 'pos', 'In', 'cr', 'Att', '▁=', '▁addAttribute', '(', 'Position', 'Increment', 'Attribute', '.', 'class', ');', 'this', '.', 'word', '▁=', '▁word', ';', 'returned', '▁=', '▁true', ';}']
['▁public', '▁void', '▁serialize', '(', 'L', 'ittle', 'Endian', 'Output', '▁out', ')', '▁{', 'out', '.', 'write', 'Short', '(', 'field', '_1_', 'print', '_', 'grid', 'lines', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'final', '▁StringBuilder', '▁s', '▁=', '▁new', '▁StringBuilder', '();', 's', '.', 'append', '(', 'Constants', '.', 'type', 'String', '(', 'getType', '()));', 's', '.', 'append', "('", "▁');", 's', '.', 'append', '(', 'name', '());', 's', '.', 'append', "('", "▁');", 's', '.', 'append', '(', 'commit', 'Time', ');', 's', '.', 'append', "('", "▁');", 'append', 'Core', 'Flags', '(', 's', ');', 'return', '▁s', '.', 'toString', '();', '}']
['▁public', '▁L', 's', 'Remote', 'Command', '▁set', 'Remote', '(', 'String', '▁remote', ')', '▁{', 'check', 'Callable', '();', 'this', '.', 'remote', '▁=', '▁remote', ';', 'return', '▁this', ';}']
['▁public', '▁void', '▁collapse', 'Row', '(', 'int', '▁row', 'Number', ')', '▁{', 'int', '▁startRow', '▁=', '▁find', 'Start', 'Of', 'Row', 'Outline', 'Group', '(', 'row', 'Number', ');', 'Row', 'Record', '▁row', 'Record', '▁=', '▁getRow', '(', 'start', 'Row', ');', 'int', '▁next', 'Row', 'I', 'x', '▁=', '▁write', 'Hidden', '(', 'row', 'Record', ',', '▁startRow', ');', 'Row', 'Record', '▁row', '▁=', '▁getRow', '(', 'next', 'Row', 'I', 'x', ');', 'if', '▁(', 'row', '▁==', '▁null', ')', '▁{', 'row', '▁=', '▁create', 'Row', '(', 'next', 'Row', 'I', 'x', ');', 'insert', 'Row', '(', 'row', ');', '}', 'row', '.', 'set', 'Col', 'apsed', '(', 'true', ');', '}']
['▁public', '▁Assoc', 'iate', 'Skill', 'Group', 'With', 'Room', 'Result', '▁associate', 'Skill', 'Group', 'With', 'Room', '(', 'Assoc', 'iate', 'Skill', 'Group', 'With', 'Room', 'Request', '▁request', ')', '▁{', 'request', '▁=', '▁before', 'Client', 'Execution', '(', 'request', ');', 'return', '▁execute', 'Assoc', 'iate', 'Skill', 'Group', 'With', 'Room', '(', 'request', ');', '}']
['▁public', '▁String', '▁toString', '()', '▁{', 'StringBuilder', '▁buffer', '▁=', '▁new', '▁StringBuilder', '();', 'buffer', '.', 'append', '("[', 'SER', 'IES', 'LIST', ']\\', 'n', '");', 'buffer', '.', 'append', '("', '▁.', 'series', 'Numbers', '=', '▁"', ').', 'append', '("', '▁(', '").', 'append', '(', '▁Arrays', '.', 'toString', '(', 'get', 'Series', 'Numbers', '())', '▁).', 'append', '("', '▁)', '");', 'buffer', '.', 'append', '("\\', 'n', '");', 'buffer', '.', 'append', '("[', '/', 'SER', 'IES', 'LIST', ']\\', 'n', '");', 'return', '▁buffer', '.', 'toString', '();', '}']
['▁public', '▁Query', 'Config', 'Handler', '▁getQuery', 'Config', 'Handler', '()', '▁{', 'return', '▁this', '.', 'query', 'Config', ';}']
['▁public', '▁String', '▁getClass', 'Arg', '()', '▁{', 'if', '▁(', 'null', '▁!=', '▁original', 'Args', ')', '▁{', 'String', '▁className', '▁=', '▁original', 'Args', '.', 'get', '(', 'CLASS', '_', 'NAME', ');', 'if', '▁(', 'null', '▁!=', '▁className', ')', '▁{', 'return', '▁className', ';', '}}', 'return', '▁getClass', '().', 'getName', '();', '}']
